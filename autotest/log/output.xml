<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180427 15:45:24.521" generator="Robot 3.0.3 (Python 2.7.6 on linux2)">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test" id="s1" name="Intergration Auto Test">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/DB" id="s1-s1" name="DB">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/DB/DB_API_Test.txt" id="s1-s1-s1" name="DB API Test">
<test id="s1-s1-s1-t1" name="RDB-24579_DB:execute_DB_regression_tool">
<kw name="Clean DB Log Files" library="DB_utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Prepare DB environment: clean the old files=====</arg>
</arguments>
<msg timestamp="20180427 15:45:24.607" level="INFO">=====Prepare DB environment: clean the old files=====</msg>
<status status="PASS" endtime="20180427 15:45:24.607" starttime="20180427 15:45:24.606"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${sVehicleIp}</arg>
<arg>None</arg>
<arg>22</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:45:24.607" starttime="20180427 15:45:24.607"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${sVehicleUser}</arg>
<arg>${sVehiclePwd}</arg>
</arguments>
<msg timestamp="20180427 15:45:24.608" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:45:26.451" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

 System information disabled due to load higher than 4.0

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 14:46:37 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<msg timestamp="20180427 15:45:26.452" level="INFO">/usr/lib/python2.7/dist-packages/Crypto/Cipher/blockalgo.py:141: FutureWarning: CTR mode needs counter parameter, not IV
  self._cipher = factory.new(key, *args, **kwargs)</msg>
<status status="PASS" endtime="20180427 15:45:26.452" starttime="20180427 15:45:24.607"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm ${sToolPath}/db_log.txt</arg>
</arguments>
<msg timestamp="20180427 15:45:26.453" level="INFO">Executing command 'rm /opt/ygomi/roadDB/tool/db/db_regression_test_tool/db_log.txt'.</msg>
<msg timestamp="20180427 15:45:26.468" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:45:26.468" starttime="20180427 15:45:26.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Prepare DB environment OK=====</arg>
</arguments>
<msg timestamp="20180427 15:45:26.469" level="INFO">=====Prepare DB environment OK=====</msg>
<status status="PASS" endtime="20180427 15:45:26.469" starttime="20180427 15:45:26.468"></status>
</kw>
<status status="PASS" endtime="20180427 15:45:26.470" starttime="20180427 15:45:24.606"></status>
</kw>
<kw name="Execute DB regression tool" library="DB_utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Execute DB regression tool=====</arg>
</arguments>
<msg timestamp="20180427 15:45:26.472" level="INFO">=====Execute DB regression tool=====</msg>
<status status="PASS" endtime="20180427 15:45:26.472" starttime="20180427 15:45:26.471"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ${sToolPath} &amp;&amp; \ ./db_regression_testing.py | tee db_log.txt</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:45:26.474" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/db_regression_test_tool &amp;&amp;  ./db_regression_testing.py | tee db_log.txt'.</msg>
<msg timestamp="20180427 15:46:50.116" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:46:50.117" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:46:50.117" starttime="20180427 15:45:26.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:46:50.118" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:46:50.119" starttime="20180427 15:46:50.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Execute DB regression tool OK=====</arg>
</arguments>
<msg timestamp="20180427 15:46:50.120" level="INFO">=====Execute DB regression tool OK=====</msg>
<status status="PASS" endtime="20180427 15:46:50.120" starttime="20180427 15:46:50.119"></status>
</kw>
<status status="PASS" endtime="20180427 15:46:50.120" starttime="20180427 15:45:26.470"></status>
</kw>
<kw name="Check DB API results" library="DB_utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Checking DB API results=====</arg>
</arguments>
<msg timestamp="20180427 15:46:50.122" level="INFO">=====Checking DB API results=====</msg>
<status status="PASS" endtime="20180427 15:46:50.122" starttime="20180427 15:46:50.121"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ${sToolPath} &amp;&amp; cat db_log.txt | tail -n 1 \ | awk -F',' '{print $3}' | awk -F'fail' '{print $2}' | awk -F'(' '{print $2}' | awk -F')' '{print $1}'</arg>
</arguments>
<assign>
<var>${rFailNumber}</var>
</assign>
<msg timestamp="20180427 15:46:50.123" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/db_regression_test_tool &amp;&amp; cat db_log.txt | tail -n 1  | awk -F',' '{print $3}' | awk -F'fail' '{print $2}' | awk -F'(' '{print $2}' | awk -F')' '{print $1}''.</msg>
<msg timestamp="20180427 15:46:50.137" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:46:50.138" level="INFO">${rFailNumber} = 0</msg>
<status status="PASS" endtime="20180427 15:46:50.138" starttime="20180427 15:46:50.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rFailNumber}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:46:50.139" starttime="20180427 15:46:50.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Checking DB API results OK=====</arg>
</arguments>
<msg timestamp="20180427 15:46:50.140" level="INFO">=====Checking DB API results OK=====</msg>
<status status="PASS" endtime="20180427 15:46:50.140" starttime="20180427 15:46:50.140"></status>
</kw>
<status status="PASS" endtime="20180427 15:46:50.141" starttime="20180427 15:46:50.121"></status>
</kw>
<kw type="teardown" name="Clear DB" library="DB_utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Clear All DB=====</arg>
</arguments>
<msg timestamp="20180427 15:46:50.143" level="INFO">=====Clear All DB=====</msg>
<status status="PASS" endtime="20180427 15:46:50.143" starttime="20180427 15:46:50.142"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ${sDBClearPath} &amp;&amp; ./allDB_clear.sh</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:46:50.144" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:47:01.037" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:01.038" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:01.038" starttime="20180427 15:46:50.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:47:01.040" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:01.040" starttime="20180427 15:47:01.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=====Clear All DB OK=====</arg>
</arguments>
<msg timestamp="20180427 15:47:01.041" level="INFO">=====Clear All DB OK=====</msg>
<status status="PASS" endtime="20180427 15:47:01.041" starttime="20180427 15:47:01.040"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:01.042" starttime="20180427 15:46:50.141"></status>
</kw>
<doc>| Description | Verify all core DB APIs |
| Input | none |
| Process | Call DB python tool to check all core APIs |
| Expect result | Should be all pass in DB test case execution summary |</doc>
<tags>
<tag>level_1</tag>
<tag>normal</tag>
<tag>qian.li</tag>
</tags>
<status status="PASS" endtime="20180427 15:47:01.042" critical="yes" starttime="20180427 15:45:24.605"></status>
</test>
<status status="PASS" endtime="20180427 15:47:01.044" starttime="20180427 15:45:24.551"></status>
</suite>
<status status="PASS" endtime="20180427 15:47:01.047" starttime="20180427 15:45:24.549"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/Framework_Server" id="s1-s2" name="Framework Server">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/Framework_Server/Backend_Server" id="s1-s2-s1" name="Backend Server">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/Framework_Server/Backend_Server/Data_Process" id="s1-s2-s1-s1" name="Data Process">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/Framework_Server/Backend_Server/Data_Process/Data_Process_API_Test.txt" id="s1-s2-s1-s1-s1" name="Data Process API Test">
<kw type="setup" name="Login Some Server" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | login a server, and support execute a command after login |</doc>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pIp}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:01.239" starttime="20180427 15:47:01.239"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pUser}</arg>
<arg>${pPassWord}</arg>
</arguments>
<msg timestamp="20180427 15:47:01.240" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:47:02.711" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:45:25 CST 2018

  System load:  0.32               Processes:           303
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:45:26 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:47:02.712" starttime="20180427 15:47:01.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pCommand}" != "None"</arg>
<arg>execute command</arg>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:02.714" starttime="20180427 15:47:02.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pIsSleep}" != "no"</arg>
<arg>sleep</arg>
<arg>2 minutes</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:02.715" starttime="20180427 15:47:02.714"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:02.715" starttime="20180427 15:47:01.238"></status>
</kw>
<test id="s1-s2-s1-s1-s1-t1" name="RDB-23108_post_/commands/{commond_name}/executions_with_cmdname_exist">
<kw type="setup" name="Clear Environment and Trigger Snippets" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.copy snipppet to file storage folder 2.clear environment 3.trigger snippets 4.start road_server service |</doc>
<arguments>
<arg>${gMountLocalFolder}/Framework/Data-Process/RDB-23108</arg>
</arguments>
<kw name="Clear Backend Environment" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.clear environment |</doc>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${gToolPath}/db/clear_db_data/allDB_clear.sh &gt;/tmp/log.txt</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:47:02.719" level="INFO">Executing command '/opt/ygomi/roadDB/tool/db/clear_db_data/allDB_clear.sh &gt;/tmp/log.txt'.</msg>
<msg timestamp="20180427 15:47:13.387" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:13.388" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:13.388" starttime="20180427 15:47:02.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>clear db failed!</arg>
</arguments>
<msg timestamp="20180427 15:47:13.391" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:13.391" starttime="20180427 15:47:13.389"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo rm -rf ${gUploadPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:47:13.393" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/events/uploads'.</msg>
<msg timestamp="20180427 15:47:13.438" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:13.439" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:13.439" starttime="20180427 15:47:13.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>clear uploads folder failed!</arg>
</arguments>
<msg timestamp="20180427 15:47:13.441" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:13.441" starttime="20180427 15:47:13.440"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>rm -rf ${gWorkFlowManagerPath}/*</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gWorkFlowManagerPath}/*</arg>
</arguments>
<msg timestamp="20180427 15:47:13.444" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:47:13.489" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:47:13.489" starttime="20180427 15:47:13.443"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:13.489" starttime="20180427 15:47:13.442"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gWorkPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:47:13.491" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/work_path'.</msg>
<msg timestamp="20180427 15:47:13.536" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:13.536" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:13.537" starttime="20180427 15:47:13.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>clear work path failed!</arg>
</arguments>
<msg timestamp="20180427 15:47:13.538" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:13.539" starttime="20180427 15:47:13.537"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>rm -rf ${gRTVPath}/*</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gRTVPath}/*</arg>
</arguments>
<msg timestamp="20180427 15:47:13.541" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/file_storage/rtv/*'.</msg>
<msg timestamp="20180427 15:47:13.586" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:47:13.587" starttime="20180427 15:47:13.540"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:13.587" starttime="20180427 15:47:13.539"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>rm -rf ${gFWLogPath}/*</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gFWLogPath}/*</arg>
</arguments>
<msg timestamp="20180427 15:47:13.590" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:47:13.635" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:47:13.635" starttime="20180427 15:47:13.589"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:13.635" starttime="20180427 15:47:13.588"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>cp /dev/null ${gServerLogPath}/WorkflowManager.log</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cp /dev/null ${gServerLogPath}/WorkflowManager.log</arg>
</arguments>
<msg timestamp="20180427 15:47:13.638" level="INFO">Executing command 'cp /dev/null /opt/ygomi/roadDB/log/service/WorkflowManager.log'.</msg>
<msg timestamp="20180427 15:47:13.683" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:47:13.684" starttime="20180427 15:47:13.637"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:13.684" starttime="20180427 15:47:13.636"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>cp /dev/null ${gServerLogPath}/DataProcessor.log</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cp /dev/null ${gServerLogPath}/DataProcessor.log</arg>
</arguments>
<msg timestamp="20180427 15:47:13.686" level="INFO">Executing command 'cp /dev/null /opt/ygomi/roadDB/log/service/DataProcessor.log'.</msg>
<msg timestamp="20180427 15:47:13.765" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:47:13.765" starttime="20180427 15:47:13.686"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:13.765" starttime="20180427 15:47:13.685"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:13.766" starttime="20180427 15:47:02.719"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>sudo service road_server start</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service road_server start</arg>
</arguments>
<msg timestamp="20180427 15:47:13.768" level="INFO">Executing command 'sudo service road_server start'.</msg>
<msg timestamp="20180427 15:47:14.741" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:47:14.742" starttime="20180427 15:47:13.767"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:14.742" starttime="20180427 15:47:13.766"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p ${gUploadPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:47:14.744" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/events/uploads'.</msg>
<msg timestamp="20180427 15:47:14.822" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:14.823" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:14.823" starttime="20180427 15:47:14.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>creat upload folder failed!</arg>
</arguments>
<msg timestamp="20180427 15:47:14.824" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:14.825" starttime="20180427 15:47:14.824"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cp -r ${pSourceSnippetFolder}/* ${gUploadPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:47:14.827" level="INFO">Executing command 'cp -r /home/roaddb/RDBtestDataForCI/Framework/Data-Process/RDB-23108/* /opt/ygomi/roadDB/file_storage/events/uploads'.</msg>
<msg timestamp="20180427 15:47:14.883" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:14.883" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:14.883" starttime="20180427 15:47:14.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>copy snippets failed!</arg>
</arguments>
<msg timestamp="20180427 15:47:14.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:14.885" starttime="20180427 15:47:14.884"></status>
</kw>
<kw name="List Files In Directory" library="SSHLibrary">
<doc>A wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>${gUploadPath}</arg>
</arguments>
<assign>
<var>${sSnippetList}</var>
</assign>
<msg timestamp="20180427 15:47:14.926" level="INFO">[chan 13] Opened sftp connection (server version 3)</msg>
<msg timestamp="20180427 15:47:14.944" level="INFO">3 files:
solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz
solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00.gz
solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00.gz</msg>
<msg timestamp="20180427 15:47:14.945" level="INFO">${sSnippetList} = [u'solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00....</msg>
<status status="PASS" endtime="20180427 15:47:14.945" starttime="20180427 15:47:14.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${sSnippetList}</arg>
</arguments>
<msg timestamp="20180427 15:47:14.946" level="INFO">${sSnippetList} = [u'solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00....</msg>
<status status="PASS" endtime="20180427 15:47:14.947" starttime="20180427 15:47:14.946"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ls ${gUploadPath}|wc -l</arg>
</arguments>
<assign>
<var>${sSnippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:14.948" level="INFO">Executing command 'ls /opt/ygomi/roadDB/file_storage/events/uploads|wc -l'.</msg>
<msg timestamp="20180427 15:47:14.962" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:14.963" level="INFO">${sSnippetCount} = 3</msg>
<status status="PASS" endtime="20180427 15:47:14.963" starttime="20180427 15:47:14.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${sSnippetCount}</arg>
</arguments>
<msg timestamp="20180427 15:47:14.965" level="INFO">${sSnippetCount} = 3</msg>
<status status="PASS" endtime="20180427 15:47:14.965" starttime="20180427 15:47:14.964"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>java -jar ${gJavaToolPath}/offline-tool-stitching-trigger.jar</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:47:14.966" level="INFO">Executing command 'java -jar /opt/ygomi/roadDB/jar/cmd/offline-tool-stitching-trigger.jar'.</msg>
<msg timestamp="20180427 15:47:16.070" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:47:16.071" level="INFO">${stdout} = 2018-04-27 15:47:16.015 [WARN ] [] c.y.r.stitchingtrigger.MainController    --- java.lang.NumberFormatException: null [main]
2018-04-27 15:47:16.021 [INFO ] [] c.y.r.stitchingtrigger.StitchingTrigger ...</msg>
<msg timestamp="20180427 15:47:16.071" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:47:16.071" starttime="20180427 15:47:14.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>trigger snippets failed!</arg>
</arguments>
<msg timestamp="20180427 15:47:16.073" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:16.073" starttime="20180427 15:47:16.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>countSuccess = ${sSnippetCount}</arg>
<arg>trigger snippets failed!</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:16.075" starttime="20180427 15:47:16.074"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 50 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:16.088" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:16.090" starttime="20180427 15:47:16.087"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:16.103" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:16.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:16.103" starttime="20180427 15:47:16.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:16.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:16.105" starttime="20180427 15:47:16.104"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:16.107" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:16.107" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:16.107" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:16.107" starttime="20180427 15:47:16.106"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:16.109" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:16.109" starttime="20180427 15:47:16.108"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:16.111" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:16.111" starttime="20180427 15:47:16.110"></status>
</kw>
<msg timestamp="20180427 15:47:16.112" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:16.112" starttime="20180427 15:47:16.085"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:16.114" starttime="20180427 15:47:16.113"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:18.115" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:18.116" starttime="20180427 15:47:16.114"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:18.116" starttime="20180427 15:47:16.076"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:18.128" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:18.130" starttime="20180427 15:47:18.128"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:18.142" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:18.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:18.143" starttime="20180427 15:47:18.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:18.145" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:18.145" starttime="20180427 15:47:18.144"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:18.146" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:18.147" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:18.147" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:18.147" starttime="20180427 15:47:18.146"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:18.149" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:18.149" starttime="20180427 15:47:18.148"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:18.150" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:18.150" starttime="20180427 15:47:18.149"></status>
</kw>
<msg timestamp="20180427 15:47:18.151" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:18.151" starttime="20180427 15:47:18.126"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:18.153" starttime="20180427 15:47:18.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:20.154" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:20.154" starttime="20180427 15:47:18.153"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:20.155" starttime="20180427 15:47:18.116"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:20.166" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:20.167" starttime="20180427 15:47:20.166"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:20.180" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:20.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:20.180" starttime="20180427 15:47:20.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:20.182" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:20.182" starttime="20180427 15:47:20.181"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:20.185" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:20.185" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:20.185" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:20.185" starttime="20180427 15:47:20.183"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:20.187" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:20.187" starttime="20180427 15:47:20.186"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:20.188" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:20.189" starttime="20180427 15:47:20.188"></status>
</kw>
<msg timestamp="20180427 15:47:20.189" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:20.189" starttime="20180427 15:47:20.164"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:20.191" starttime="20180427 15:47:20.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:22.192" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:22.193" starttime="20180427 15:47:20.191"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:22.193" starttime="20180427 15:47:20.155"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:22.209" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:22.210" starttime="20180427 15:47:22.208"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:22.223" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:22.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:22.224" starttime="20180427 15:47:22.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:22.225" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:22.226" starttime="20180427 15:47:22.224"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:22.227" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:22.227" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:22.228" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:22.228" starttime="20180427 15:47:22.226"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:22.229" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:22.229" starttime="20180427 15:47:22.228"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:22.231" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:22.231" starttime="20180427 15:47:22.230"></status>
</kw>
<msg timestamp="20180427 15:47:22.232" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:22.232" starttime="20180427 15:47:22.206"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:22.233" starttime="20180427 15:47:22.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:24.235" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:24.235" starttime="20180427 15:47:22.234"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:24.235" starttime="20180427 15:47:22.193"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:24.242" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:24.243" starttime="20180427 15:47:24.242"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:24.252" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:24.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:24.253" starttime="20180427 15:47:24.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:24.253" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:24.254" starttime="20180427 15:47:24.253"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:24.254" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:24.254" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:24.255" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:24.255" starttime="20180427 15:47:24.254"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:24.255" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:24.255" starttime="20180427 15:47:24.255"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:24.256" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:24.256" starttime="20180427 15:47:24.256"></status>
</kw>
<msg timestamp="20180427 15:47:24.256" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:24.256" starttime="20180427 15:47:24.241"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:24.257" starttime="20180427 15:47:24.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:26.258" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:26.258" starttime="20180427 15:47:24.257"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:26.259" starttime="20180427 15:47:24.236"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:26.266" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:26.266" starttime="20180427 15:47:26.265"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:26.275" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:26.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:26.276" starttime="20180427 15:47:26.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:26.276" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:26.276" starttime="20180427 15:47:26.276"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:26.277" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:26.277" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:26.277" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:26.277" starttime="20180427 15:47:26.277"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:26.278" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:26.278" starttime="20180427 15:47:26.277"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:26.278" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:26.278" starttime="20180427 15:47:26.278"></status>
</kw>
<msg timestamp="20180427 15:47:26.279" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:26.279" starttime="20180427 15:47:26.265"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:26.279" starttime="20180427 15:47:26.279"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:28.280" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:28.281" starttime="20180427 15:47:26.280"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:28.281" starttime="20180427 15:47:26.259"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:28.288" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:28.288" starttime="20180427 15:47:28.287"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:28.298" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:28.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:28.298" starttime="20180427 15:47:28.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:28.299" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:28.299" starttime="20180427 15:47:28.298"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:28.300" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:28.300" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:28.300" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:28.300" starttime="20180427 15:47:28.299"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:28.300" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:28.301" starttime="20180427 15:47:28.300"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:28.301" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:28.301" starttime="20180427 15:47:28.301"></status>
</kw>
<msg timestamp="20180427 15:47:28.302" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:28.302" starttime="20180427 15:47:28.287"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:28.302" starttime="20180427 15:47:28.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:30.303" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:30.304" starttime="20180427 15:47:28.303"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:30.304" starttime="20180427 15:47:28.281"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:30.317" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:30.318" starttime="20180427 15:47:30.316"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:30.331" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:30.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:30.331" starttime="20180427 15:47:30.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:30.333" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:30.334" starttime="20180427 15:47:30.332"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:30.335" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:30.335" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:30.336" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:30.336" starttime="20180427 15:47:30.334"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:30.337" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:30.337" starttime="20180427 15:47:30.336"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:30.339" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:30.339" starttime="20180427 15:47:30.338"></status>
</kw>
<msg timestamp="20180427 15:47:30.339" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:30.340" starttime="20180427 15:47:30.315"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:30.341" starttime="20180427 15:47:30.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:32.342" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:32.344" starttime="20180427 15:47:30.342"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:32.344" starttime="20180427 15:47:30.304"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:32.356" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:32.357" starttime="20180427 15:47:32.355"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:32.370" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:32.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:32.371" starttime="20180427 15:47:32.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:32.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:32.373" starttime="20180427 15:47:32.371"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:32.374" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:32.374" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:32.374" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:32.374" starttime="20180427 15:47:32.373"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:32.374" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:32.374" starttime="20180427 15:47:32.374"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:32.375" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:32.375" starttime="20180427 15:47:32.375"></status>
</kw>
<msg timestamp="20180427 15:47:32.375" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:32.375" starttime="20180427 15:47:32.353"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:32.376" starttime="20180427 15:47:32.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:34.376" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:34.377" starttime="20180427 15:47:32.376"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:34.377" starttime="20180427 15:47:32.344"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:34.388" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:34.389" starttime="20180427 15:47:34.387"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:34.402" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:34.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:34.402" starttime="20180427 15:47:34.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:34.404" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:34.404" starttime="20180427 15:47:34.403"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:34.406" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:34.406" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:34.406" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:34.406" starttime="20180427 15:47:34.405"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:34.408" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:34.408" starttime="20180427 15:47:34.407"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:34.409" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:34.409" starttime="20180427 15:47:34.408"></status>
</kw>
<msg timestamp="20180427 15:47:34.410" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:34.410" starttime="20180427 15:47:34.386"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:34.412" starttime="20180427 15:47:34.411"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:36.413" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:36.413" starttime="20180427 15:47:34.412"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:36.413" starttime="20180427 15:47:34.377"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:36.423" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:36.424" starttime="20180427 15:47:36.423"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:36.437" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:36.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:36.438" starttime="20180427 15:47:36.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:36.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:36.440" starttime="20180427 15:47:36.439"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:36.442" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:36.442" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:36.442" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:36.442" starttime="20180427 15:47:36.441"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:36.444" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:36.444" starttime="20180427 15:47:36.443"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:36.445" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:36.445" starttime="20180427 15:47:36.444"></status>
</kw>
<msg timestamp="20180427 15:47:36.446" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:36.446" starttime="20180427 15:47:36.421"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:36.448" starttime="20180427 15:47:36.446"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:38.449" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:38.450" starttime="20180427 15:47:36.448"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:38.450" starttime="20180427 15:47:36.414"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:38.462" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:38.467" starttime="20180427 15:47:38.461"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:38.480" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:38.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:38.481" starttime="20180427 15:47:38.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:38.482" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:38.483" starttime="20180427 15:47:38.481"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:38.484" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:38.485" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:38.485" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:38.485" starttime="20180427 15:47:38.483"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:38.487" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:38.487" starttime="20180427 15:47:38.486"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:38.488" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:38.489" starttime="20180427 15:47:38.487"></status>
</kw>
<msg timestamp="20180427 15:47:38.489" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:38.490" starttime="20180427 15:47:38.460"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:38.492" starttime="20180427 15:47:38.490"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:40.493" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:40.493" starttime="20180427 15:47:38.492"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:40.494" starttime="20180427 15:47:38.450"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:40.505" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:40.506" starttime="20180427 15:47:40.504"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:40.519" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:40.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:40.519" starttime="20180427 15:47:40.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:40.521" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:40.521" starttime="20180427 15:47:40.520"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:40.523" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:40.523" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:40.523" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:40.523" starttime="20180427 15:47:40.522"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:40.525" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:40.525" starttime="20180427 15:47:40.524"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:40.526" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:40.527" starttime="20180427 15:47:40.526"></status>
</kw>
<msg timestamp="20180427 15:47:40.527" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:40.527" starttime="20180427 15:47:40.503"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:40.529" starttime="20180427 15:47:40.528"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:42.530" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:42.530" starttime="20180427 15:47:40.529"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:42.530" starttime="20180427 15:47:40.494"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:42.537" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:42.537" starttime="20180427 15:47:42.536"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:42.547" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:42.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:42.547" starttime="20180427 15:47:42.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:42.548" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:42.548" starttime="20180427 15:47:42.547"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:42.549" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:42.549" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:42.549" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:42.549" starttime="20180427 15:47:42.548"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:42.550" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:42.550" starttime="20180427 15:47:42.549"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:42.551" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:42.551" starttime="20180427 15:47:42.550"></status>
</kw>
<msg timestamp="20180427 15:47:42.552" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:42.552" starttime="20180427 15:47:42.536"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:42.553" starttime="20180427 15:47:42.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:44.553" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:44.554" starttime="20180427 15:47:42.553"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:44.554" starttime="20180427 15:47:42.531"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:44.561" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:44.561" starttime="20180427 15:47:44.561"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:44.571" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:44.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:44.571" starttime="20180427 15:47:44.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:44.572" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:44.572" starttime="20180427 15:47:44.571"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:44.573" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:44.573" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:44.573" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:44.573" starttime="20180427 15:47:44.573"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:44.574" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:44.574" starttime="20180427 15:47:44.574"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:44.575" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:44.575" starttime="20180427 15:47:44.575"></status>
</kw>
<msg timestamp="20180427 15:47:44.576" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:44.576" starttime="20180427 15:47:44.560"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:44.577" starttime="20180427 15:47:44.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:46.577" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:46.578" starttime="20180427 15:47:44.577"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:46.578" starttime="20180427 15:47:44.554"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:46.590" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:46.591" starttime="20180427 15:47:46.589"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:46.604" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:46.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:46.605" starttime="20180427 15:47:46.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:46.606" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:46.607" starttime="20180427 15:47:46.605"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:46.608" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:46.608" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:46.609" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:46.609" starttime="20180427 15:47:46.607"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:46.610" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:46.610" starttime="20180427 15:47:46.609"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:46.612" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:46.612" starttime="20180427 15:47:46.611"></status>
</kw>
<msg timestamp="20180427 15:47:46.613" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:46.613" starttime="20180427 15:47:46.588"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:46.614" starttime="20180427 15:47:46.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:48.616" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:48.616" starttime="20180427 15:47:46.615"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:48.616" starttime="20180427 15:47:46.579"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:48.620" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:48.621" starttime="20180427 15:47:48.620"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:48.632" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:48.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:48.632" starttime="20180427 15:47:48.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:48.632" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:48.633" starttime="20180427 15:47:48.632"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:48.633" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:48.633" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:48.633" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:48.633" starttime="20180427 15:47:48.633"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:48.634" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:48.634" starttime="20180427 15:47:48.634"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:48.635" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:48.635" starttime="20180427 15:47:48.634"></status>
</kw>
<msg timestamp="20180427 15:47:48.635" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:48.635" starttime="20180427 15:47:48.619"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:48.635" starttime="20180427 15:47:48.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:50.636" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:50.637" starttime="20180427 15:47:48.636"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:50.637" starttime="20180427 15:47:48.616"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:50.649" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:50.650" starttime="20180427 15:47:50.648"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:50.663" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:50.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:50.663" starttime="20180427 15:47:50.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:50.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:50.665" starttime="20180427 15:47:50.664"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:50.667" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:50.667" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:50.667" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:50.668" starttime="20180427 15:47:50.666"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:50.669" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:50.669" starttime="20180427 15:47:50.668"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:50.670" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:50.671" starttime="20180427 15:47:50.670"></status>
</kw>
<msg timestamp="20180427 15:47:50.671" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:50.671" starttime="20180427 15:47:50.646"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:50.673" starttime="20180427 15:47:50.672"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:52.674" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:52.675" starttime="20180427 15:47:50.673"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:52.675" starttime="20180427 15:47:50.637"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:52.682" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:52.683" starttime="20180427 15:47:52.682"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:52.692" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:52.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:52.692" starttime="20180427 15:47:52.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:52.692" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:52.693" starttime="20180427 15:47:52.692"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:52.693" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:52.693" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:52.693" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:52.693" starttime="20180427 15:47:52.693"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:52.694" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:52.694" starttime="20180427 15:47:52.694"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:52.694" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:52.694" starttime="20180427 15:47:52.694"></status>
</kw>
<msg timestamp="20180427 15:47:52.695" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:52.695" starttime="20180427 15:47:52.681"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:52.695" starttime="20180427 15:47:52.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:54.696" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:54.697" starttime="20180427 15:47:52.696"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:54.697" starttime="20180427 15:47:52.675"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:54.708" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:54.709" starttime="20180427 15:47:54.707"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:54.723" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:54.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:54.724" starttime="20180427 15:47:54.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:54.726" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:54.726" starttime="20180427 15:47:54.724"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:54.728" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:54.728" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:54.728" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:54.728" starttime="20180427 15:47:54.727"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:54.730" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:54.730" starttime="20180427 15:47:54.729"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:54.731" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:54.731" starttime="20180427 15:47:54.730"></status>
</kw>
<msg timestamp="20180427 15:47:54.732" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:54.732" starttime="20180427 15:47:54.706"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:54.734" starttime="20180427 15:47:54.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:56.735" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:56.736" starttime="20180427 15:47:54.734"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:56.736" starttime="20180427 15:47:54.697"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:56.748" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:56.750" starttime="20180427 15:47:56.747"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:56.763" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:56.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:56.764" starttime="20180427 15:47:56.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:56.767" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:56.768" starttime="20180427 15:47:56.765"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:56.769" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:56.769" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:56.770" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:56.770" starttime="20180427 15:47:56.768"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:56.772" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:56.772" starttime="20180427 15:47:56.771"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:56.774" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:56.774" starttime="20180427 15:47:56.772"></status>
</kw>
<msg timestamp="20180427 15:47:56.774" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:56.774" starttime="20180427 15:47:56.745"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:56.775" starttime="20180427 15:47:56.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:47:58.776" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:47:58.777" starttime="20180427 15:47:56.776"></status>
</kw>
<status status="PASS" endtime="20180427 15:47:58.777" starttime="20180427 15:47:56.736"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:47:58.793" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:47:58.795" starttime="20180427 15:47:58.790"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:47:58.810" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:47:58.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:47:58.810" starttime="20180427 15:47:58.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:47:58.812" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:47:58.812" starttime="20180427 15:47:58.811"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:58.813" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:47:58.813" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:47:58.813" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:47:58.813" starttime="20180427 15:47:58.812"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:47:58.814" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:47:58.814" starttime="20180427 15:47:58.813"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:47:58.815" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:47:58.815" starttime="20180427 15:47:58.814"></status>
</kw>
<msg timestamp="20180427 15:47:58.815" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:47:58.815" starttime="20180427 15:47:58.788"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:47:58.816" starttime="20180427 15:47:58.816"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:00.817" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:00.818" starttime="20180427 15:47:58.817"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:00.818" starttime="20180427 15:47:58.777"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:00.830" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:00.831" starttime="20180427 15:48:00.829"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:00.846" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:00.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:00.847" starttime="20180427 15:48:00.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:00.849" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:00.849" starttime="20180427 15:48:00.848"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:00.851" level="INFO">To JSON using : content={"moreResults": [], "data": [{"status": "READY", "t1_id": 2, "snippet_name": "solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00", "storage_time": "2018-04-27 07:47:16", "snippet_group_id": 200, "rtv_file_name": "2017-08-04_T_16-19-26.337_GMT_01.rtv", "processing_mode": "slam", "passed_seg_ids": null, "create_time": "2017-08-04 16:19:26", "device_uid": "solution-test-local-device-0002", "file_path": "/events/uploads/solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00.gz"}, {"status": "READY", "t1_id": 3, "snippet_name": "solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00", "storage_time": "2018-04-27 07:47:16", "snippet_group_id": 300, "rtv_file_name": "2017-08-04_T_15-50-15.183_GMT_01.rtv", "processing_mode": "slam", "passed_seg_ids": null, "create_time": "2017-08-04 15:50:15", "device_uid": "solution-test-local-device-0003", "file_path": "/events/uploads/solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00.gz"}, {"status": "READY", "t1_id": 1, "snippet_name": "solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00", "storage_time": "2018-04-27 07:47:16", "snippet_group_id": 100, "rtv_file_name": "2017-07-31_T_19-18-48.508_GMT_01.rtv", "processing_mode": "slam", "passed_seg_ids": null, "create_time": "2017-07-31 19:18:48", "device_uid": "solution-test-local-device-0001", "file_path": "/events/uploads/solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz"}], "ops": {"code": 200, "start": 0, "message": "OK", "total": 3}}
 </msg>
<msg timestamp="20180427 15:48:00.851" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:00.851" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [{u'status': u'READY', u't1_id': 2, u'snippet_name': u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00', u'storage_time': u...</msg>
<status status="PASS" endtime="20180427 15:48:00.851" starttime="20180427 15:48:00.849"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:00.853" level="INFO">${opsDirectory} = {u'total': 3, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:00.853" starttime="20180427 15:48:00.852"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:00.854" level="INFO">${snippetCount} = 3</msg>
<status status="PASS" endtime="20180427 15:48:00.855" starttime="20180427 15:48:00.854"></status>
</kw>
<msg timestamp="20180427 15:48:00.855" level="INFO">${count} = 3</msg>
<status status="PASS" endtime="20180427 15:48:00.855" starttime="20180427 15:48:00.828"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<msg timestamp="20180427 15:48:00.857" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20180427 15:48:00.857" starttime="20180427 15:48:00.856"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:00.857" starttime="20180427 15:48:00.818"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:00.857" starttime="20180427 15:47:16.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${sSnippetCount}</arg>
<arg>trigger snippets failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:00.859" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:00.859" starttime="20180427 15:48:00.858"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:00.859" starttime="20180427 15:47:02.718"></status>
</kw>
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:48:00.861" starttime="20180427 15:48:00.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sSnippetList}</arg>
</arguments>
<msg timestamp="20180427 15:48:00.862" level="INFO">[u'solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00.gz']</msg>
<status status="PASS" endtime="20180427 15:48:00.862" starttime="20180427 15:48:00.861"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:48:00.864" starttime="20180427 15:48:00.863"></status>
</kw>
<kw name="Post Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.post data to a Restful API and check the post result |</doc>
<arguments>
<arg>--cmd snippetAnalyzer --base-dir ${gFileStoragePath} --work-dir ${gWorkPath}/WorkflowManager/SnippetAnalyzer --segment-config /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --db ${gDbApiUrlofDocker} --data-processor http://${gBackendsIp[0]}:${sDataProcessorPort}/DataProcessor --thread-pool-size 10 --db-limit-number 1000 --unzip-dir /WorkflowManager/unzip --storage-source LOCAL --confidence 100.0 --remote-filestorage http://${gBackendsIp[0]}:8088 --accesskey 111 --secretkey 111 --endpoint --region us-east-1 --bucket ygomi-fws --debug</arg>
<arg>rdb-server-snippetAnalyzer-cmd.jar</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:48:00.875" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:48:00.875" starttime="20180427 15:48:00.874"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:00.876" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:00.877" starttime="20180427 15:48:00.875"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
<arg>${pPostData}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:02.989" level="INFO">Post Request using : alias=dataprocess, uri=/DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=false, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180427 15:48:02.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:02.989" starttime="20180427 15:48:00.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>url = /DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.990" level="INFO">url = /DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=false</msg>
<status status="PASS" endtime="20180427 15:48:02.990" starttime="20180427 15:48:02.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pPostData}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.991" level="INFO">--cmd snippetAnalyzer --base-dir /opt/ygomi/roadDB/file_storage --work-dir /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer --segment-config /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --db http://10.69.143.202:8080 --data-processor http://10.69.143.202:9030/DataProcessor --thread-pool-size 10 --db-limit-number 1000 --unzip-dir /WorkflowManager/unzip --storage-source LOCAL --confidence 100.0 --remote-filestorage http://10.69.143.202:8088 --accesskey 111 --secretkey 111 --endpoint --region us-east-1 --bucket ygomi-fws --debug</msg>
<status status="PASS" endtime="20180427 15:48:02.991" starttime="20180427 15:48:02.990"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:02.991" starttime="20180427 15:48:02.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>to json</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.992" level="INFO">To JSON using : content={"duration":2090,"std_err":"","id":"4","time":1524815281462,"ret_code":0,"std_out":"/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154801_out_0.10.log","status":"done"} </msg>
<msg timestamp="20180427 15:48:02.992" level="INFO">To JSON using : pretty_print=False </msg>
<status status="PASS" endtime="20180427 15:48:02.992" starttime="20180427 15:48:02.992"></status>
</kw>
<msg timestamp="20180427 15:48:02.992" level="INFO">${tContent} = {u'std_err': u'', u'status': u'done', u'std_out': u'/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154801_out_0.10.log', ...</msg>
<status status="PASS" endtime="20180427 15:48:02.993" starttime="20180427 15:48:02.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.993" level="INFO">{"duration":2090,"std_err":"","id":"4","time":1524815281462,"ret_code":0,"std_out":"/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154801_out_0.10.log","status":"done"}</msg>
<status status="PASS" endtime="20180427 15:48:02.993" starttime="20180427 15:48:02.993"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:48:02.994" level="INFO">${tContentType} = &lt;type 'dict'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:02.994" starttime="20180427 15:48:02.993"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.994" level="INFO">${tContent} = {u'std_err': u'', u'status': u'done', u'std_out': u'/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154801_out_0.10.log', ...</msg>
<status status="PASS" endtime="20180427 15:48:02.994" starttime="20180427 15:48:02.994"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:48:02.995" level="INFO">${tContentType} = &lt;type 'dict'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:02.995" starttime="20180427 15:48:02.994"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:02.995" starttime="20180427 15:48:00.872"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:48:02.995" starttime="20180427 15:48:02.995"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>api return code should be equal as 200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>api return code should be equal as 200</arg>
</arguments>
<msg timestamp="20180427 15:48:02.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:02.996" starttime="20180427 15:48:02.996"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:02.996" starttime="20180427 15:48:02.996"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>"ret_code":0</arg>
<arg>api return content should contain "ret_code":0</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>"ret_code":0</arg>
<arg>api return content should contain "ret_code":0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:02.997" starttime="20180427 15:48:02.997"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:02.997" starttime="20180427 15:48:02.997"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>"status":"done"</arg>
<arg>api return content should contain "std_out":"","status":"done"</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>"status":"done"</arg>
<arg>api return content should contain "std_out":"","status":"done"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:02.998" starttime="20180427 15:48:02.998"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:02.998" starttime="20180427 15:48:02.998"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:48:02.999" level="INFO">${jiraNOs} = [u'RDB-23108', u'post', u'/commands/{commond', u'name}/executions', u'with', u'cmdname', u'exist']</msg>
<status status="PASS" endtime="20180427 15:48:03.000" starttime="20180427 15:48:02.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:48:03.000" level="INFO">RDB-23108</msg>
<status status="PASS" endtime="20180427 15:48:03.000" starttime="20180427 15:48:03.000"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:48:03.001" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:48:03.014" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:03.014" level="INFO">${time} = 2018-04-27-15-48</msg>
<status status="PASS" endtime="20180427 15:48:03.014" starttime="20180427 15:48:03.001"></status>
</kw>
<msg timestamp="20180427 15:48:03.015" level="INFO">${rFolderDate} = 2018-04-27-15-48</msg>
<status status="PASS" endtime="20180427 15:48:03.015" starttime="20180427 15:48:03.000"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:48:03.015" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:48:03.092" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:03.092" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:48:03.093" starttime="20180427 15:48:03.015"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:48:03.099" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-48</msg>
<status status="PASS" endtime="20180427 15:48:03.100" starttime="20180427 15:48:03.093"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:48:03.103" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-48/RDB-23108'.</msg>
<msg timestamp="20180427 15:48:03.148" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:03.148" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:48:03.148" starttime="20180427 15:48:03.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:48:03.150" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:03.150" starttime="20180427 15:48:03.149"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.151" starttime="20180427 15:48:03.100"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:48:03.153" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:48:03.153" starttime="20180427 15:48:03.152"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:48:03.157" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-48/RDB-23108'.</msg>
<msg timestamp="20180427 15:48:03.202" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:03.203" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:48:03.203" starttime="20180427 15:48:03.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:48:03.205" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:03.205" starttime="20180427 15:48:03.204"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.205" starttime="20180427 15:48:03.153"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.205" starttime="20180427 15:48:03.152"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:48:03.207" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:48:03.207" starttime="20180427 15:48:03.206"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:48:03.210" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-48/RDB-23108'.</msg>
<msg timestamp="20180427 15:48:03.256" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:03.257" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:48:03.257" starttime="20180427 15:48:03.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:48:03.258" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:03.259" starttime="20180427 15:48:03.257"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.259" starttime="20180427 15:48:03.208"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.259" starttime="20180427 15:48:03.206"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.259" starttime="20180427 15:48:03.151"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:48:03.262" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:48:03.307" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:03.308" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:48:03.308" starttime="20180427 15:48:03.261"></status>
</kw>
<msg timestamp="20180427 15:48:03.309" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:48:03.309" starttime="20180427 15:48:03.260"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:48:03.315" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:48:03.316" starttime="20180427 15:48:03.309"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:03.317" starttime="20180427 15:48:03.316"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:03.319" starttime="20180427 15:48:03.318"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:03.319" starttime="20180427 15:48:02.999"></status>
</kw>
<doc>| Description | test post:/commands/{commond_name}/executions API normal execute flow |
| Input | snippets |
| Process | call Data Process API to send requast |
| Expect result | 1.return code 200,content is done |
| remark | for data processor do not care the type of flow, so in this case, use rdb-server-snippetAnalyzer-cmd.jar flow to represent others |</doc>
<tags>
<tag>level_1</tag>
<tag>normal</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20180427 15:48:03.320" critical="yes" starttime="20180427 15:47:02.716"></status>
</test>
<test id="s1-s2-s1-s1-s1-t2" name="RDB-23144_post_/commands/{commond_name}/executions_with_command_no_execute_permission">
<kw type="setup" name="Prepare Environment for RDB-23144" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get execute result |</doc>
<arguments>
<arg>${gMountLocalFolder}/Framework/Data-Process/RDB-23108</arg>
</arguments>
<kw name="Clear Environment and Trigger Snippets" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.copy snipppet to file storage folder 2.clear environment 3.trigger snippets 4.start road_server service |</doc>
<arguments>
<arg>${pLocalSnippetsFolder}</arg>
</arguments>
<kw name="Clear Backend Environment" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.clear environment |</doc>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${gToolPath}/db/clear_db_data/allDB_clear.sh &gt;/tmp/log.txt</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:48:03.332" level="INFO">Executing command '/opt/ygomi/roadDB/tool/db/clear_db_data/allDB_clear.sh &gt;/tmp/log.txt'.</msg>
<msg timestamp="20180427 15:48:14.098" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:14.099" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:48:14.099" starttime="20180427 15:48:03.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>clear db failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:14.101" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:14.101" starttime="20180427 15:48:14.100"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo rm -rf ${gUploadPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:48:14.104" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/events/uploads'.</msg>
<msg timestamp="20180427 15:48:14.149" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:14.149" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:48:14.150" starttime="20180427 15:48:14.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>clear uploads folder failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:14.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:14.152" starttime="20180427 15:48:14.150"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>rm -rf ${gWorkFlowManagerPath}/*</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gWorkFlowManagerPath}/*</arg>
</arguments>
<msg timestamp="20180427 15:48:14.154" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:48:14.231" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:48:14.231" starttime="20180427 15:48:14.153"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:14.232" starttime="20180427 15:48:14.152"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gWorkPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:48:14.233" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/work_path'.</msg>
<msg timestamp="20180427 15:48:14.311" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:14.312" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:48:14.312" starttime="20180427 15:48:14.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>clear work path failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:14.314" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:14.314" starttime="20180427 15:48:14.313"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>rm -rf ${gRTVPath}/*</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gRTVPath}/*</arg>
</arguments>
<msg timestamp="20180427 15:48:14.317" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/file_storage/rtv/*'.</msg>
<msg timestamp="20180427 15:48:14.362" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:48:14.362" starttime="20180427 15:48:14.315"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:14.362" starttime="20180427 15:48:14.314"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>rm -rf ${gFWLogPath}/*</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>rm -rf ${gFWLogPath}/*</arg>
</arguments>
<msg timestamp="20180427 15:48:14.365" level="INFO">Executing command 'rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:48:14.411" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:48:14.411" starttime="20180427 15:48:14.364"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:14.412" starttime="20180427 15:48:14.363"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>cp /dev/null ${gServerLogPath}/WorkflowManager.log</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cp /dev/null ${gServerLogPath}/WorkflowManager.log</arg>
</arguments>
<msg timestamp="20180427 15:48:14.415" level="INFO">Executing command 'cp /dev/null /opt/ygomi/roadDB/log/service/WorkflowManager.log'.</msg>
<msg timestamp="20180427 15:48:14.460" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:48:14.460" starttime="20180427 15:48:14.413"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:14.461" starttime="20180427 15:48:14.412"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>cp /dev/null ${gServerLogPath}/DataProcessor.log</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cp /dev/null ${gServerLogPath}/DataProcessor.log</arg>
</arguments>
<msg timestamp="20180427 15:48:14.464" level="INFO">Executing command 'cp /dev/null /opt/ygomi/roadDB/log/service/DataProcessor.log'.</msg>
<msg timestamp="20180427 15:48:14.509" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:48:14.509" starttime="20180427 15:48:14.462"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:14.510" starttime="20180427 15:48:14.461"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:14.510" starttime="20180427 15:48:03.330"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>execute command</arg>
<arg>sudo service road_server start</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service road_server start</arg>
</arguments>
<msg timestamp="20180427 15:48:14.513" level="INFO">Executing command 'sudo service road_server start'.</msg>
<msg timestamp="20180427 15:48:15.456" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:48:15.456" starttime="20180427 15:48:14.512"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:15.457" starttime="20180427 15:48:14.511"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p ${gUploadPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:48:15.458" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/events/uploads'.</msg>
<msg timestamp="20180427 15:48:15.534" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:15.534" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:48:15.534" starttime="20180427 15:48:15.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>creat upload folder failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:15.535" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:15.536" starttime="20180427 15:48:15.535"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cp -r ${pSourceSnippetFolder}/* ${gUploadPath}</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:48:15.537" level="INFO">Executing command 'cp -r /home/roaddb/RDBtestDataForCI/Framework/Data-Process/RDB-23108/* /opt/ygomi/roadDB/file_storage/events/uploads'.</msg>
<msg timestamp="20180427 15:48:15.581" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:15.582" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:48:15.582" starttime="20180427 15:48:15.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>copy snippets failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:15.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:15.583" starttime="20180427 15:48:15.583"></status>
</kw>
<kw name="List Files In Directory" library="SSHLibrary">
<doc>A wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>${gUploadPath}</arg>
</arguments>
<assign>
<var>${sSnippetList}</var>
</assign>
<msg timestamp="20180427 15:48:15.632" level="INFO">3 files:
solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz
solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00.gz
solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00.gz</msg>
<msg timestamp="20180427 15:48:15.632" level="INFO">${sSnippetList} = [u'solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00....</msg>
<status status="PASS" endtime="20180427 15:48:15.633" starttime="20180427 15:48:15.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${sSnippetList}</arg>
</arguments>
<msg timestamp="20180427 15:48:15.636" level="INFO">${sSnippetList} = [u'solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00....</msg>
<status status="PASS" endtime="20180427 15:48:15.636" starttime="20180427 15:48:15.635"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ls ${gUploadPath}|wc -l</arg>
</arguments>
<assign>
<var>${sSnippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:15.638" level="INFO">Executing command 'ls /opt/ygomi/roadDB/file_storage/events/uploads|wc -l'.</msg>
<msg timestamp="20180427 15:48:15.652" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:15.653" level="INFO">${sSnippetCount} = 3</msg>
<status status="PASS" endtime="20180427 15:48:15.653" starttime="20180427 15:48:15.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${sSnippetCount}</arg>
</arguments>
<msg timestamp="20180427 15:48:15.655" level="INFO">${sSnippetCount} = 3</msg>
<status status="PASS" endtime="20180427 15:48:15.655" starttime="20180427 15:48:15.654"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>java -jar ${gJavaToolPath}/offline-tool-stitching-trigger.jar</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:48:15.657" level="INFO">Executing command 'java -jar /opt/ygomi/roadDB/jar/cmd/offline-tool-stitching-trigger.jar'.</msg>
<msg timestamp="20180427 15:48:16.436" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:48:16.436" level="INFO">${stdout} = 2018-04-27 15:48:16.496 [WARN ] [] c.y.r.stitchingtrigger.MainController    --- java.lang.NumberFormatException: null [main]
2018-04-27 15:48:16.500 [INFO ] [] c.y.r.stitchingtrigger.StitchingTrigger ...</msg>
<msg timestamp="20180427 15:48:16.436" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:48:16.437" starttime="20180427 15:48:15.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>trigger snippets failed!</arg>
</arguments>
<msg timestamp="20180427 15:48:16.438" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:16.439" starttime="20180427 15:48:16.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>countSuccess = ${sSnippetCount}</arg>
<arg>trigger snippets failed!</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:16.440" starttime="20180427 15:48:16.439"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 50 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:16.452" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:16.454" starttime="20180427 15:48:16.451"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:16.467" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:16.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:16.467" starttime="20180427 15:48:16.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:16.469" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:16.469" starttime="20180427 15:48:16.468"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:16.471" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:16.471" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:16.471" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:16.471" starttime="20180427 15:48:16.470"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:16.473" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:16.473" starttime="20180427 15:48:16.472"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:16.474" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:16.474" starttime="20180427 15:48:16.473"></status>
</kw>
<msg timestamp="20180427 15:48:16.475" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:16.475" starttime="20180427 15:48:16.450"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:16.477" starttime="20180427 15:48:16.476"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:18.478" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:18.478" starttime="20180427 15:48:16.477"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:18.478" starttime="20180427 15:48:16.441"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:18.486" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:18.487" starttime="20180427 15:48:18.486"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:18.498" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:18.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:18.498" starttime="20180427 15:48:18.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:18.499" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:18.499" starttime="20180427 15:48:18.499"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:18.500" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:18.500" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:18.500" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:18.500" starttime="20180427 15:48:18.500"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:18.501" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:18.501" starttime="20180427 15:48:18.500"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:18.501" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:18.501" starttime="20180427 15:48:18.501"></status>
</kw>
<msg timestamp="20180427 15:48:18.502" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:18.502" starttime="20180427 15:48:18.485"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:18.502" starttime="20180427 15:48:18.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:20.503" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:20.504" starttime="20180427 15:48:18.502"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:20.504" starttime="20180427 15:48:18.479"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:20.518" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:20.519" starttime="20180427 15:48:20.518"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:20.532" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:20.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:20.533" starttime="20180427 15:48:20.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:20.535" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:20.535" starttime="20180427 15:48:20.533"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:20.536" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:20.536" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:20.537" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:20.537" starttime="20180427 15:48:20.535"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:20.538" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:20.538" starttime="20180427 15:48:20.537"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:20.540" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:20.540" starttime="20180427 15:48:20.539"></status>
</kw>
<msg timestamp="20180427 15:48:20.541" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:20.541" starttime="20180427 15:48:20.516"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:20.543" starttime="20180427 15:48:20.542"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:22.545" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:22.545" starttime="20180427 15:48:20.544"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:22.546" starttime="20180427 15:48:20.504"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:22.556" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:22.557" starttime="20180427 15:48:22.556"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:22.569" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:22.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:22.570" starttime="20180427 15:48:22.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:22.573" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:22.573" starttime="20180427 15:48:22.571"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:22.574" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:22.574" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:22.574" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:22.574" starttime="20180427 15:48:22.573"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:22.575" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:22.575" starttime="20180427 15:48:22.574"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:22.575" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:22.575" starttime="20180427 15:48:22.575"></status>
</kw>
<msg timestamp="20180427 15:48:22.575" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:22.575" starttime="20180427 15:48:22.554"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:22.576" starttime="20180427 15:48:22.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:24.576" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:24.577" starttime="20180427 15:48:22.576"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:24.577" starttime="20180427 15:48:22.546"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:24.583" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:24.584" starttime="20180427 15:48:24.583"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:24.593" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:24.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:24.594" starttime="20180427 15:48:24.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:24.594" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:24.594" starttime="20180427 15:48:24.594"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:24.595" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:24.595" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:24.595" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:24.595" starttime="20180427 15:48:24.595"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:24.596" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:24.597" starttime="20180427 15:48:24.595"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:24.599" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:24.599" starttime="20180427 15:48:24.598"></status>
</kw>
<msg timestamp="20180427 15:48:24.599" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:24.599" starttime="20180427 15:48:24.582"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:24.600" starttime="20180427 15:48:24.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:26.600" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:26.601" starttime="20180427 15:48:24.600"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:26.601" starttime="20180427 15:48:24.577"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:26.612" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:26.614" starttime="20180427 15:48:26.611"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:26.626" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:26.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:26.627" starttime="20180427 15:48:26.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:26.629" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:26.629" starttime="20180427 15:48:26.628"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:26.631" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:26.631" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:26.631" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:26.631" starttime="20180427 15:48:26.630"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:26.633" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:26.633" starttime="20180427 15:48:26.632"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:26.634" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:26.634" starttime="20180427 15:48:26.633"></status>
</kw>
<msg timestamp="20180427 15:48:26.635" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:26.635" starttime="20180427 15:48:26.610"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:26.637" starttime="20180427 15:48:26.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:28.638" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:28.639" starttime="20180427 15:48:26.637"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:28.639" starttime="20180427 15:48:26.601"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:28.651" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:28.652" starttime="20180427 15:48:28.650"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:28.665" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:28.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:28.666" starttime="20180427 15:48:28.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:28.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:28.668" starttime="20180427 15:48:28.666"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:28.669" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:28.669" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:28.669" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:28.670" starttime="20180427 15:48:28.668"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:28.671" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:28.671" starttime="20180427 15:48:28.670"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:28.673" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:28.673" starttime="20180427 15:48:28.672"></status>
</kw>
<msg timestamp="20180427 15:48:28.673" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:28.674" starttime="20180427 15:48:28.649"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:28.675" starttime="20180427 15:48:28.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:30.677" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:30.677" starttime="20180427 15:48:28.676"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:30.677" starttime="20180427 15:48:28.639"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:30.693" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:30.695" starttime="20180427 15:48:30.692"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:30.708" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:30.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:30.708" starttime="20180427 15:48:30.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:30.710" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:30.710" starttime="20180427 15:48:30.709"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:30.711" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:30.711" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:30.711" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:30.711" starttime="20180427 15:48:30.710"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:30.712" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:30.712" starttime="20180427 15:48:30.711"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:30.713" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:30.713" starttime="20180427 15:48:30.712"></status>
</kw>
<msg timestamp="20180427 15:48:30.713" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:30.713" starttime="20180427 15:48:30.690"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:30.714" starttime="20180427 15:48:30.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:32.715" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:32.715" starttime="20180427 15:48:30.714"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:32.715" starttime="20180427 15:48:30.678"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:32.722" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:32.723" starttime="20180427 15:48:32.722"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:32.732" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:32.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:32.732" starttime="20180427 15:48:32.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:32.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:32.734" starttime="20180427 15:48:32.733"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:32.734" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:32.734" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:32.735" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:32.735" starttime="20180427 15:48:32.734"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:32.735" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:32.735" starttime="20180427 15:48:32.735"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:32.736" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:32.736" starttime="20180427 15:48:32.736"></status>
</kw>
<msg timestamp="20180427 15:48:32.736" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:32.737" starttime="20180427 15:48:32.721"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:32.737" starttime="20180427 15:48:32.737"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:34.738" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:34.739" starttime="20180427 15:48:32.738"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:34.739" starttime="20180427 15:48:32.716"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:34.754" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:34.755" starttime="20180427 15:48:34.754"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:34.768" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:34.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:34.769" starttime="20180427 15:48:34.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:34.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:34.771" starttime="20180427 15:48:34.769"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:34.772" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:34.772" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:34.773" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:34.773" starttime="20180427 15:48:34.771"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:34.774" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:34.774" starttime="20180427 15:48:34.773"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:34.776" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:34.776" starttime="20180427 15:48:34.775"></status>
</kw>
<msg timestamp="20180427 15:48:34.776" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:34.776" starttime="20180427 15:48:34.752"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:34.778" starttime="20180427 15:48:34.777"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:36.780" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:36.780" starttime="20180427 15:48:34.779"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:36.781" starttime="20180427 15:48:34.739"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:36.792" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:36.794" starttime="20180427 15:48:36.792"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:36.807" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:36.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:36.807" starttime="20180427 15:48:36.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:36.809" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:36.809" starttime="20180427 15:48:36.808"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:36.811" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:36.811" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:36.811" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:36.812" starttime="20180427 15:48:36.810"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:36.813" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:36.813" starttime="20180427 15:48:36.812"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:36.815" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:36.815" starttime="20180427 15:48:36.814"></status>
</kw>
<msg timestamp="20180427 15:48:36.816" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:36.816" starttime="20180427 15:48:36.790"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:36.817" starttime="20180427 15:48:36.816"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:38.819" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:38.820" starttime="20180427 15:48:36.818"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:38.820" starttime="20180427 15:48:36.781"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:38.832" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:38.833" starttime="20180427 15:48:38.831"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:38.846" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:38.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:38.847" starttime="20180427 15:48:38.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:38.849" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:38.849" starttime="20180427 15:48:38.847"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:38.851" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:38.851" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:38.851" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:38.851" starttime="20180427 15:48:38.849"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:38.853" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:38.853" starttime="20180427 15:48:38.852"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:38.855" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:38.855" starttime="20180427 15:48:38.854"></status>
</kw>
<msg timestamp="20180427 15:48:38.856" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:38.856" starttime="20180427 15:48:38.830"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:38.857" starttime="20180427 15:48:38.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:40.859" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:40.860" starttime="20180427 15:48:38.858"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:40.860" starttime="20180427 15:48:38.820"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:40.867" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:40.867" starttime="20180427 15:48:40.866"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:40.877" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:40.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:40.877" starttime="20180427 15:48:40.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:40.878" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:40.878" starttime="20180427 15:48:40.877"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:40.879" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:40.879" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:40.879" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:40.879" starttime="20180427 15:48:40.878"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:40.880" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:40.880" starttime="20180427 15:48:40.879"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:40.880" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:40.880" starttime="20180427 15:48:40.880"></status>
</kw>
<msg timestamp="20180427 15:48:40.881" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:40.881" starttime="20180427 15:48:40.866"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:40.882" starttime="20180427 15:48:40.881"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:42.882" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:42.883" starttime="20180427 15:48:40.882"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:42.883" starttime="20180427 15:48:40.860"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:42.895" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:42.896" starttime="20180427 15:48:42.894"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:42.909" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:42.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:42.909" starttime="20180427 15:48:42.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:42.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:42.912" starttime="20180427 15:48:42.910"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:42.914" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:42.914" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:42.914" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:42.914" starttime="20180427 15:48:42.913"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:42.916" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:42.916" starttime="20180427 15:48:42.915"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:42.917" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:42.917" starttime="20180427 15:48:42.916"></status>
</kw>
<msg timestamp="20180427 15:48:42.918" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:42.918" starttime="20180427 15:48:42.892"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:42.920" starttime="20180427 15:48:42.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:44.921" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:44.921" starttime="20180427 15:48:42.920"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:44.922" starttime="20180427 15:48:42.883"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:44.932" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:44.934" starttime="20180427 15:48:44.932"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:44.945" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:44.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:44.946" starttime="20180427 15:48:44.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:44.948" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:44.948" starttime="20180427 15:48:44.947"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:44.949" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:44.950" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:44.950" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:44.950" starttime="20180427 15:48:44.949"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:44.952" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:44.952" starttime="20180427 15:48:44.951"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:44.953" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:44.953" starttime="20180427 15:48:44.952"></status>
</kw>
<msg timestamp="20180427 15:48:44.954" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:44.954" starttime="20180427 15:48:44.930"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:44.956" starttime="20180427 15:48:44.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:46.957" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:46.958" starttime="20180427 15:48:44.956"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:46.958" starttime="20180427 15:48:44.922"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:46.970" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:46.971" starttime="20180427 15:48:46.969"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:46.984" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:46.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:46.985" starttime="20180427 15:48:46.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:46.987" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:46.987" starttime="20180427 15:48:46.986"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:46.989" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:46.989" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:46.989" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:46.989" starttime="20180427 15:48:46.988"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:46.991" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:46.991" starttime="20180427 15:48:46.990"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:46.992" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:46.992" starttime="20180427 15:48:46.991"></status>
</kw>
<msg timestamp="20180427 15:48:46.993" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:46.993" starttime="20180427 15:48:46.967"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:46.995" starttime="20180427 15:48:46.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:48.996" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:48.997" starttime="20180427 15:48:46.995"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:48.997" starttime="20180427 15:48:46.958"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:49.009" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:49.010" starttime="20180427 15:48:49.008"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:49.023" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:49.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:49.023" starttime="20180427 15:48:49.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:49.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:49.026" starttime="20180427 15:48:49.024"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:49.029" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:49.029" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:49.030" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:49.030" starttime="20180427 15:48:49.027"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:49.032" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:49.032" starttime="20180427 15:48:49.031"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:49.033" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:49.034" starttime="20180427 15:48:49.032"></status>
</kw>
<msg timestamp="20180427 15:48:49.034" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:49.034" starttime="20180427 15:48:49.006"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:49.036" starttime="20180427 15:48:49.035"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:51.037" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:51.038" starttime="20180427 15:48:49.036"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:51.038" starttime="20180427 15:48:48.997"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:51.050" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:51.051" starttime="20180427 15:48:51.050"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:51.064" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:51.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:51.064" starttime="20180427 15:48:51.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:51.066" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:51.066" starttime="20180427 15:48:51.065"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:51.068" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:51.068" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:51.068" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:51.068" starttime="20180427 15:48:51.067"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:51.068" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:51.068" starttime="20180427 15:48:51.068"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:51.069" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:51.069" starttime="20180427 15:48:51.068"></status>
</kw>
<msg timestamp="20180427 15:48:51.069" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:51.069" starttime="20180427 15:48:51.048"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:51.070" starttime="20180427 15:48:51.069"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:53.070" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:53.071" starttime="20180427 15:48:51.070"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:53.071" starttime="20180427 15:48:51.038"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:53.083" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:53.085" starttime="20180427 15:48:53.082"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:53.097" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:53.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:53.098" starttime="20180427 15:48:53.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:53.100" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:53.101" starttime="20180427 15:48:53.099"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:53.102" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:53.102" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:53.103" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:53.103" starttime="20180427 15:48:53.101"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:53.104" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:53.104" starttime="20180427 15:48:53.103"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:53.106" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:53.106" starttime="20180427 15:48:53.105"></status>
</kw>
<msg timestamp="20180427 15:48:53.106" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:53.107" starttime="20180427 15:48:53.081"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:53.108" starttime="20180427 15:48:53.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:55.110" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:55.110" starttime="20180427 15:48:53.109"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:55.110" starttime="20180427 15:48:53.071"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:55.123" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:55.124" starttime="20180427 15:48:55.122"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:55.136" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:55.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:55.137" starttime="20180427 15:48:55.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:55.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:55.139" starttime="20180427 15:48:55.137"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:55.140" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:55.141" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:55.141" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:55.141" starttime="20180427 15:48:55.139"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:55.143" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:55.143" starttime="20180427 15:48:55.142"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:55.144" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:55.144" starttime="20180427 15:48:55.143"></status>
</kw>
<msg timestamp="20180427 15:48:55.145" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:55.145" starttime="20180427 15:48:55.120"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:55.147" starttime="20180427 15:48:55.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:57.148" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:57.149" starttime="20180427 15:48:55.147"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:57.149" starttime="20180427 15:48:55.111"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:57.156" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:57.157" starttime="20180427 15:48:57.155"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:57.166" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:57.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:57.166" starttime="20180427 15:48:57.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:57.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:57.167" starttime="20180427 15:48:57.167"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:57.168" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:57.168" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:57.168" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:57.168" starttime="20180427 15:48:57.168"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:57.169" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:57.169" starttime="20180427 15:48:57.169"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:57.170" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:57.170" starttime="20180427 15:48:57.169"></status>
</kw>
<msg timestamp="20180427 15:48:57.170" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:57.170" starttime="20180427 15:48:57.155"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:57.171" starttime="20180427 15:48:57.170"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:48:59.172" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:48:59.172" starttime="20180427 15:48:57.171"></status>
</kw>
<status status="PASS" endtime="20180427 15:48:59.172" starttime="20180427 15:48:57.149"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:48:59.184" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:48:59.185" starttime="20180427 15:48:59.183"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:48:59.197" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:48:59.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:48:59.198" starttime="20180427 15:48:59.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:48:59.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:48:59.200" starttime="20180427 15:48:59.198"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:59.201" level="INFO">To JSON using : content={"moreResults": [], "data": [], "ops": {"code": 200, "start": 0, "message": "OK", "total": 0}}
 </msg>
<msg timestamp="20180427 15:48:59.201" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:48:59.201" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [], u'ops': {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}}</msg>
<status status="PASS" endtime="20180427 15:48:59.202" starttime="20180427 15:48:59.200"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:48:59.203" level="INFO">${opsDirectory} = {u'total': 0, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:48:59.203" starttime="20180427 15:48:59.202"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:48:59.205" level="INFO">${snippetCount} = 0</msg>
<status status="PASS" endtime="20180427 15:48:59.205" starttime="20180427 15:48:59.204"></status>
</kw>
<msg timestamp="20180427 15:48:59.205" level="INFO">${count} = 0</msg>
<status status="PASS" endtime="20180427 15:48:59.205" starttime="20180427 15:48:59.182"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<status status="PASS" endtime="20180427 15:48:59.207" starttime="20180427 15:48:59.206"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20180427 15:49:01.208" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20180427 15:49:01.209" starttime="20180427 15:48:59.208"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:01.209" starttime="20180427 15:48:59.173"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Get Snippet Count of T1" library="public_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | get snippets count from db,you can specify a type of snippet, return a snippets count |</doc>
<arguments>
<arg>/history/snippets</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>backend</arg>
<arg>${pDbApiUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:01.223" level="INFO">Creating Session using : alias=backend, url=http://10.69.143.202:8080, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:01.225" starttime="20180427 15:49:01.223"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>backend</arg>
<arg>${pUri}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:01.240" level="INFO">Get Request using : alias=backend, uri=/history/snippets, headers=None json=None</msg>
<msg timestamp="20180427 15:49:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:01.241" starttime="20180427 15:49:01.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180427 15:49:01.243" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:01.243" starttime="20180427 15:49:01.241"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${responseDirectory}</var>
</assign>
<msg timestamp="20180427 15:49:01.244" level="INFO">To JSON using : content={"moreResults": [], "data": [{"status": "READY", "t1_id": 2, "snippet_name": "solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00", "storage_time": "2018-04-27 07:48:16", "snippet_group_id": 200, "rtv_file_name": "2017-08-04_T_16-19-26.337_GMT_01.rtv", "processing_mode": "slam", "passed_seg_ids": null, "create_time": "2017-08-04 16:19:26", "device_uid": "solution-test-local-device-0002", "file_path": "/events/uploads/solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00.gz"}, {"status": "READY", "t1_id": 3, "snippet_name": "solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00", "storage_time": "2018-04-27 07:48:17", "snippet_group_id": 300, "rtv_file_name": "2017-08-04_T_15-50-15.183_GMT_01.rtv", "processing_mode": "slam", "passed_seg_ids": null, "create_time": "2017-08-04 15:50:15", "device_uid": "solution-test-local-device-0003", "file_path": "/events/uploads/solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00.gz"}, {"status": "READY", "t1_id": 1, "snippet_name": "solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00", "storage_time": "2018-04-27 07:48:16", "snippet_group_id": 100, "rtv_file_name": "2017-07-31_T_19-18-48.508_GMT_01.rtv", "processing_mode": "slam", "passed_seg_ids": null, "create_time": "2017-07-31 19:18:48", "device_uid": "solution-test-local-device-0001", "file_path": "/events/uploads/solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz"}], "ops": {"code": 200, "start": 0, "message": "OK", "total": 3}}
 </msg>
<msg timestamp="20180427 15:49:01.245" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20180427 15:49:01.245" level="INFO">${responseDirectory} = {u'moreResults': [], u'data': [{u'status': u'READY', u't1_id': 2, u'snippet_name': u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00', u'storage_time': u...</msg>
<status status="PASS" endtime="20180427 15:49:01.245" starttime="20180427 15:49:01.243"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${responseDirectory}</arg>
<arg>ops</arg>
</arguments>
<assign>
<var>${opsDirectory}</var>
</assign>
<msg timestamp="20180427 15:49:01.247" level="INFO">${opsDirectory} = {u'total': 3, u'start': 0, u'message': u'OK', u'code': 200}</msg>
<status status="PASS" endtime="20180427 15:49:01.247" starttime="20180427 15:49:01.246"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${opsDirectory}</arg>
<arg>total</arg>
</arguments>
<assign>
<var>${snippetCount}</var>
</assign>
<msg timestamp="20180427 15:49:01.249" level="INFO">${snippetCount} = 3</msg>
<status status="PASS" endtime="20180427 15:49:01.249" starttime="20180427 15:49:01.247"></status>
</kw>
<msg timestamp="20180427 15:49:01.249" level="INFO">${count} = 3</msg>
<status status="PASS" endtime="20180427 15:49:01.249" starttime="20180427 15:49:01.221"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${count}'=='${sSnippetCount}'</arg>
</arguments>
<msg timestamp="20180427 15:49:01.251" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20180427 15:49:01.251" starttime="20180427 15:49:01.250"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:01.251" starttime="20180427 15:49:01.210"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:01.251" starttime="20180427 15:48:16.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${count}</arg>
<arg>${sSnippetCount}</arg>
<arg>trigger snippets failed!</arg>
</arguments>
<msg timestamp="20180427 15:49:01.253" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:01.253" starttime="20180427 15:49:01.252"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:01.253" starttime="20180427 15:48:03.329"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>chmod 644 /opt/ygomi/roadDB/jar/cmd/rdb-server-snippetAnalyzer-cmd.jar</arg>
<arg>return_stdout=False</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:01.255" level="INFO">Executing command 'chmod 644 /opt/ygomi/roadDB/jar/cmd/rdb-server-snippetAnalyzer-cmd.jar'.</msg>
<msg timestamp="20180427 15:49:01.269" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:01.269" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:01.269" starttime="20180427 15:49:01.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>execute "chmod 644 /opt/ygomi/roadDB/jar/cmd/rdb-server-snippetAnalyzer-cmd.jar" faied!</arg>
</arguments>
<msg timestamp="20180427 15:49:01.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:01.271" starttime="20180427 15:49:01.270"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:01.271" starttime="20180427 15:48:03.323"></status>
</kw>
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:01.272" starttime="20180427 15:49:01.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sSnippetList}</arg>
</arguments>
<msg timestamp="20180427 15:49:01.273" level="INFO">[u'solution-test-local-device-0001_20180305063949_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0002_20180305063950_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00.gz', u'solution-test-local-device-0003_20180305063950_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00.gz']</msg>
<status status="PASS" endtime="20180427 15:49:01.273" starttime="20180427 15:49:01.273"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:01.274" starttime="20180427 15:49:01.274"></status>
</kw>
<kw name="Post Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.post data to a Restful API and check the post result |</doc>
<arguments>
<arg>--cmd snippetAnalyzer --base-dir ${gFileStoragePath} --work-dir ${gWorkPath}/WorkflowManager/SnippetAnalyzer --segment-config /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --db ${gDbApiUrlofDocker} --data-processor http://${gBackendsIp[0]}:${sDataProcessorPort}/DataProcessor --thread-pool-size 10 --db-limit-number 1000 --unzip-dir /WorkflowManager/unzip --storage-source LOCAL --confidence 100.0 --remote-filestorage http://${gBackendsIp[0]}:8088 --accesskey 111 --secretkey 111 --endpoint --region us-east-1 --bucket ygomi-fws --debug</arg>
<arg>rdb-server-snippetAnalyzer-cmd.jar</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:49:01.282" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:49:01.282" starttime="20180427 15:49:01.281"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:01.283" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:01.284" starttime="20180427 15:49:01.283"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
<arg>${pPostData}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:03.108" level="INFO">Post Request using : alias=dataprocess, uri=/DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=false, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180427 15:49:03.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.109" starttime="20180427 15:49:01.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>url = /DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.110" level="INFO">url = /DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=false</msg>
<status status="PASS" endtime="20180427 15:49:03.110" starttime="20180427 15:49:03.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pPostData}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.112" level="INFO">--cmd snippetAnalyzer --base-dir /opt/ygomi/roadDB/file_storage --work-dir /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer --segment-config /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --db http://10.69.143.202:8080 --data-processor http://10.69.143.202:9030/DataProcessor --thread-pool-size 10 --db-limit-number 1000 --unzip-dir /WorkflowManager/unzip --storage-source LOCAL --confidence 100.0 --remote-filestorage http://10.69.143.202:8088 --accesskey 111 --secretkey 111 --endpoint --region us-east-1 --bucket ygomi-fws --debug</msg>
<status status="PASS" endtime="20180427 15:49:03.112" starttime="20180427 15:49:03.111"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.114" starttime="20180427 15:49:03.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>to json</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.117" level="INFO">To JSON using : content={"duration":1806,"std_err":"","id":"4","time":1524815341874,"ret_code":0,"std_out":"/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154901_out_0.14.log","status":"done"} </msg>
<msg timestamp="20180427 15:49:03.117" level="INFO">To JSON using : pretty_print=False </msg>
<status status="PASS" endtime="20180427 15:49:03.117" starttime="20180427 15:49:03.116"></status>
</kw>
<msg timestamp="20180427 15:49:03.118" level="INFO">${tContent} = {u'std_err': u'', u'status': u'done', u'std_out': u'/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154901_out_0.14.log', ...</msg>
<status status="PASS" endtime="20180427 15:49:03.118" starttime="20180427 15:49:03.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.119" level="INFO">{"duration":1806,"std_err":"","id":"4","time":1524815341874,"ret_code":0,"std_out":"/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154901_out_0.14.log","status":"done"}</msg>
<status status="PASS" endtime="20180427 15:49:03.119" starttime="20180427 15:49:03.118"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:49:03.121" level="INFO">${tContentType} = &lt;type 'dict'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.121" starttime="20180427 15:49:03.120"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.123" level="INFO">${tContent} = {u'std_err': u'', u'status': u'done', u'std_out': u'/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/0/rdb-server-snippetAnalyzer-cmd.jar_20180427154901_out_0.14.log', ...</msg>
<status status="PASS" endtime="20180427 15:49:03.123" starttime="20180427 15:49:03.122"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.125" level="INFO">${tContentType} = &lt;type 'dict'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.125" starttime="20180427 15:49:03.124"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.125" starttime="20180427 15:49:01.280"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:03.127" starttime="20180427 15:49:03.126"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>api return code should be equal as 200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>api return code should be equal as 200</arg>
</arguments>
<msg timestamp="20180427 15:49:03.130" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.130" starttime="20180427 15:49:03.128"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.130" starttime="20180427 15:49:03.127"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>"ret_code":0</arg>
<arg>api return content should contain "ret_code":0</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>"ret_code":0</arg>
<arg>api return content should contain "ret_code":0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.133" starttime="20180427 15:49:03.132"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.133" starttime="20180427 15:49:03.131"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>"status":"done"</arg>
<arg>api return content should contain "std_out":"","status":"done"</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>"status":"done"</arg>
<arg>api return content should contain "std_out":"","status":"done"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.136" starttime="20180427 15:49:03.135"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.136" starttime="20180427 15:49:03.134"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:49:03.139" level="INFO">${jiraNOs} = [u'RDB-23144', u'post', u'/commands/{commond', u'name}/executions', u'with', u'command', u'no', u'execute', u'permission']</msg>
<status status="PASS" endtime="20180427 15:49:03.139" starttime="20180427 15:49:03.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.140" level="INFO">RDB-23144</msg>
<status status="PASS" endtime="20180427 15:49:03.140" starttime="20180427 15:49:03.139"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:03.142" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:49:03.155" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.155" level="INFO">${time} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:03.155" starttime="20180427 15:49:03.141"></status>
</kw>
<msg timestamp="20180427 15:49:03.156" level="INFO">${rFolderDate} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:03.156" starttime="20180427 15:49:03.140"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:49:03.157" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:49:03.203" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.204" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:49:03.204" starttime="20180427 15:49:03.156"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.210" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:03.211" starttime="20180427 15:49:03.204"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:03.214" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-49/RDB-23144'.</msg>
<msg timestamp="20180427 15:49:03.259" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.260" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:03.260" starttime="20180427 15:49:03.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:03.262" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.262" starttime="20180427 15:49:03.261"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.262" starttime="20180427 15:49:03.211"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.264" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:49:03.264" starttime="20180427 15:49:03.264"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:03.269" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-49/RDB-23144'.</msg>
<msg timestamp="20180427 15:49:03.314" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.315" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:03.315" starttime="20180427 15:49:03.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:03.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.317" starttime="20180427 15:49:03.316"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.317" starttime="20180427 15:49:03.265"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.318" starttime="20180427 15:49:03.263"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.319" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:49:03.319" starttime="20180427 15:49:03.318"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:03.323" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-49/RDB-23144'.</msg>
<msg timestamp="20180427 15:49:03.368" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.369" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:03.369" starttime="20180427 15:49:03.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:03.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.371" starttime="20180427 15:49:03.369"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.371" starttime="20180427 15:49:03.320"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.371" starttime="20180427 15:49:03.318"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.371" starttime="20180427 15:49:03.263"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:03.374" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:49:03.419" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.420" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:03.420" starttime="20180427 15:49:03.373"></status>
</kw>
<msg timestamp="20180427 15:49:03.421" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:03.421" starttime="20180427 15:49:03.372"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.427" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:03.427" starttime="20180427 15:49:03.421"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.428" starttime="20180427 15:49:03.428"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.429" starttime="20180427 15:49:03.429"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.430" starttime="20180427 15:49:03.137"></status>
</kw>
<doc>| Description | test post:/commands/{commond_name}/executions API with_command_no_execute_permission |
| Input | snippets |
| Process | call Data Process API to send requast |
| Expect result | 1.return code 200,content is done |
| remark | for data processor do not care the type of flow, so in this case, use rdb-server-snippetAnalyzer-cmd.jar flow to represent others |</doc>
<tags>
<tag>level_1</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20180427 15:49:03.430" critical="yes" starttime="20180427 15:48:03.321"></status>
</test>
<test id="s1-s2-s1-s1-s1-t3" name="RDB-24985_post_/commands/{commond_name}/executions_with_cmdname_not_exist">
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:03.434" starttime="20180427 15:49:03.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>null</arg>
</arguments>
<msg timestamp="20180427 15:49:03.435" level="INFO">null</msg>
<status status="PASS" endtime="20180427 15:49:03.435" starttime="20180427 15:49:03.434"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:03.436" starttime="20180427 15:49:03.436"></status>
</kw>
<kw name="Post Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.post data to a Restful API and check the post result |</doc>
<arguments>
<arg>test-command-name</arg>
<arg>false</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:49:03.447" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:49:03.447" starttime="20180427 15:49:03.446"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.449" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:03.450" starttime="20180427 15:49:03.448"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
<arg>${pPostData}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:03.461" level="INFO">Post Request using : alias=dataprocess, uri=/DataProcessor/commands/test-command-name/executions?asyn=, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180427 15:49:03.462" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.462" starttime="20180427 15:49:03.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>url = /DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.463" level="INFO">url = /DataProcessor/commands/test-command-name/executions?asyn=</msg>
<status status="PASS" endtime="20180427 15:49:03.463" starttime="20180427 15:49:03.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pPostData}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.464" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:03.464" starttime="20180427 15:49:03.463"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.464" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.464" starttime="20180427 15:49:03.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>to json</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<msg timestamp="20180427 15:49:03.465" level="INFO">${tContent} = None</msg>
<status status="PASS" endtime="20180427 15:49:03.465" starttime="20180427 15:49:03.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.466" level="INFO">command name is not exists</msg>
<status status="PASS" endtime="20180427 15:49:03.466" starttime="20180427 15:49:03.466"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:49:03.467" level="INFO">${tContentType} = &lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.467" starttime="20180427 15:49:03.467"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.468" level="INFO">${tContent} = None</msg>
<status status="PASS" endtime="20180427 15:49:03.468" starttime="20180427 15:49:03.467"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.469" level="INFO">${tContentType} = &lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.469" starttime="20180427 15:49:03.468"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.469" starttime="20180427 15:49:03.445"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:03.470" starttime="20180427 15:49:03.469"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>404</arg>
<arg>api return code(${response.status_code}) should be equal as 404</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
<arg>api return code(${response.status_code}) should be equal as 404</arg>
</arguments>
<msg timestamp="20180427 15:49:03.472" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.472" starttime="20180427 15:49:03.471"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.472" starttime="20180427 15:49:03.470"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>command name is not exists</arg>
<arg>api return content(${response.content}) should contain "command name is not exists"</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>command name is not exists</arg>
<arg>api return content(${response.content}) should contain "command name is not exists"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.474" starttime="20180427 15:49:03.473"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.474" starttime="20180427 15:49:03.473"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:49:03.479" level="INFO">${jiraNOs} = [u'RDB-24985', u'post', u'/commands/{commond', u'name}/executions', u'with', u'cmdname', u'not', u'exist']</msg>
<status status="PASS" endtime="20180427 15:49:03.479" starttime="20180427 15:49:03.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.481" level="INFO">RDB-24985</msg>
<status status="PASS" endtime="20180427 15:49:03.481" starttime="20180427 15:49:03.481"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:03.483" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:49:03.496" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.497" level="INFO">${time} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:03.497" starttime="20180427 15:49:03.482"></status>
</kw>
<msg timestamp="20180427 15:49:03.498" level="INFO">${rFolderDate} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:03.498" starttime="20180427 15:49:03.482"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:49:03.499" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:49:03.543" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.543" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:49:03.543" starttime="20180427 15:49:03.499"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.545" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:03.545" starttime="20180427 15:49:03.543"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:03.546" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-49/RDB-24985'.</msg>
<msg timestamp="20180427 15:49:03.591" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.592" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:03.592" starttime="20180427 15:49:03.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:03.593" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.593" starttime="20180427 15:49:03.592"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.593" starttime="20180427 15:49:03.545"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.594" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:49:03.594" starttime="20180427 15:49:03.594"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:03.596" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-49/RDB-24985'.</msg>
<msg timestamp="20180427 15:49:03.642" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.642" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:03.642" starttime="20180427 15:49:03.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:03.643" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.643" starttime="20180427 15:49:03.643"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.644" starttime="20180427 15:49:03.595"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.644" starttime="20180427 15:49:03.593"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.644" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:49:03.645" starttime="20180427 15:49:03.644"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:03.646" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-49/RDB-24985'.</msg>
<msg timestamp="20180427 15:49:03.691" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.691" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:03.691" starttime="20180427 15:49:03.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:03.693" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:03.693" starttime="20180427 15:49:03.692"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.694" starttime="20180427 15:49:03.645"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.694" starttime="20180427 15:49:03.644"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.694" starttime="20180427 15:49:03.593"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:03.696" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:49:03.742" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:03.742" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:03.742" starttime="20180427 15:49:03.695"></status>
</kw>
<msg timestamp="20180427 15:49:03.743" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:03.743" starttime="20180427 15:49:03.694"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.750" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:03.750" starttime="20180427 15:49:03.744"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.751" starttime="20180427 15:49:03.751"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:03.752" starttime="20180427 15:49:03.752"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:03.753" starttime="20180427 15:49:03.475"></status>
</kw>
<doc>| Description | test post:/commands/{commond_name}/executions API normal execute flow |
| Input | snippets |
| Process | call Data Process API to send requast |
| Expect result | 1.return code 404,content is done |</doc>
<tags>
<tag>level_3</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="3 minutes"></timeout>
<status status="PASS" endtime="20180427 15:49:03.753" critical="yes" starttime="20180427 15:49:03.431"></status>
</test>
<test id="s1-s2-s1-s1-s1-t4" name="RDB-23116_post_/commands/{commond_name}/executions_with_miss_flow_required_params">
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:03.757" starttime="20180427 15:49:03.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>null</arg>
</arguments>
<msg timestamp="20180427 15:49:03.759" level="INFO">null</msg>
<status status="PASS" endtime="20180427 15:49:03.760" starttime="20180427 15:49:03.758"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:03.762" starttime="20180427 15:49:03.760"></status>
</kw>
<kw name="Post Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.post data to a Restful API and check the post result |</doc>
<arguments>
<arg>rdb-server-snippetAnalyzer-cmd.jar</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:49:03.776" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:49:03.776" starttime="20180427 15:49:03.773"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:03.777" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:03.778" starttime="20180427 15:49:03.777"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
<arg>${pPostData}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:04.024" level="INFO">Post Request using : alias=dataprocess, uri=/DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=false, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180427 15:49:04.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.025" starttime="20180427 15:49:03.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>url = /DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.027" level="INFO">url = /DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=false</msg>
<status status="PASS" endtime="20180427 15:49:04.027" starttime="20180427 15:49:04.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pPostData}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.028" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:04.029" starttime="20180427 15:49:04.028"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.030" starttime="20180427 15:49:04.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>to json</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.033" level="INFO">To JSON using : content={"duration":227,"std_err":"/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/1/rdb-server-snippetAnalyzer-cmd.jar_20180427154904_err_1.18.log","id":"5","time":1524815344365,"ret_code":1,"std_out":"","status":"done"} </msg>
<msg timestamp="20180427 15:49:04.034" level="INFO">To JSON using : pretty_print=False </msg>
<status status="PASS" endtime="20180427 15:49:04.034" starttime="20180427 15:49:04.032"></status>
</kw>
<msg timestamp="20180427 15:49:04.034" level="INFO">${tContent} = {u'std_err': u'/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/1/rdb-server-snippetAnalyzer-cmd.jar_20180427154904_err_1.18.log', u'status': u'done', u'std_out': u'', ...</msg>
<status status="PASS" endtime="20180427 15:49:04.034" starttime="20180427 15:49:04.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.036" level="INFO">{"duration":227,"std_err":"/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/1/rdb-server-snippetAnalyzer-cmd.jar_20180427154904_err_1.18.log","id":"5","time":1524815344365,"ret_code":1,"std_out":"","status":"done"}</msg>
<status status="PASS" endtime="20180427 15:49:04.036" starttime="20180427 15:49:04.035"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:49:04.038" level="INFO">${tContentType} = &lt;type 'dict'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.038" starttime="20180427 15:49:04.037"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.040" level="INFO">${tContent} = {u'std_err': u'/opt/ygomi/roadDB/file_storage/log/rdb-server-snippetAnalyzer-cmd.jar/2018-04-27/1/rdb-server-snippetAnalyzer-cmd.jar_20180427154904_err_1.18.log', u'status': u'done', u'std_out': u'', ...</msg>
<status status="PASS" endtime="20180427 15:49:04.040" starttime="20180427 15:49:04.039"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.042" level="INFO">${tContentType} = &lt;type 'dict'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.042" starttime="20180427 15:49:04.041"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.042" starttime="20180427 15:49:03.772"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.043" starttime="20180427 15:49:04.043"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>api return code(${response.content}) should be equal as 200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>api return code(${response.content}) should be equal as 200</arg>
</arguments>
<msg timestamp="20180427 15:49:04.046" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.047" starttime="20180427 15:49:04.045"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.047" starttime="20180427 15:49:04.044"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>"ret_code":1,"std_out":"","status":"done"</arg>
<arg>api return content should contain "ret_code":1,"std_out":"","status":"done"</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>"ret_code":1,"std_out":"","status":"done"</arg>
<arg>api return content should contain "ret_code":1,"std_out":"","status":"done"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:04.050" starttime="20180427 15:49:04.049"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.050" starttime="20180427 15:49:04.048"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:49:04.053" level="INFO">${jiraNOs} = [u'RDB-23116', u'post', u'/commands/{commond', u'name}/executions', u'with', u'miss', u'flow', u'required', u'params']</msg>
<status status="PASS" endtime="20180427 15:49:04.053" starttime="20180427 15:49:04.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.054" level="INFO">RDB-23116</msg>
<status status="PASS" endtime="20180427 15:49:04.054" starttime="20180427 15:49:04.053"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:04.056" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:49:04.070" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.070" level="INFO">${time} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.070" starttime="20180427 15:49:04.056"></status>
</kw>
<msg timestamp="20180427 15:49:04.071" level="INFO">${rFolderDate} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.071" starttime="20180427 15:49:04.054"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:49:04.071" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:49:04.115" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.115" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:49:04.115" starttime="20180427 15:49:04.071"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.118" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.118" starttime="20180427 15:49:04.116"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.120" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-49/RDB-23116'.</msg>
<msg timestamp="20180427 15:49:04.165" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.165" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.166" starttime="20180427 15:49:04.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.168" starttime="20180427 15:49:04.166"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.168" starttime="20180427 15:49:04.119"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.170" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:49:04.170" starttime="20180427 15:49:04.169"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.174" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-49/RDB-23116'.</msg>
<msg timestamp="20180427 15:49:04.219" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.220" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.220" starttime="20180427 15:49:04.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.221" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.222" starttime="20180427 15:49:04.220"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.222" starttime="20180427 15:49:04.171"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.222" starttime="20180427 15:49:04.169"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.224" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:49:04.224" starttime="20180427 15:49:04.223"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.227" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-49/RDB-23116'.</msg>
<msg timestamp="20180427 15:49:04.273" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.273" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.273" starttime="20180427 15:49:04.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.275" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.275" starttime="20180427 15:49:04.274"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.276" starttime="20180427 15:49:04.225"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.276" starttime="20180427 15:49:04.222"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.276" starttime="20180427 15:49:04.168"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:04.278" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:49:04.324" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.325" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:04.325" starttime="20180427 15:49:04.278"></status>
</kw>
<msg timestamp="20180427 15:49:04.326" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:04.326" starttime="20180427 15:49:04.276"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.332" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:04.332" starttime="20180427 15:49:04.326"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:04.334" starttime="20180427 15:49:04.333"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:04.335" starttime="20180427 15:49:04.334"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.335" starttime="20180427 15:49:04.051"></status>
</kw>
<doc>| Description | test post:/commands/{commond_name}/executions API with_miss_required_params |
| Input | |
| Process | call Data Process API to send requast |
| Expect result | return code 200,error message is correct |</doc>
<tags>
<tag>level_3</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="3 minutes"></timeout>
<status status="PASS" endtime="20180427 15:49:04.335" critical="yes" starttime="20180427 15:49:03.754"></status>
</test>
<test id="s1-s2-s1-s1-s1-t5" name="RDB-25060_post_/commands/{commond_name}/executions_with_asyn_true">
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.340" starttime="20180427 15:49:04.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>null</arg>
</arguments>
<msg timestamp="20180427 15:49:04.341" level="INFO">null</msg>
<status status="PASS" endtime="20180427 15:49:04.341" starttime="20180427 15:49:04.340"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.342" starttime="20180427 15:49:04.342"></status>
</kw>
<kw name="Post Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.post data to a Restful API and check the post result |</doc>
<arguments>
<arg>rdb-server-snippetAnalyzer-cmd.jar</arg>
<arg>true</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:49:04.352" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:49:04.353" starttime="20180427 15:49:04.352"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.354" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:04.354" starttime="20180427 15:49:04.353"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
<arg>${pPostData}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:04.372" level="INFO">Post Request using : alias=dataprocess, uri=/DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=true, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180427 15:49:04.373" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.373" starttime="20180427 15:49:04.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>url = /DataProcessor/commands/${pCommandName}/executions?asyn=${pIsAsyn}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.375" level="INFO">url = /DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions?asyn=true</msg>
<status status="PASS" endtime="20180427 15:49:04.376" starttime="20180427 15:49:04.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pPostData}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.378" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:04.378" starttime="20180427 15:49:04.377"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.379" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.379" starttime="20180427 15:49:04.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>to json</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.380" level="INFO">To JSON using : content=6 </msg>
<msg timestamp="20180427 15:49:04.381" level="INFO">To JSON using : pretty_print=False </msg>
<status status="PASS" endtime="20180427 15:49:04.381" starttime="20180427 15:49:04.380"></status>
</kw>
<msg timestamp="20180427 15:49:04.381" level="INFO">${tContent} = 6</msg>
<status status="PASS" endtime="20180427 15:49:04.381" starttime="20180427 15:49:04.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.381" level="INFO">6</msg>
<status status="PASS" endtime="20180427 15:49:04.381" starttime="20180427 15:49:04.381"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:49:04.382" level="INFO">${tContentType} = &lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.382" starttime="20180427 15:49:04.382"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.382" level="INFO">${tContent} = 6</msg>
<status status="PASS" endtime="20180427 15:49:04.383" starttime="20180427 15:49:04.382"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.383" level="INFO">${tContentType} = &lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.383" starttime="20180427 15:49:04.383"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.383" starttime="20180427 15:49:04.350"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.384" starttime="20180427 15:49:04.383"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>api return code(${response.content}) should be equal as 202</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>api return code(${response.content}) should be equal as 202</arg>
</arguments>
<msg timestamp="20180427 15:49:04.385" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.385" starttime="20180427 15:49:04.384"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.385" starttime="20180427 15:49:04.384"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${tContentType}</arg>
<arg>&lt;type 'int'&gt;</arg>
<arg>api return content should be a int number , it is a execution id</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${tContentType}</arg>
<arg>&lt;type 'int'&gt;</arg>
<arg>api return content should be a int number , it is a execution id</arg>
</arguments>
<msg timestamp="20180427 15:49:04.386" level="INFO">Argument types are:
&lt;type 'type'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.386" starttime="20180427 15:49:04.385"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.386" starttime="20180427 15:49:04.385"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:49:04.387" level="INFO">${jiraNOs} = [u'RDB-25060', u'post', u'/commands/{commond', u'name}/executions', u'with', u'asyn', u'true']</msg>
<status status="PASS" endtime="20180427 15:49:04.387" starttime="20180427 15:49:04.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.388" level="INFO">RDB-25060</msg>
<status status="PASS" endtime="20180427 15:49:04.388" starttime="20180427 15:49:04.387"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:04.388" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:49:04.401" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.402" level="INFO">${time} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.402" starttime="20180427 15:49:04.388"></status>
</kw>
<msg timestamp="20180427 15:49:04.402" level="INFO">${rFolderDate} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.402" starttime="20180427 15:49:04.388"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:49:04.403" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:49:04.447" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.447" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:49:04.447" starttime="20180427 15:49:04.403"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.453" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.454" starttime="20180427 15:49:04.448"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.457" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-49/RDB-25060'.</msg>
<msg timestamp="20180427 15:49:04.502" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.503" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.503" starttime="20180427 15:49:04.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.505" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.505" starttime="20180427 15:49:04.504"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.506" starttime="20180427 15:49:04.454"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.508" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:49:04.508" starttime="20180427 15:49:04.507"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.511" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-49/RDB-25060'.</msg>
<msg timestamp="20180427 15:49:04.557" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.557" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.557" starttime="20180427 15:49:04.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.560" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.560" starttime="20180427 15:49:04.558"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.561" starttime="20180427 15:49:04.508"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.561" starttime="20180427 15:49:04.506"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.562" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:49:04.562" starttime="20180427 15:49:04.561"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.566" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-49/RDB-25060'.</msg>
<msg timestamp="20180427 15:49:04.611" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.612" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.612" starttime="20180427 15:49:04.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.614" starttime="20180427 15:49:04.612"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.614" starttime="20180427 15:49:04.563"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.614" starttime="20180427 15:49:04.561"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.614" starttime="20180427 15:49:04.506"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:04.617" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:49:04.662" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.663" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:04.663" starttime="20180427 15:49:04.616"></status>
</kw>
<msg timestamp="20180427 15:49:04.664" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:04.664" starttime="20180427 15:49:04.615"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.670" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:04.671" starttime="20180427 15:49:04.664"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:04.672" starttime="20180427 15:49:04.671"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:04.672" starttime="20180427 15:49:04.672"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.673" starttime="20180427 15:49:04.386"></status>
</kw>
<doc>| Description | test post:/commands/{commond_name}/executions API with asyn is true |
| Input | |
| Process | call Data Process API to send requast |
| Expect result | return 202 code |</doc>
<tags>
<tag>level_3</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="3 minutes"></timeout>
<status status="PASS" endtime="20180427 15:49:04.673" critical="yes" starttime="20180427 15:49:04.336"></status>
</test>
<test id="s1-s2-s1-s1-s1-t6" name="RDB-25077_get_/commands/{commond_name}/executions/{execution_id}_with_cmdname_not_exist">
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.677" starttime="20180427 15:49:04.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>null</arg>
</arguments>
<msg timestamp="20180427 15:49:04.678" level="INFO">null</msg>
<status status="PASS" endtime="20180427 15:49:04.679" starttime="20180427 15:49:04.678"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.680" starttime="20180427 15:49:04.679"></status>
</kw>
<kw name="Get Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.get info of executions |</doc>
<arguments>
<arg>100</arg>
<arg>test-command-name</arg>
<arg>false</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:49:04.687" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:49:04.687" starttime="20180427 15:49:04.686"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.688" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:04.690" starttime="20180427 15:49:04.688"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions/${pExecutionId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:04.698" level="INFO">Get Request using : alias=dataprocess, uri=/DataProcessor/commands/test-command-name/executions/100, headers=None json=None</msg>
<msg timestamp="20180427 15:49:04.699" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.699" starttime="20180427 15:49:04.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>/DataProcessor/commands/${pCommandName}/executions/${pExecutionId}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.701" level="INFO">/DataProcessor/commands/test-command-name/executions/100</msg>
<status status="PASS" endtime="20180427 15:49:04.701" starttime="20180427 15:49:04.700"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.702" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.702" starttime="20180427 15:49:04.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<msg timestamp="20180427 15:49:04.704" level="INFO">${tContent} = None</msg>
<status status="PASS" endtime="20180427 15:49:04.704" starttime="20180427 15:49:04.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.706" level="INFO">command name is not exists</msg>
<status status="PASS" endtime="20180427 15:49:04.706" starttime="20180427 15:49:04.705"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:49:04.708" level="INFO">${tContentType} = &lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.708" starttime="20180427 15:49:04.707"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.709" level="INFO">${tContent} = None</msg>
<status status="PASS" endtime="20180427 15:49:04.710" starttime="20180427 15:49:04.709"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.711" level="INFO">${tContentType} = &lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.711" starttime="20180427 15:49:04.710"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.712" starttime="20180427 15:49:04.684"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:04.713" starttime="20180427 15:49:04.712"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>404</arg>
<arg>api return code(${response.status_code}) should be equal as 404</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
<arg>api return code(${response.status_code}) should be equal as 404</arg>
</arguments>
<msg timestamp="20180427 15:49:04.716" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.717" starttime="20180427 15:49:04.715"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.718" starttime="20180427 15:49:04.714"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>command name is not exists</arg>
<arg>api return content(${response.content}) should contain "command name is not exists"</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>command name is not exists</arg>
<arg>api return content(${response.content}) should contain "command name is not exists"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:04.723" starttime="20180427 15:49:04.721"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.723" starttime="20180427 15:49:04.719"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:49:04.725" level="INFO">${jiraNOs} = [u'RDB-25077', u'get', u'/commands/{commond', u'name}/executions/{execution', u'id}', u'with', u'cmdname', u'not', u'exist']</msg>
<status status="PASS" endtime="20180427 15:49:04.725" starttime="20180427 15:49:04.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.726" level="INFO">RDB-25077</msg>
<status status="PASS" endtime="20180427 15:49:04.726" starttime="20180427 15:49:04.726"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:04.728" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:49:04.741" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.741" level="INFO">${time} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.741" starttime="20180427 15:49:04.727"></status>
</kw>
<msg timestamp="20180427 15:49:04.741" level="INFO">${rFolderDate} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.742" starttime="20180427 15:49:04.727"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:49:04.742" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:49:04.786" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.787" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:49:04.787" starttime="20180427 15:49:04.742"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.793" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:04.794" starttime="20180427 15:49:04.788"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.797" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-49/RDB-25077'.</msg>
<msg timestamp="20180427 15:49:04.842" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.843" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.843" starttime="20180427 15:49:04.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.845" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.845" starttime="20180427 15:49:04.844"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.845" starttime="20180427 15:49:04.794"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.847" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:49:04.847" starttime="20180427 15:49:04.846"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.850" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-49/RDB-25077'.</msg>
<msg timestamp="20180427 15:49:04.896" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.897" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.897" starttime="20180427 15:49:04.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.899" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.899" starttime="20180427 15:49:04.898"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.900" starttime="20180427 15:49:04.848"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.900" starttime="20180427 15:49:04.846"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:04.901" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:49:04.902" starttime="20180427 15:49:04.901"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:04.905" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-49/RDB-25077'.</msg>
<msg timestamp="20180427 15:49:04.950" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:04.951" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:04.951" starttime="20180427 15:49:04.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:04.953" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:04.953" starttime="20180427 15:49:04.952"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.953" starttime="20180427 15:49:04.902"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.953" starttime="20180427 15:49:04.900"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:04.954" starttime="20180427 15:49:04.845"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:04.956" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:49:05.002" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:05.002" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:05.002" starttime="20180427 15:49:04.955"></status>
</kw>
<msg timestamp="20180427 15:49:05.003" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:05.003" starttime="20180427 15:49:04.954"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:49:05.008" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:05.008" starttime="20180427 15:49:05.004"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:05.008" starttime="20180427 15:49:05.008"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:05.008" starttime="20180427 15:49:05.008"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:05.009" starttime="20180427 15:49:04.724"></status>
</kw>
<doc>| Description | test get:/commands/{commond_name}/executions/{execution_id} API normal execute flow |
| Input | |
| Process | call Data Process API to send requast |
| Expect result | 1.return code 404, |</doc>
<tags>
<tag>level_3</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="3 minutes"></timeout>
<status status="PASS" endtime="20180427 15:49:05.009" critical="yes" starttime="20180427 15:49:04.674"></status>
</test>
<test id="s1-s2-s1-s1-s1-t7" name="RDB-25077_get_/commands/{commond_name}/executions/{execution_id}_with_execution_id_not_exist">
<kw name="Print Input Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:05.010" starttime="20180427 15:49:05.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>null</arg>
</arguments>
<msg timestamp="20180427 15:49:05.010" level="INFO">null</msg>
<status status="PASS" endtime="20180427 15:49:05.010" starttime="20180427 15:49:05.010"></status>
</kw>
<kw name="Print Execute Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:05.011" starttime="20180427 15:49:05.011"></status>
</kw>
<kw name="Get Request to Execution API" library="Data-Processor_utilities">
<tags>
<tag>siqi.zeng</tag>
</tags>
<doc>| Description | 1.get info of executions |</doc>
<arguments>
<arg>1</arg>
<arg>rdb-server-snippetAnalyzer-cmd.jar</arg>
<arg>false</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Accept=text/html</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20180427 15:49:05.014" level="INFO">${header} = {u'Content-Type': u'application/json', u'Accept': u'text/html'}</msg>
<status status="PASS" endtime="20180427 15:49:05.014" starttime="20180427 15:49:05.013"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>dataprocess</arg>
<arg>${sDataProcessorrUrl}</arg>
</arguments>
<msg timestamp="20180427 15:49:05.014" level="INFO">Creating Session using : alias=dataprocess, url=http://10.69.143.202:9030, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180427 15:49:05.014" starttime="20180427 15:49:05.014"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>dataprocess</arg>
<arg>/DataProcessor/commands/${pCommandName}/executions/${pExecutionId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180427 15:49:07.571" level="INFO">Get Request using : alias=dataprocess, uri=/DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions/1, headers=None json=None</msg>
<msg timestamp="20180427 15:49:07.572" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.572" starttime="20180427 15:49:05.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>/DataProcessor/commands/${pCommandName}/executions/${pExecutionId}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.574" level="INFO">/DataProcessor/commands/rdb-server-snippetAnalyzer-cmd.jar/executions/1</msg>
<status status="PASS" endtime="20180427 15:49:07.574" starttime="20180427 15:49:07.573"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.576" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.576" starttime="20180427 15:49:07.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${pToJson}"=="true"</arg>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${tContent}</var>
</assign>
<msg timestamp="20180427 15:49:07.578" level="INFO">${tContent} = None</msg>
<status status="PASS" endtime="20180427 15:49:07.578" starttime="20180427 15:49:07.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.579" level="INFO">Command execution id is not exists.</msg>
<status status="PASS" endtime="20180427 15:49:07.579" starttime="20180427 15:49:07.578"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>type(${tContent})</arg>
</arguments>
<assign>
<var>${tContentType}</var>
</assign>
<msg timestamp="20180427 15:49:07.581" level="INFO">${tContentType} = &lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.581" starttime="20180427 15:49:07.580"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContent}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.582" level="INFO">${tContent} = None</msg>
<status status="PASS" endtime="20180427 15:49:07.582" starttime="20180427 15:49:07.582"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tContentType}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.584" level="INFO">${tContentType} = &lt;type 'NoneType'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.584" starttime="20180427 15:49:07.583"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.584" starttime="20180427 15:49:05.013"></status>
</kw>
<kw name="Print Check Results Line" library="basic_operation">
<status status="PASS" endtime="20180427 15:49:07.585" starttime="20180427 15:49:07.585"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should be equal as strings</arg>
<arg>${response.status_code}</arg>
<arg>404</arg>
<arg>api return code(${response.status_code}) should be equal as 404</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>404</arg>
<arg>api return code(${response.status_code}) should be equal as 404</arg>
</arguments>
<msg timestamp="20180427 15:49:07.588" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.589" starttime="20180427 15:49:07.587"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.589" starttime="20180427 15:49:07.586"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should contain</arg>
<arg>${response.content}</arg>
<arg>Command execution id is not exists.</arg>
<arg>api return content(${response.content}) should contain "Command execution id is not exists."</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response.content}</arg>
<arg>Command execution id is not exists.</arg>
<arg>api return content(${response.content}) should contain "Command execution id is not exists."</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:07.592" starttime="20180427 15:49:07.591"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.592" starttime="20180427 15:49:07.590"></status>
</kw>
<kw type="teardown" name="Backup Test Results" library="public_utilities">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | Back up your test results and transfer them to apache server.the backup dir in your own server :~/test_results ; the backup dir under apache server: var/www/html/RDBtestDataForCI/test_results ; you can view the back results via :http://10.69.141.45/RDBtestDataForCI/test_results/  |</doc>
<arguments>
<arg>@{sDataProcessorBackupList}</arg>
</arguments>
<kw name="Split" library="string">
<doc>split(s [,sep [,maxsplit]]) -&gt; list of strings</doc>
<arguments>
<arg>${testName}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${jiraNOs}</var>
</assign>
<msg timestamp="20180427 15:49:07.596" level="INFO">${jiraNOs} = [u'RDB-25077', u'get', u'/commands/{commond', u'name}/executions/{execution', u'id}', u'with', u'execution', u'id', u'not', u'exist']</msg>
<status status="PASS" endtime="20180427 15:49:07.596" starttime="20180427 15:49:07.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${jiraNOs[0]}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.597" level="INFO">RDB-25077</msg>
<status status="PASS" endtime="20180427 15:49:07.597" starttime="20180427 15:49:07.596"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>16</arg>
</arguments>
<assign>
<var>${rFolderDate}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:07.599" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-16'.</msg>
<msg timestamp="20180427 15:49:07.613" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:07.613" level="INFO">${time} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:07.613" starttime="20180427 15:49:07.599"></status>
</kw>
<msg timestamp="20180427 15:49:07.613" level="INFO">${rFolderDate} = 2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:07.614" starttime="20180427 15:49:07.598"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>cd ~; pwd</arg>
</arguments>
<assign>
<var>${userPath}</var>
</assign>
<msg timestamp="20180427 15:49:07.614" level="INFO">Executing command 'cd ~; pwd'.</msg>
<msg timestamp="20180427 15:49:07.659" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:07.660" level="INFO">${userPath} = /home/roaddb</msg>
<status status="PASS" endtime="20180427 15:49:07.660" starttime="20180427 15:49:07.614"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tResultsPath}</arg>
<arg>${userPath}/test_results/${rFolderDate}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.668" level="INFO">${tResultsPath} = /home/roaddb/test_results/2018-04-27-15-49</msg>
<status status="PASS" endtime="20180427 15:49:07.668" starttime="20180427 15:49:07.660"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>mkdir -p \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:07.671" level="INFO">Executing command 'mkdir -p  /home/roaddb/test_results/2018-04-27-15-49/RDB-25077'.</msg>
<msg timestamp="20180427 15:49:07.716" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:07.717" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:07.717" starttime="20180427 15:49:07.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:07.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.719" starttime="20180427 15:49:07.718"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.720" starttime="20180427 15:49:07.669"></status>
</kw>
<kw type="for" name="${result} IN [ @{pOrigResultsPath} ]">
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/log/service/DataProcessor.log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.721" level="INFO">/opt/ygomi/roadDB/log/service/DataProcessor.log</msg>
<status status="PASS" endtime="20180427 15:49:07.722" starttime="20180427 15:49:07.721"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:07.725" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/log/service/DataProcessor.log  /home/roaddb/test_results/2018-04-27-15-49/RDB-25077'.</msg>
<msg timestamp="20180427 15:49:07.770" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:07.770" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:07.771" starttime="20180427 15:49:07.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:07.773" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.773" starttime="20180427 15:49:07.771"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.773" starttime="20180427 15:49:07.722"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.773" starttime="20180427 15:49:07.720"></status>
</kw>
<kw type="foritem" name="${result} = /opt/ygomi/roadDB/file_storage/log">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.775" level="INFO">/opt/ygomi/roadDB/file_storage/log</msg>
<status status="PASS" endtime="20180427 15:49:07.775" starttime="20180427 15:49:07.774"></status>
</kw>
<kw name="Execute Command with Return Check" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | check the execut command with return code 0 |</doc>
<arguments>
<arg>cp -r ${result} \ ${tResultsPath}/${jiraNOs[0]}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${command}</arg>
<arg>true</arg>
<arg>true</arg>
<arg>true</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20180427 15:49:07.778" level="INFO">Executing command 'cp -r /opt/ygomi/roadDB/file_storage/log  /home/roaddb/test_results/2018-04-27-15-49/RDB-25077'.</msg>
<msg timestamp="20180427 15:49:07.824" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:07.824" level="INFO">${r} = [u'', u'', 0]</msg>
<status status="PASS" endtime="20180427 15:49:07.825" starttime="20180427 15:49:07.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${r[2]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:07.826" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:07.827" starttime="20180427 15:49:07.825"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.827" starttime="20180427 15:49:07.775"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.827" starttime="20180427 15:49:07.774"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.827" starttime="20180427 15:49:07.720"></status>
</kw>
<kw name="Get Specified Time" library="public_basic">
<tags>
<tag>qin.hu</tag>
</tags>
<doc>| Description | get the current time with format of 2018-03-23-15-52 |</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${rFolderDate2}</var>
</assign>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-${pNumber}</arg>
</arguments>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20180427 15:49:07.830" level="INFO">Executing command 'date "+%Y-%m-%d-%H-%M-%S"|cut -b 1-10'.</msg>
<msg timestamp="20180427 15:49:07.875" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:07.876" level="INFO">${time} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:07.876" starttime="20180427 15:49:07.829"></status>
</kw>
<msg timestamp="20180427 15:49:07.877" level="INFO">${rFolderDate2} = 2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:07.877" starttime="20180427 15:49:07.828"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${remotePath}</arg>
<arg>${gOrigMountDir}/test_results/${rFolderDate2}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.881" level="INFO">${remotePath} = /var/www/html/RDBtestDataForCI/test_results/2018-04-27</msg>
<status status="PASS" endtime="20180427 15:49:07.881" starttime="20180427 15:49:07.877"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>sshpass -p ${gApachePassword} ssh -o StrictHostKeychecking=no citest@${gApacheIp} \ "mkdir -p ${gOrigMountDir}/test_results/${rFolderDate2}"</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:07.881" starttime="20180427 15:49:07.881"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Command with Return Check</arg>
<arg>scp -r ${tResultsPath}/* citest@${gApacheIp}:${remotePath}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:07.881" starttime="20180427 15:49:07.881"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:07.882" starttime="20180427 15:49:07.593"></status>
</kw>
<doc>| Description | test get:/commands/{commond_name}/executions/{execution_id} API with not exist execution id |
| Input | |
| Process | call Data Process API to send requast |
| Expect result | 1.return code 404, |</doc>
<tags>
<tag>level_3</tag>
<tag>Siqi.Zeng</tag>
</tags>
<timeout value="3 minutes"></timeout>
<status status="PASS" endtime="20180427 15:49:07.882" critical="yes" starttime="20180427 15:49:05.009"></status>
</test>
<status status="PASS" endtime="20180427 15:49:07.882" starttime="20180427 15:47:01.063"></status>
</suite>
<status status="PASS" endtime="20180427 15:49:07.885" starttime="20180427 15:47:01.058"></status>
</suite>
<status status="PASS" endtime="20180427 15:49:07.887" starttime="20180427 15:47:01.053"></status>
</suite>
<status status="PASS" endtime="20180427 15:49:07.890" starttime="20180427 15:47:01.049"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System" id="s1-s3" name="System">
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System/foregroundDBMerger.txt" id="s1-s3-s1" name="foregroundDBMerger">
<test id="s1-s3-s1-t1" name="Slam Merger">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.921" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:49:07.921" starttime="20180427 15:49:07.920"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:49:07.927" starttime="20180427 15:49:07.921"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:07.928" starttime="20180427 15:49:07.927"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:49:07.928" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:49:09.383" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:47:01 CST 2018

  System load:  2.32               Processes:           305
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 57%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:47:02 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:49:09.383" starttime="20180427 15:49:07.928"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:09.384" starttime="20180427 15:49:07.920"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:09.386" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:49:09.386" starttime="20180427 15:49:09.385"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:09.388" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:09.388" starttime="20180427 15:49:09.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:09.391" starttime="20180427 15:49:09.390"></status>
</kw>
<msg timestamp="20180427 15:49:09.391" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:49:09.391" starttime="20180427 15:49:09.388"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:09.392" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:49:09.407" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:09.407" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:09.407" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:09.407" starttime="20180427 15:49:09.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.409" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:09.409" starttime="20180427 15:49:09.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.410" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:09.410" starttime="20180427 15:49:09.409"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:09.411" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:09.411" starttime="20180427 15:49:09.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:09.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:09.413" starttime="20180427 15:49:09.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.414" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:09.414" starttime="20180427 15:49:09.413"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:09.414" starttime="20180427 15:49:09.384"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:09.417" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:49:09.417" starttime="20180427 15:49:09.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:09.418" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:09.418" starttime="20180427 15:49:09.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:09.421" starttime="20180427 15:49:09.420"></status>
</kw>
<msg timestamp="20180427 15:49:09.421" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:49:09.421" starttime="20180427 15:49:09.419"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:09.423" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:49:09.468" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:09.469" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:09.469" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:09.469" starttime="20180427 15:49:09.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.471" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:09.472" starttime="20180427 15:49:09.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.473" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:09.473" starttime="20180427 15:49:09.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:09.474" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:09.474" starttime="20180427 15:49:09.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:09.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:09.476" starttime="20180427 15:49:09.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.477" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:09.477" starttime="20180427 15:49:09.476"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:09.477" starttime="20180427 15:49:09.415"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:09.480" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:49:09.480" starttime="20180427 15:49:09.479"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:09.481" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:09.482" starttime="20180427 15:49:09.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:09.484" starttime="20180427 15:49:09.484"></status>
</kw>
<msg timestamp="20180427 15:49:09.484" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:49:09.485" starttime="20180427 15:49:09.482"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:09.486" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:49:09.530" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:09.530" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:09.531" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:09.531" starttime="20180427 15:49:09.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.532" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:09.532" starttime="20180427 15:49:09.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.532" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:09.533" starttime="20180427 15:49:09.532"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:09.533" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:09.533" starttime="20180427 15:49:09.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:09.534" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:09.534" starttime="20180427 15:49:09.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:09.535" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:09.535" starttime="20180427 15:49:09.535"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:09.536" starttime="20180427 15:49:09.478"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:49:09.536" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:49:09.581" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:49:09.581" starttime="20180427 15:49:09.536"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:09.583" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:49:09.583" starttime="20180427 15:49:09.582"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:09.583" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:49:09.583" starttime="20180427 15:49:09.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:09.584" starttime="20180427 15:49:09.584"></status>
</kw>
<msg timestamp="20180427 15:49:09.584" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:49:09.584" starttime="20180427 15:49:09.584"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:09.585" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:49:20.470" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:20.471" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:49:20.471" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:20.471" starttime="20180427 15:49:09.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:20.472" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 24946
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:49:20.473" starttime="20180427 15:49:20.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:20.474" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:20.474" starttime="20180427 15:49:20.473"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:20.475" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:49:20.475" starttime="20180427 15:49:20.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:20.477" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:20.477" starttime="20180427 15:49:20.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:20.478" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 24946
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:49:20.478" starttime="20180427 15:49:20.477"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:20.479" starttime="20180427 15:49:09.582"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:20.479" starttime="20180427 15:49:09.582"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:20.482" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:49:20.482" starttime="20180427 15:49:20.481"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:20.484" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:49:20.484" starttime="20180427 15:49:20.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:20.486" starttime="20180427 15:49:20.486"></status>
</kw>
<msg timestamp="20180427 15:49:20.486" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:49:20.487" starttime="20180427 15:49:20.484"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:20.488" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:49:20.533" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:20.533" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:49:20.533" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:20.534" starttime="20180427 15:49:20.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:20.535" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:49:20.535" starttime="20180427 15:49:20.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:20.536" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:20.537" starttime="20180427 15:49:20.536"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:20.538" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:49:20.538" starttime="20180427 15:49:20.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:20.539" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:20.539" starttime="20180427 15:49:20.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:20.540" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:49:20.541" starttime="20180427 15:49:20.540"></status>
</kw>
<msg timestamp="20180427 15:49:20.541" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:49:20.541" starttime="20180427 15:49:20.480"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:20.543" starttime="20180427 15:49:20.542"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:20.543" starttime="20180427 15:49:07.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:20.544" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:20.544" starttime="20180427 15:49:20.544"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/ForegroundDBMerger/slam/snippet/* /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/ForegroundDBMerger/slam/dbbak.sql</arg>
<arg>cp ${sfilefortest}/ForegroundDBMerger/slam/1524731106507-2.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:49:20.547" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:49:20.592" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.593" starttime="20180427 15:49:20.547"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:49:20.594" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:49:20.672" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.672" starttime="20180427 15:49:20.594"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:49:20.673" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:49:20.750" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.750" starttime="20180427 15:49:20.673"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:49:20.750" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:49:20.794" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.794" starttime="20180427 15:49:20.750"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:49:20.795" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:49:20.840" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.841" starttime="20180427 15:49:20.795"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:49:20.842" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:49:20.920" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.920" starttime="20180427 15:49:20.841"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:49:20.921" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:49:20.967" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:20.967" starttime="20180427 15:49:20.921"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:49:20.968" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:49:21.013" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.014" starttime="20180427 15:49:20.968"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:21.015" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:49:21.060" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.061" starttime="20180427 15:49:21.014"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:49:21.062" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:49:21.107" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.108" starttime="20180427 15:49:21.061"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:21.109" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:49:21.186" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.187" starttime="20180427 15:49:21.108"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:49:21.188" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:49:21.233" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.234" starttime="20180427 15:49:21.187"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:49:21.235" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:49:21.280" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.280" starttime="20180427 15:49:21.234"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:21.281" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:49:21.327" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:21.327" starttime="20180427 15:49:21.281"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:21.330" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/ForegroundDBMerger/slam/snippet/*', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/']</msg>
<status status="PASS" endtime="20180427 15:49:21.330" starttime="20180427 15:49:21.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:21.333" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:49:21.333" starttime="20180427 15:49:21.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:21.336" starttime="20180427 15:49:21.335"></status>
</kw>
<msg timestamp="20180427 15:49:21.336" level="INFO">${cmd} = cp -r ~/autotest/filefortest/ForegroundDBMerger/slam/snippet/* /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</msg>
<status status="PASS" endtime="20180427 15:49:21.336" starttime="20180427 15:49:21.333"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:21.337" level="INFO">Executing command 'cp -r ~/autotest/filefortest/ForegroundDBMerger/slam/snippet/* /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:49:21.393" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:21.393" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:21.393" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:21.394" starttime="20180427 15:49:21.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:21.395" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:21.395" starttime="20180427 15:49:21.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:21.396" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:21.396" starttime="20180427 15:49:21.395"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:21.397" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:21.398" starttime="20180427 15:49:21.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:21.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:21.399" starttime="20180427 15:49:21.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:21.400" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:21.400" starttime="20180427 15:49:21.399"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:21.401" starttime="20180427 15:49:21.328"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:21.401" starttime="20180427 15:49:20.546"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:21.403" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/ForegroundDBMerger/slam/dbbak.sql'.</msg>
<msg timestamp="20180427 15:49:22.970" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:22.970" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:22.971" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:22.971" starttime="20180427 15:49:21.403"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:22.972" starttime="20180427 15:49:22.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:22.973" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:22.973" starttime="20180427 15:49:22.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:22.975" starttime="20180427 15:49:22.974"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:22.976" starttime="20180427 15:49:21.402"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:22.978" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/ForegroundDBMerger/slam/1524731106507-2.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/']</msg>
<status status="PASS" endtime="20180427 15:49:22.978" starttime="20180427 15:49:22.977"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:22.980" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:49:22.980" starttime="20180427 15:49:22.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:22.982" starttime="20180427 15:49:22.982"></status>
</kw>
<msg timestamp="20180427 15:49:22.983" level="INFO">${cmd} = cp ~/autotest/filefortest/ForegroundDBMerger/slam/1524731106507-2.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/</msg>
<status status="PASS" endtime="20180427 15:49:22.983" starttime="20180427 15:49:22.980"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:22.984" level="INFO">Executing command 'cp ~/autotest/filefortest/ForegroundDBMerger/slam/1524731106507-2.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/'.</msg>
<msg timestamp="20180427 15:49:23.029" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:23.030" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:23.030" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:23.030" starttime="20180427 15:49:22.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:23.032" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:23.032" starttime="20180427 15:49:23.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:23.033" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:23.033" starttime="20180427 15:49:23.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:23.035" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:23.035" starttime="20180427 15:49:23.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:23.036" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:23.036" starttime="20180427 15:49:23.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:23.037" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:23.038" starttime="20180427 15:49:23.037"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:23.038" starttime="20180427 15:49:22.976"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:23.038" starttime="20180427 15:49:20.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:23.040" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:23.040" starttime="20180427 15:49:23.039"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/foregroundDBMerger \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524731106507-2.json \ --ojson \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2 \ --pcfg \ /opt/ygomi/roadDB/etc/config \ --manual \ --ol ${sOutput}/ForegroundDBMerger</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:23.043" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/foregroundDBMerger', u'', u'--ijson', u'', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524731106507-2.json', u'', u'--ojson', u'',...</msg>
<status status="PASS" endtime="20180427 15:49:23.043" starttime="20180427 15:49:23.042"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:23.044" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/foregroundDBMerger</msg>
<status status="PASS" endtime="20180427 15:49:23.045" starttime="20180427 15:49:23.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:23.047" starttime="20180427 15:49:23.046"></status>
</kw>
<msg timestamp="20180427 15:49:23.047" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524731106507-2.json  --ojson  /opt/ygomi/roadDB/work_path/Work...</msg>
<status status="PASS" endtime="20180427 15:49:23.047" starttime="20180427 15:49:23.045"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:23.048" level="INFO">Executing command '/opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524731106507-2.json  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol ~/autotest/output/ForegroundDBMerger'.</msg>
<msg timestamp="20180427 15:49:24.148" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:24.150" level="INFO">${stdout} = [2018-04-27 15:49:23.668][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [SYS] Log level: 0 (foreg...</msg>
<msg timestamp="20180427 15:49:24.150" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:24.150" starttime="20180427 15:49:23.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.151" level="INFO">[2018-04-27 15:49:23.668][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [SYS] Log level: 0 (foregroundDBMergerExecute.cpp:getForegroundDBMergerInput:294)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] {
    "DivisionList": "",
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00"
        }
    ],
    "SegmentList": [
        "346953630"
    ],
    "DBStamp": "1524731106507",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524731106507-2.json  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBMerger   (otherFuns.h::410)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:49:23.669][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [SYS] BackendDB Version: 104 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:193)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:49:23.671][foregroundDBMerger][info][26205] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2/server_2018-04-27_15-49-23_26205 (DebugInfoPath.cpp::58)
[2018-04-27 15:49:23.672][foregroundDBMerger][info][26205] [SYS] server start success. (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:221)
[2018-04-27 15:49:23.675][foregroundDBMerger][debug][26205] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:49:23.676][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.684][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.684][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.690][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.690][foregroundDBMerger][info][26205] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:49:23.690][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:242)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:49:23.711][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.724][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.738][foregroundDBMerger][warning][26205] [SYS] Response data is empty. (RestDBCommandsBackend.cpp:getResult:632)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] &lt;Request&gt; -- RestDB_6_GetBEDataCommand_Request: 
Path: /foregrounddb/references/data?version_id=1524731106507
Payload: 
{"division_list":"1490154494078484481"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] &lt;Response&gt; -- RestDB_6_GetBEDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:23.751][foregroundDBMerger][warning][26205] [SYS]  0X304FF01C, check-warning: vecReferences list is empty! division dbID:1490154494078484481 (DivisionDetailCheck.cpp:CheckReferences:152)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.776][foregroundDBMerger][warning][26205] [SYS] Response data is empty. (RestDBCommandsBackend.cpp:getResult:632)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] &lt;Request&gt; -- RestDB_9_GetBEDataCommand_Request: 
Path: /foregrounddb/references/data?version_id=1524731106507
Payload: 
{"division_list":"1490154494078484482"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] &lt;Response&gt; -- RestDB_9_GetBEDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.787][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:23.788][foregroundDBMerger][warning][26205] [SYS]  0X304FF01C, check-warning: vecReferences list is empty! division dbID:1490154494078484482 (DivisionDetailCheck.cpp:CheckReferences:152)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] str_id: fromCacheDB  end: 56963788  start: 56963701  total:87(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] get slam report:1 (GenerateVehicle.cpp::217)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] Camera Parameter:794.5803223,795.576416,466.002594,290.9239807 (GenerateVehicle.cpp::237)
[2018-04-27 15:49:23.811][foregroundDBMerger][info][26205] [SAM] SecRefID0000-5219, save slam or inc, ret.snippetType:0 (OccupancyManager.cpp::196)
[2018-04-27 15:49:23.828][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:23.828][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ************ Statistics Information *************** (EvaluateVehicle.cpp::939)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Trajectory Distance: 460.3269958 (EvaluateVehicle.cpp::940)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Total KF: 72 (EvaluateVehicle.cpp::941)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Total Mp: 2521 Average Observers: 5 Max: 23 (EvaluateVehicle.cpp::942)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] FarPoint: 0 Per: 0% (EvaluateVehicle.cpp::943)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] OverReproject: 0 MaxReproject: 4.047096729 MeanReproject:0.6590081453 Percent: 0% (EvaluateVehicle.cpp::944)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Deviated KF: 0 MaxDist: 14.53790804m Per: 0% (EvaluateVehicle.cpp::945)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Deviated MeanDist: 1.874508262 stdErrDist: 2.751646042 (EvaluateVehicle.cpp::946)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::947)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ************ Statistics Reproject *************** (EvaluateVehicle.cpp::955)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Total Mp: 13258 (EvaluateVehicle.cpp::956)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Max Error: 4.047096729 (EvaluateVehicle.cpp::957)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Mean Error: 0.6590081453 (EvaluateVehicle.cpp::958)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;1 Error: 2195 (EvaluateVehicle.cpp::959)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;2 Error: 363 (EvaluateVehicle.cpp::960)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;5.99 Error: 0 (EvaluateVehicle.cpp::961)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;10 Error: 0 (EvaluateVehicle.cpp::962)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::963)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Track:0 Quality OK, snippetName:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00 (OccupancyManager.cpp::272)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] GPS Skeleton: skeleton main curve divisions/all divisions is :2/2 (CutVehicle.cpp::768)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] has large distance gap KF, toal num:15 max gap:14.34633255 large than:10 (RoadMatching.cpp::321)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] total length:445.9039706 total KF num:72 total check point num:46 (RoadMatching.cpp::337)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] there are 27grids being crossed by divisions in the global map (RoadMatching.cpp::1775)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4481 (gps index:15 gps:Lat:794.959,Lon:730.958,Alt:-188.42) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] different direction between gps(182 degree) and divisions: SecID:4481=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4481 (gps index:15 gps:Lat:794.959,Lon:730.958,Alt:-188.42) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4482 (gps index:53 gps:Lat:784.803,Lon:456.762,Alt:-190.998) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] different direction between gps(181 degree) and divisions: SecID:4482=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4482 (gps index:53 gps:Lat:784.803,Lon:456.762,Alt:-190.998) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] find pathGroups:2 find paths:2 (RoadMatching.cpp::727)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] pathGroupID:1, path num:1
path 1:4481(allSuccess,avgGap:7.56787,num:16)-&gt;4482(allSuccess,avgGap:4.77371,num:10)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] pathGroupID:2, path num:1
path 2:4481(allSuccess,avgGap:5.1268,num:12)-&gt;4482(matchFailed,avgGap:9.87993,num:15)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] allBestPath, path num:2
path 1:4481(allSuccess,avgGap:7.56787,num:16)-&gt;4482(allSuccess,avgGap:4.77371,num:10)-&gt;
path 2:4481(allSuccess,avgGap:5.1268,num:12)-&gt;4482(matchFailed,avgGap:9.87993,num:15)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] after filterCompleteOverlap, path num:1
path 1:4481(allSuccess,avgGap:7.56787,num:16)-&gt;4482(allSuccess,avgGap:4.77371,num:10)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] trackId_0_SecRefID0000-5219 MatchRet find path num:1
4481(status:allSuccess,q:1,nodeA:19,len:122.799,nodeB:38,len:240.696)-&gt;4482(status:allSuccess,q:1,nodeA:38,len:240.696,nodeB:52,len:353.226)-&gt;////
 (RoadMatching.cpp::1613)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:19,id:6305,firstLen:2000,bToRight:0 (CutVehicle.cpp::556)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:52,id:6307,firstLen:2000,bToRight:1 (CutVehicle.cpp::556)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] before process Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.799,B:0000,kf:38,trackDis:240.696; ID:4482,quality:0,A:0000,kf:38,trackDis:240.696,B:0000,kf:52,trackDis:353.226;  (CutVehicle.cpp::748)
[2018-04-27 15:49:23.887][foregroundDBMerger][debug][26205] [SAM] Final Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.799,B:0000,kf:38,trackDis:240.696; ID:4482,quality:0,A:0000,kf:38,trackDis:240.696,B:0000,kf:52,trackDis:353.226;  (CutVehicle.cpp::748)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] Track:0 Good Quality after cut:1/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] Track:0 Good Quality after cut:2/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] input cutVec size:2 sectionID:0 refID:9248954193559945219 (SelectReference.cpp::165)
[2018-04-27 15:49:23.889][foregroundDBMerger][info][26205] [SAM] curr cut piece start:8 end:49 cut kfs size:42 cut mps size:1715 (SelectReference.cpp::203)
[2018-04-27 15:49:23.890][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 3.416666746 (SelectReference.cpp::803)
[2018-04-27 15:49:23.890][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.8127884865 (SelectReference.cpp::804)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945219 has cov sub snippet num:1
------subCovinfo id:0 kf num:42 min:67 max:243 avg:151.073
weight with latter kf: 41
138  150  131  140  154  142  185  188  152  148  149  184  192  165  204  243  214  199  150  155  125  135  186  177  199  188  195  190  164  79  90  141  121  89  67  69  110  144  135  92  115  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] meanErr:0.1392614547 variance:0.1138640305 (SelectReference.cpp::454)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] meanErr:0.3435207685 variance:1.10425585 (SelectReference.cpp::515)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:0--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] Total KF:42 aveConnectKfNum:0 HectometerKfNum:14 (SelectReference.cpp::1206)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] trajectoryLen:283.8366394 firstLastKfDist:283.8040466 (SelectReference.cpp::1207)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.017654181 varianceKfToGpsDist:0.4760593176 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1229711249 varianceDirectionOffset:0.09118019789 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:3.416666746 varianceKfToPrincipalDist:0.8127884865 (SelectReference.cpp::1212)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] totalMpNum:1715 avePointToKfDist:95.66943359 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.612934947 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.468221664 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:23.927][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.127020478 score:9.872979164 (SelectReference.cpp::1366)
[2018-04-27 15:49:23.927][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:0 score:9.872979164 sectionID:1490154494078484481 refID:9248954193559945219 (SelectReference.cpp::263)
[2018-04-27 15:49:23.928][foregroundDBMerger][info][26205] [SAM] curr cut piece start:23 end:61 cut kfs size:39 cut mps size:1572 (SelectReference.cpp::203)
[2018-04-27 15:49:23.929][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 3 (SelectReference.cpp::803)
[2018-04-27 15:49:23.929][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.4069369733 (SelectReference.cpp::804)
[2018-04-27 15:49:23.962][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945219 has cov sub snippet num:1
------subCovinfo id:0 kf num:39 min:56 max:243 avg:127.421
weight with latter kf: 38
243  214  199  150  155  125  135  186  177  199  188  195  190  164  79  90  141  121  89  67  69  110  144  135  92  115  85  77  56  64  75  76  99  142  141  101  82  72  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:23.962][foregroundDBMerger][info][26205] [SAM] meanErr:0.07668486913 variance:0.06293664402 (SelectReference.cpp::454)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] meanErr:0.2049022694 variance:0.520717959 (SelectReference.cpp::515)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:1--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] Total KF:39 aveConnectKfNum:0 HectometerKfNum:13 (SelectReference.cpp::1206)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] trajectoryLen:284.4744263 firstLastKfDist:284.4625244 (SelectReference.cpp::1207)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.437313914 varianceKfToGpsDist:0.1981948167 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.08336693048 varianceDirectionOffset:0.07293853909 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:3 varianceKfToPrincipalDist:0.4069369733 (SelectReference.cpp::1212)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] totalMpNum:1572 avePointToKfDist:99.07506561 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6388311982 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.358142376 fewObsPer:0.0636132285% (SelectReference.cpp::1218)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] full:11 negative:0.9093685746 score:10.09063148 (SelectReference.cpp::1366)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:1 score:10.09063148 sectionID:1490154494078484482 refID:9248954193559945219 (SelectReference.cpp::263)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] need update:1 (RenewMap.cpp::121)
[2018-04-27 15:49:23.967][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484481 add Reference: 9248954193559945220 (ServerSection.cpp::73)
[2018-04-27 15:49:23.968][foregroundDBMerger][info][26205] [SAM] SecID:4481 update section (RenewMap.cpp::108)
[2018-04-27 15:49:23.968][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945220 sec:1490154494078484481 from vehicle ref:9248954193559945219 cutIdx:0 (RenewMap.cpp::305)
[2018-04-27 15:49:23.968][foregroundDBMerger][info][26205] [SAM] SecID:4481 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484482 add Reference: 9248954193559945221 (ServerSection.cpp::73)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] SecID:4482 update section (RenewMap.cpp::108)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945221 sec:1490154494078484482 from vehicle ref:9248954193559945219 cutIdx:1 (RenewMap.cpp::305)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] SecID:4482 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:23.972][foregroundDBMerger][debug][26205] [SAM] begin addOverlap between:SecRefID4481-5220----SecRefID4482-5221 (RenewMap.cpp::362)
[2018-04-27 15:49:23.973][foregroundDBMerger][debug][26205] [SAM] addOverlap:26 between:SecRefID4481-5220----SecRefID4482-5221 (RenewMap.cpp::369)
[2018-04-27 15:49:23.973][foregroundDBMerger][debug][26205] [SAM] ----------RenewMap addOverlap end---------- (RenewMap.cpp::375)
[2018-04-27 15:49:23.975][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:23.975][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:23.975][foregroundDBMerger][info][26205] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] get slam report:1 (GenerateVehicle.cpp::217)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] Camera Parameter:794.5803223,795.576416,466.002594,290.9239807 (GenerateVehicle.cpp::237)
[2018-04-27 15:49:24.000][foregroundDBMerger][info][26205] [SAM] SecRefID0000-5223, save slam or inc, ret.snippetType:0 (OccupancyManager.cpp::196)
[2018-04-27 15:49:24.019][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:24.019][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] ************ Statistics Information *************** (EvaluateVehicle.cpp::939)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Trajectory Distance: 464.1378479 (EvaluateVehicle.cpp::940)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Total KF: 85 (EvaluateVehicle.cpp::941)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Total Mp: 2931 Average Observers: 5 Max: 28 (EvaluateVehicle.cpp::942)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] FarPoint: 0 Per: 0% (EvaluateVehicle.cpp::943)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] OverReproject: 0 MaxReproject: 4.185479641 MeanReproject:0.7341172099 Percent: 0% (EvaluateVehicle.cpp::944)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Deviated KF: 0 MaxDist: 4.118600262m Per: 0% (EvaluateVehicle.cpp::945)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Deviated MeanDist: 1.20790267 stdErrDist: 0.6374417543 (EvaluateVehicle.cpp::946)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::947)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] ************ Statistics Reproject *************** (EvaluateVehicle.cpp::955)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Total Mp: 15398 (EvaluateVehicle.cpp::956)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Max Error: 4.185479641 (EvaluateVehicle.cpp::957)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Mean Error: 0.7341172099 (EvaluateVehicle.cpp::958)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;1 Error: 3200 (EvaluateVehicle.cpp::959)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;2 Error: 520 (EvaluateVehicle.cpp::960)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;5.99 Error: 0 (EvaluateVehicle.cpp::961)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;10 Error: 0 (EvaluateVehicle.cpp::962)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::963)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Track:1 Quality OK, snippetName:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00 (OccupancyManager.cpp::272)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] has large distance gap KF, toal num:4 max gap:12.99447918 large than:10 (RoadMatching.cpp::321)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] total length:460.1931384 total KF num:85 total check point num:48 (RoadMatching.cpp::337)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] there are 27grids being crossed by divisions in the global map (RoadMatching.cpp::1775)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4481 (gps index:12 gps:Lat:794.738,Lon:728.341,Alt:-188.784) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] different direction between gps(182 degree) and divisions: SecID:4481=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4481 (gps index:12 gps:Lat:794.738,Lon:728.341,Alt:-188.784) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4482 (gps index:60 gps:Lat:783.556,Lon:459.166,Alt:-192.071) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] different direction between gps(181 degree) and divisions: SecID:4482=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4482 (gps index:60 gps:Lat:783.556,Lon:459.166,Alt:-192.071) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] find pathGroups:2 find paths:2 (RoadMatching.cpp::727)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] pathGroupID:1, path num:1
path 1:4481(allSuccess,avgGap:6.67872,num:16)-&gt;4482(allSuccess,avgGap:3.8727,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] pathGroupID:2, path num:1
path 2:4481(allSuccess,avgGap:4.53326,num:13)-&gt;4482(matchFailed,avgGap:7.74379,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] allBestPath, path num:2
path 1:4481(allSuccess,avgGap:6.67872,num:16)-&gt;4482(allSuccess,avgGap:3.8727,num:11)-&gt;
path 2:4481(allSuccess,avgGap:4.53326,num:13)-&gt;4482(matchFailed,avgGap:7.74379,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] after filterCompleteOverlap, path num:1
path 1:4481(allSuccess,avgGap:6.67872,num:16)-&gt;4482(allSuccess,avgGap:3.8727,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] trackId_1_SecRefID0000-5223 MatchRet find path num:1
4481(status:allSuccess,q:1,nodeA:14,len:114.684,nodeB:36,len:237.111)-&gt;4482(status:allSuccess,q:1,nodeA:36,len:237.111,nodeB:58,len:354.495)-&gt;////
 (RoadMatching.cpp::1613)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:14,id:6305,firstLen:2000,bToRight:0 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:58,id:6307,firstLen:2000,bToRight:1 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] before process Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:14,trackDis:114.684,B:0000,kf:36,trackDis:237.111; ID:4482,quality:0,A:0000,kf:36,trackDis:237.111,B:0000,kf:58,trackDis:354.495;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] Final Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:14,trackDis:114.684,B:0000,kf:36,trackDis:237.111; ID:4482,quality:0,A:0000,kf:36,trackDis:237.111,B:0000,kf:58,trackDis:354.495;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] Track:1 Good Quality after cut:1/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] Track:1 Good Quality after cut:2/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:24.089][foregroundDBMerger][info][26205] [SAM] input cutVec size:2 sectionID:0 refID:9248954193559945223 (SelectReference.cpp::165)
[2018-04-27 15:49:24.091][foregroundDBMerger][info][26205] [SAM] curr cut piece start:4 end:52 cut kfs size:49 cut mps size:1910 (SelectReference.cpp::203)
[2018-04-27 15:49:24.091][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 2.358333349 (SelectReference.cpp::803)
[2018-04-27 15:49:24.091][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 1.3746351 (SelectReference.cpp::804)
[2018-04-27 15:49:24.132][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945223 has cov sub snippet num:1
------subCovinfo id:0 kf num:49 min:34 max:248 avg:138.979
weight with latter kf: 48
94  115  113  122  121  141  136  109  108  130  150  157  172  177  150  127  133  124  124  180  154  186  183  227  227  248  239  232  167  34  105  109  124  125  91  104  99  99  113  157  166  156  139  112  86  78  99  129  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.132][foregroundDBMerger][info][26205] [SAM] meanErr:0.1821098949 variance:0.1516005389 (SelectReference.cpp::454)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] meanErr:0.1753810209 variance:0.3468952216 (SelectReference.cpp::515)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:0--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] Total KF:49 aveConnectKfNum:0 HectometerKfNum:16 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] trajectoryLen:288.3460083 firstLastKfDist:288.2721558 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.38185823 varianceKfToGpsDist:0.6046081185 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1844460517 varianceDirectionOffset:0.1599684805 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:2.358333349 varianceKfToPrincipalDist:1.3746351 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] totalMpNum:1910 avePointToKfDist:89.14194489 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.7148922682 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.371727943 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.242998123 score:9.757001877 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:0 score:9.757001877 sectionID:1490154494078484481 refID:9248954193559945223 (SelectReference.cpp::263)
[2018-04-27 15:49:24.135][foregroundDBMerger][info][26205] [SAM] curr cut piece start:19 end:77 cut kfs size:59 cut mps size:2212 (SelectReference.cpp::203)
[2018-04-27 15:49:24.136][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 2.017094135 (SelectReference.cpp::803)
[2018-04-27 15:49:24.136][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.6615567803 (SelectReference.cpp::804)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945223 has cov sub snippet num:1
------subCovinfo id:0 kf num:59 min:34 max:248 avg:133.207
weight with latter kf: 58
127  133  124  124  180  154  186  183  227  227  248  239  232  167  34  105  109  124  125  91  104  99  99  113  157  166  156  139  112  86  78  99  129  93  127  135  87  68  111  151  136  151  108  81  107  124  137  168  163  107  148  146  142  133  138  91  89  109  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] meanErr:0.09984889821 variance:0.1134022421 (SelectReference.cpp::454)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] meanErr:0.1960372602 variance:0.3409200295 (SelectReference.cpp::515)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:1--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] Total KF:59 aveConnectKfNum:0 HectometerKfNum:20 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] trajectoryLen:288.3238525 firstLastKfDist:288.2740784 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.391327739 varianceKfToGpsDist:0.4541866183 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1158988476 varianceDirectionOffset:0.1433956921 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:2.017094135 varianceKfToPrincipalDist:0.6615567803 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] totalMpNum:2212 avePointToKfDist:92.88724518 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6845046282 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.537522793 fewObsPer:0.09041591734% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.049774647 score:9.95022583 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:1 score:9.95022583 sectionID:1490154494078484482 refID:9248954193559945223 (SelectReference.cpp::263)
[2018-04-27 15:49:24.185][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:24.185][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:24.185][foregroundDBMerger][info][26205] [SAM] need update:1 (RenewMap.cpp::121)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484481 add Reference: 9248954193559945224 (ServerSection.cpp::73)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] SecID:4481 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945224 sec:1490154494078484481 from vehicle ref:9248954193559945223 cutIdx:0 (RenewMap.cpp::305)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] SecID:4481 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484482 add Reference: 9248954193559945225 (ServerSection.cpp::73)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] SecID:4482 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945225 sec:1490154494078484482 from vehicle ref:9248954193559945223 cutIdx:1 (RenewMap.cpp::305)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] SecID:4482 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.197][foregroundDBMerger][debug][26205] [SAM] begin addOverlap between:SecRefID4481-5224----SecRefID4482-5225 (RenewMap.cpp::362)
[2018-04-27 15:49:24.199][foregroundDBMerger][debug][26205] [SAM] addOverlap:33 between:SecRefID4481-5224----SecRefID4482-5225 (RenewMap.cpp::369)
[2018-04-27 15:49:24.199][foregroundDBMerger][debug][26205] [SAM] ----------RenewMap addOverlap end---------- (RenewMap.cpp::375)
[2018-04-27 15:49:24.201][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:24.201][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:24.202][foregroundDBMerger][info][26205] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] get slam report:1 (GenerateVehicle.cpp::217)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] Camera Parameter:794.5803223,795.576416,466.002594,290.9239807 (GenerateVehicle.cpp::237)
[2018-04-27 15:49:24.221][foregroundDBMerger][info][26205] [SAM] SecRefID0000-5227, save slam or inc, ret.snippetType:0 (OccupancyManager.cpp::196)
[2018-04-27 15:49:24.235][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:24.235][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ************ Statistics Information *************** (EvaluateVehicle.cpp::939)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Trajectory Distance: 454.7890015 (EvaluateVehicle.cpp::940)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Total KF: 80 (EvaluateVehicle.cpp::941)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Total Mp: 2346 Average Observers: 4 Max: 23 (EvaluateVehicle.cpp::942)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] FarPoint: 0 Per: 0% (EvaluateVehicle.cpp::943)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] OverReproject: 0 MaxReproject: 4.201058388 MeanReproject:0.7128263712 Percent: 0% (EvaluateVehicle.cpp::944)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Deviated KF: 0 MaxDist: 8.969468659m Per: 0% (EvaluateVehicle.cpp::945)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Deviated MeanDist: 1.131308436 stdErrDist: 1.45271492 (EvaluateVehicle.cpp::946)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::947)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ************ Statistics Reproject *************** (EvaluateVehicle.cpp::955)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Total Mp: 11473 (EvaluateVehicle.cpp::956)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Max Error: 4.201058388 (EvaluateVehicle.cpp::957)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Mean Error: 0.7128263712 (EvaluateVehicle.cpp::958)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;1 Error: 2248 (EvaluateVehicle.cpp::959)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;2 Error: 390 (EvaluateVehicle.cpp::960)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;5.99 Error: 0 (EvaluateVehicle.cpp::961)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;10 Error: 0 (EvaluateVehicle.cpp::962)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::963)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Track:2 Quality OK, snippetName:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00 (OccupancyManager.cpp::272)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] has large distance gap KF, toal num:8 max gap:12.46717739 large than:10 (RoadMatching.cpp::321)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] total length:446.5102882 total KF num:80 total check point num:46 (RoadMatching.cpp::337)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] there are 27grids being crossed by divisions in the global map (RoadMatching.cpp::1775)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4481 (gps index:16 gps:Lat:794.558,Lon:724.069,Alt:-190.203) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] different direction between gps(182 degree) and divisions: SecID:4481=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4481 (gps index:16 gps:Lat:794.558,Lon:724.069,Alt:-190.203) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4482 (gps index:61 gps:Lat:784.536,Lon:461.945,Alt:-192.073) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] different direction between gps(181 degree) and divisions: SecID:4482=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4482 (gps index:61 gps:Lat:784.536,Lon:461.945,Alt:-192.073) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] find pathGroups:2 find paths:2 (RoadMatching.cpp::727)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] pathGroupID:1, path num:1
path 1:4481(allSuccess,avgGap:6.97878,num:16)-&gt;4482(allSuccess,avgGap:4.36737,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] pathGroupID:2, path num:1
path 2:4481(allSuccess,avgGap:4.73753,num:12)-&gt;4482(matchFailed,avgGap:8.35685,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] allBestPath, path num:2
path 1:4481(allSuccess,avgGap:6.97878,num:16)-&gt;4482(allSuccess,avgGap:4.36737,num:11)-&gt;
path 2:4481(allSuccess,avgGap:4.73753,num:12)-&gt;4482(matchFailed,avgGap:8.35685,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] after filterCompleteOverlap, path num:1
path 1:4481(allSuccess,avgGap:6.97878,num:16)-&gt;4482(allSuccess,avgGap:4.36737,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] trackId_2_SecRefID0000-5227 MatchRet find path num:1
4481(status:allSuccess,q:1,nodeA:19,len:122.617,nodeB:41,len:239.854)-&gt;4482(status:allSuccess,q:1,nodeA:41,len:239.854,nodeB:60,len:350.519)-&gt;////
 (RoadMatching.cpp::1613)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:19,id:6305,firstLen:2000,bToRight:0 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:60,id:6307,firstLen:2000,bToRight:1 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] before process Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.617,B:0000,kf:41,trackDis:239.854; ID:4482,quality:0,A:0000,kf:41,trackDis:239.854,B:0000,kf:60,trackDis:350.519;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.284][foregroundDBMerger][debug][26205] [SAM] Final Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.617,B:0000,kf:41,trackDis:239.854; ID:4482,quality:0,A:0000,kf:41,trackDis:239.854,B:0000,kf:60,trackDis:350.519;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.284][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] Track:2 Good Quality after cut:1/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] Track:2 Good Quality after cut:2/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] input cutVec size:2 sectionID:0 refID:9248954193559945227 (SelectReference.cpp::165)
[2018-04-27 15:49:24.286][foregroundDBMerger][info][26205] [SAM] curr cut piece start:7 end:55 cut kfs size:49 cut mps size:1672 (SelectReference.cpp::203)
[2018-04-27 15:49:24.287][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 5 (SelectReference.cpp::803)
[2018-04-27 15:49:24.287][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 1.210001826 (SelectReference.cpp::804)
[2018-04-27 15:49:24.320][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945227 has cov sub snippet num:1
------subCovinfo id:0 kf num:49 min:55 max:195 avg:111.354
weight with latter kf: 48
102  81  102  126  98  118  101  117  92  81  90  94  99  103  114  136  161  154  158  152  118  158  147  96  137  135  131  157  180  181  181  195  149  68  63  76  77  67  73  79  87  55  96  84  68  72  56  80  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.320][foregroundDBMerger][info][26205] [SAM] meanErr:0.1704029026 variance:0.202044461 (SelectReference.cpp::454)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] meanErr:1.150459288 variance:7.144417044 (SelectReference.cpp::515)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:0--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] Total KF:49 aveConnectKfNum:0 HectometerKfNum:17 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] trajectoryLen:286.005127 firstLastKfDist:285.9473877 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:0.8958986998 varianceKfToGpsDist:0.2339208573 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1654871851 varianceDirectionOffset:0.1690800637 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:5 varianceKfToPrincipalDist:1.210001826 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] totalMpNum:1672 avePointToKfDist:89.74750519 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6938918233 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.110047817 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] EulerianErr:1 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.131403565 score:9.868596077 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:0 score:9.868596077 sectionID:1490154494078484481 refID:9248954193559945227 (SelectReference.cpp::263)
[2018-04-27 15:49:24.322][foregroundDBMerger][info][26205] [SAM] curr cut piece start:23 end:71 cut kfs size:49 cut mps size:1546 (SelectReference.cpp::203)
[2018-04-27 15:49:24.323][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 4.051281929 (SelectReference.cpp::803)
[2018-04-27 15:49:24.323][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.8363120556 (SelectReference.cpp::804)
[2018-04-27 15:49:24.353][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945227 has cov sub snippet num:1
------subCovinfo id:0 kf num:49 min:44 max:195 avg:100.938
weight with latter kf: 48
161  154  158  152  118  158  147  96  137  135  131  157  180  181  181  195  149  68  63  76  77  67  73  79  87  55  96  84  68  72  56  80  107  73  89  59  76  48  44  46  55  83  92  94  78  77  78  55  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] meanErr:0.1045398799 variance:0.09079015084 (SelectReference.cpp::454)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] meanErr:1.234120325 variance:7.152778765 (SelectReference.cpp::515)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:1--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] Total KF:49 aveConnectKfNum:0 HectometerKfNum:17 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] trajectoryLen:281.4691162 firstLastKfDist:281.4439087 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:0.6137382984 varianceKfToGpsDist:0.2712818086 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1176400781 varianceDirectionOffset:0.1075752378 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:4.051281929 varianceKfToPrincipalDist:0.8363120556 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] totalMpNum:1546 avePointToKfDist:95.95278168 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6706197262 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:4.997412682 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] EulerianErr:1 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.027868748 score:9.972131729 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:1 score:9.972131729 sectionID:1490154494078484482 refID:9248954193559945227 (SelectReference.cpp::263)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] need update:1 (RenewMap.cpp::121)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484481 add Reference: 9248954193559945228 (ServerSection.cpp::73)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] SecID:4481 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945228 sec:1490154494078484481 from vehicle ref:9248954193559945227 cutIdx:0 (RenewMap.cpp::305)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] SecID:4481 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484482 add Reference: 9248954193559945229 (ServerSection.cpp::73)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] SecID:4482 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945229 sec:1490154494078484482 from vehicle ref:9248954193559945227 cutIdx:1 (RenewMap.cpp::305)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] SecID:4482 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.363][foregroundDBMerger][debug][26205] [SAM] begin addOverlap between:SecRefID4481-5228----SecRefID4482-5229 (RenewMap.cpp::362)
[2018-04-27 15:49:24.364][foregroundDBMerger][debug][26205] [SAM] addOverlap:32 between:SecRefID4481-5228----SecRefID4482-5229 (RenewMap.cpp::369)
[2018-04-27 15:49:24.364][foregroundDBMerger][debug][26205] [SAM] ----------RenewMap addOverlap end---------- (RenewMap.cpp::375)
[2018-04-27 15:49:24.366][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:24.366][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] ==========END TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:300)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] start to write backend DB (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:302)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] manual mode(true) : beginTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:308)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.374][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.374][foregroundDBMerger][debug][26205] [SYS] BackendData TransactionID: 2 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:49:24.377][foregroundDBMerger][info][26205] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:49:24.470][foregroundDBMerger][debug][26205] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:49:24.470][foregroundDBMerger][debug][26205] [SAM] Div:1490154494078484481  save overlaps:88 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:24.558][foregroundDBMerger][debug][26205] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:49:24.559][foregroundDBMerger][debug][26205] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:24.561][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:24.561][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945220 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945220 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945224 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945224 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945228 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945228 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945221 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945221 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945225 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945225 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945229 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945229 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945220 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968129 --&gt; 1490154496225968129 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945224 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968130 --&gt; 1490154496225968130 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945228 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968131 --&gt; 1490154496225968131 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945221 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968132 --&gt; 1490154496225968132 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945225 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968133 --&gt; 1490154496225968133 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945229 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968134 --&gt; 1490154496225968134 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] geoDivision count: 88 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945220 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945224 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945228 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945221 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945225 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945229 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] updateRefVersion_ equals to 0, no need to update reference version. (BackendDataTransfer.cpp:updateReferencesVersion:1582)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] Updated division :1490154494078484481, optmize status:2 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] Updated division :1490154494078484482, optmize status:2 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968130 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968131 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968133 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968134 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.565][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.586][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.587][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.596][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.637][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.660][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:49:24.661][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:49:24.661][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] Division :1490154494078484481, optmize status:2 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] Division :1490154494078484482, optmize status:2 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] updateRefVersion_ equals to 0, no need to update reference info. (BackendDTAdapter.cpp:generateUpdatedRefsInfo:225)
[2018-04-27 15:49:24.661][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:49:24.663][foregroundDBMerger][info][26205] [SAM] str_id: toCacheDB  end: 56964663  start: 56964377  total:286(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:24.663][foregroundDBMerger][info][26205] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:323)
[2018-04-27 15:49:24.663][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.718][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.719][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [COM] {
    "SnippetResultList": [
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ],
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "2",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226305",
            "toNodeID": "1490154495152226306",
            "length": "116.854637"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "2",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226306",
            "toNodeID": "1490154495152226307",
            "length": "115.893883"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [SYS] end to write Backend DB! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:350)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [SYS] end server run with code: 0 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:352)
[2018-04-27 15:49:24.726][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:24.726][foregroundDBMerger][info][26205] [SYS] foregroundDBMerger return ok, value:0, fwRet: 0 (foregroundDBMerger.cpp:main:94)
[2018-04-27 15:49:24.726][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: main (foregroundDBMerger.cpp::60)</msg>
<status status="PASS" endtime="20180427 15:49:24.153" starttime="20180427 15:49:24.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.154" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:24.154" starttime="20180427 15:49:24.154"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:24.155" level="INFO">${rStdout} = [2018-04-27 15:49:23.668][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [SYS] Log level: 0 (foreg...</msg>
<status status="PASS" endtime="20180427 15:49:24.155" starttime="20180427 15:49:24.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:24.155" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.155" starttime="20180427 15:49:24.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.156" level="INFO">[2018-04-27 15:49:23.668][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [SYS] Log level: 0 (foregroundDBMergerExecute.cpp:getForegroundDBMergerInput:294)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] {
    "DivisionList": "",
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00"
        }
    ],
    "SegmentList": [
        "346953630"
    ],
    "DBStamp": "1524731106507",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524731106507-2.json  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBMerger   (otherFuns.h::410)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:49:23.669][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:23.669][foregroundDBMerger][info][26205] [SYS] BackendDB Version: 104 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:193)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:49:23.670][foregroundDBMerger][info][26205] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:49:23.671][foregroundDBMerger][info][26205] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2/server_2018-04-27_15-49-23_26205 (DebugInfoPath.cpp::58)
[2018-04-27 15:49:23.672][foregroundDBMerger][info][26205] [SYS] server start success. (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:221)
[2018-04-27 15:49:23.675][foregroundDBMerger][debug][26205] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:49:23.676][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.684][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.684][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.690][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.690][foregroundDBMerger][info][26205] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:49:23.690][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:242)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:49:23.701][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:49:23.711][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:23.711][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.724][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:23.725][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.738][foregroundDBMerger][warning][26205] [SYS] Response data is empty. (RestDBCommandsBackend.cpp:getResult:632)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] &lt;Request&gt; -- RestDB_6_GetBEDataCommand_Request: 
Path: /foregrounddb/references/data?version_id=1524731106507
Payload: 
{"division_list":"1490154494078484481"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] &lt;Response&gt; -- RestDB_6_GetBEDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:49:23.738][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:23.751][foregroundDBMerger][warning][26205] [SYS]  0X304FF01C, check-warning: vecReferences list is empty! division dbID:1490154494078484481 (DivisionDetailCheck.cpp:CheckReferences:152)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:49:23.751][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:23.751][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:23.764][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.776][foregroundDBMerger][warning][26205] [SYS] Response data is empty. (RestDBCommandsBackend.cpp:getResult:632)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] &lt;Request&gt; -- RestDB_9_GetBEDataCommand_Request: 
Path: /foregrounddb/references/data?version_id=1524731106507
Payload: 
{"division_list":"1490154494078484482"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] &lt;Response&gt; -- RestDB_9_GetBEDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:49:23.776][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:23.787][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:23.788][foregroundDBMerger][warning][26205] [SYS]  0X304FF01C, check-warning: vecReferences list is empty! division dbID:1490154494078484482 (DivisionDetailCheck.cpp:CheckReferences:152)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:49:23.788][foregroundDBMerger][debug][26205] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SAM] str_id: fromCacheDB  end: 56963788  start: 56963701  total:87(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:23.788][foregroundDBMerger][info][26205] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] get slam report:1 (GenerateVehicle.cpp::217)
[2018-04-27 15:49:23.791][foregroundDBMerger][info][26205] [SAM] Camera Parameter:794.5803223,795.576416,466.002594,290.9239807 (GenerateVehicle.cpp::237)
[2018-04-27 15:49:23.811][foregroundDBMerger][info][26205] [SAM] SecRefID0000-5219, save slam or inc, ret.snippetType:0 (OccupancyManager.cpp::196)
[2018-04-27 15:49:23.828][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:23.828][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.829][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ************ Statistics Information *************** (EvaluateVehicle.cpp::939)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Trajectory Distance: 460.3269958 (EvaluateVehicle.cpp::940)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Total KF: 72 (EvaluateVehicle.cpp::941)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Total Mp: 2521 Average Observers: 5 Max: 23 (EvaluateVehicle.cpp::942)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] FarPoint: 0 Per: 0% (EvaluateVehicle.cpp::943)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] OverReproject: 0 MaxReproject: 4.047096729 MeanReproject:0.6590081453 Percent: 0% (EvaluateVehicle.cpp::944)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Deviated KF: 0 MaxDist: 14.53790804m Per: 0% (EvaluateVehicle.cpp::945)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Deviated MeanDist: 1.874508262 stdErrDist: 2.751646042 (EvaluateVehicle.cpp::946)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::947)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ************ Statistics Reproject *************** (EvaluateVehicle.cpp::955)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Total Mp: 13258 (EvaluateVehicle.cpp::956)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Max Error: 4.047096729 (EvaluateVehicle.cpp::957)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Mean Error: 0.6590081453 (EvaluateVehicle.cpp::958)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;1 Error: 2195 (EvaluateVehicle.cpp::959)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;2 Error: 363 (EvaluateVehicle.cpp::960)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;5.99 Error: 0 (EvaluateVehicle.cpp::961)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] &gt;10 Error: 0 (EvaluateVehicle.cpp::962)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::963)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] Track:0 Quality OK, snippetName:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00 (OccupancyManager.cpp::272)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:23.883][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] GPS Skeleton: skeleton main curve divisions/all divisions is :2/2 (CutVehicle.cpp::768)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] has large distance gap KF, toal num:15 max gap:14.34633255 large than:10 (RoadMatching.cpp::321)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] total length:445.9039706 total KF num:72 total check point num:46 (RoadMatching.cpp::337)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] there are 27grids being crossed by divisions in the global map (RoadMatching.cpp::1775)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4481 (gps index:15 gps:Lat:794.959,Lon:730.958,Alt:-188.42) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] different direction between gps(182 degree) and divisions: SecID:4481=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4481 (gps index:15 gps:Lat:794.959,Lon:730.958,Alt:-188.42) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4482 (gps index:53 gps:Lat:784.803,Lon:456.762,Alt:-190.998) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.885][foregroundDBMerger][debug][26205] [SAM] different direction between gps(181 degree) and divisions: SecID:4482=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4482 (gps index:53 gps:Lat:784.803,Lon:456.762,Alt:-190.998) (RoadMatching.cpp::2053)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] find pathGroups:2 find paths:2 (RoadMatching.cpp::727)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] pathGroupID:1, path num:1
path 1:4481(allSuccess,avgGap:7.56787,num:16)-&gt;4482(allSuccess,avgGap:4.77371,num:10)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] pathGroupID:2, path num:1
path 2:4481(allSuccess,avgGap:5.1268,num:12)-&gt;4482(matchFailed,avgGap:9.87993,num:15)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] allBestPath, path num:2
path 1:4481(allSuccess,avgGap:7.56787,num:16)-&gt;4482(allSuccess,avgGap:4.77371,num:10)-&gt;
path 2:4481(allSuccess,avgGap:5.1268,num:12)-&gt;4482(matchFailed,avgGap:9.87993,num:15)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] after filterCompleteOverlap, path num:1
path 1:4481(allSuccess,avgGap:7.56787,num:16)-&gt;4482(allSuccess,avgGap:4.77371,num:10)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] trackId_0_SecRefID0000-5219 MatchRet find path num:1
4481(status:allSuccess,q:1,nodeA:19,len:122.799,nodeB:38,len:240.696)-&gt;4482(status:allSuccess,q:1,nodeA:38,len:240.696,nodeB:52,len:353.226)-&gt;////
 (RoadMatching.cpp::1613)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:19,id:6305,firstLen:2000,bToRight:0 (CutVehicle.cpp::556)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:52,id:6307,firstLen:2000,bToRight:1 (CutVehicle.cpp::556)
[2018-04-27 15:49:23.886][foregroundDBMerger][debug][26205] [SAM] before process Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.799,B:0000,kf:38,trackDis:240.696; ID:4482,quality:0,A:0000,kf:38,trackDis:240.696,B:0000,kf:52,trackDis:353.226;  (CutVehicle.cpp::748)
[2018-04-27 15:49:23.887][foregroundDBMerger][debug][26205] [SAM] Final Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.799,B:0000,kf:38,trackDis:240.696; ID:4482,quality:0,A:0000,kf:38,trackDis:240.696,B:0000,kf:52,trackDis:353.226;  (CutVehicle.cpp::748)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] Track:0 Good Quality after cut:1/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] Track:0 Good Quality after cut:2/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:23.887][foregroundDBMerger][info][26205] [SAM] input cutVec size:2 sectionID:0 refID:9248954193559945219 (SelectReference.cpp::165)
[2018-04-27 15:49:23.889][foregroundDBMerger][info][26205] [SAM] curr cut piece start:8 end:49 cut kfs size:42 cut mps size:1715 (SelectReference.cpp::203)
[2018-04-27 15:49:23.890][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 3.416666746 (SelectReference.cpp::803)
[2018-04-27 15:49:23.890][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.8127884865 (SelectReference.cpp::804)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945219 has cov sub snippet num:1
------subCovinfo id:0 kf num:42 min:67 max:243 avg:151.073
weight with latter kf: 41
138  150  131  140  154  142  185  188  152  148  149  184  192  165  204  243  214  199  150  155  125  135  186  177  199  188  195  190  164  79  90  141  121  89  67  69  110  144  135  92  115  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] meanErr:0.1392614547 variance:0.1138640305 (SelectReference.cpp::454)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] meanErr:0.3435207685 variance:1.10425585 (SelectReference.cpp::515)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:0--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] Total KF:42 aveConnectKfNum:0 HectometerKfNum:14 (SelectReference.cpp::1206)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] trajectoryLen:283.8366394 firstLastKfDist:283.8040466 (SelectReference.cpp::1207)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.017654181 varianceKfToGpsDist:0.4760593176 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1229711249 varianceDirectionOffset:0.09118019789 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:3.416666746 varianceKfToPrincipalDist:0.8127884865 (SelectReference.cpp::1212)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] totalMpNum:1715 avePointToKfDist:95.66943359 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.612934947 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.468221664 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:23.926][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:23.927][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.127020478 score:9.872979164 (SelectReference.cpp::1366)
[2018-04-27 15:49:23.927][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:0 score:9.872979164 sectionID:1490154494078484481 refID:9248954193559945219 (SelectReference.cpp::263)
[2018-04-27 15:49:23.928][foregroundDBMerger][info][26205] [SAM] curr cut piece start:23 end:61 cut kfs size:39 cut mps size:1572 (SelectReference.cpp::203)
[2018-04-27 15:49:23.929][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 3 (SelectReference.cpp::803)
[2018-04-27 15:49:23.929][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.4069369733 (SelectReference.cpp::804)
[2018-04-27 15:49:23.962][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945219 has cov sub snippet num:1
------subCovinfo id:0 kf num:39 min:56 max:243 avg:127.421
weight with latter kf: 38
243  214  199  150  155  125  135  186  177  199  188  195  190  164  79  90  141  121  89  67  69  110  144  135  92  115  85  77  56  64  75  76  99  142  141  101  82  72  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:23.962][foregroundDBMerger][info][26205] [SAM] meanErr:0.07668486913 variance:0.06293664402 (SelectReference.cpp::454)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] meanErr:0.2049022694 variance:0.520717959 (SelectReference.cpp::515)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:1--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] Total KF:39 aveConnectKfNum:0 HectometerKfNum:13 (SelectReference.cpp::1206)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] trajectoryLen:284.4744263 firstLastKfDist:284.4625244 (SelectReference.cpp::1207)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.437313914 varianceKfToGpsDist:0.1981948167 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.08336693048 varianceDirectionOffset:0.07293853909 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:3 varianceKfToPrincipalDist:0.4069369733 (SelectReference.cpp::1212)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] totalMpNum:1572 avePointToKfDist:99.07506561 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6388311982 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.358142376 fewObsPer:0.0636132285% (SelectReference.cpp::1218)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] full:11 negative:0.9093685746 score:10.09063148 (SelectReference.cpp::1366)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:1 score:10.09063148 sectionID:1490154494078484482 refID:9248954193559945219 (SelectReference.cpp::263)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:23.963][foregroundDBMerger][info][26205] [SAM] need update:1 (RenewMap.cpp::121)
[2018-04-27 15:49:23.967][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484481 add Reference: 9248954193559945220 (ServerSection.cpp::73)
[2018-04-27 15:49:23.968][foregroundDBMerger][info][26205] [SAM] SecID:4481 update section (RenewMap.cpp::108)
[2018-04-27 15:49:23.968][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945220 sec:1490154494078484481 from vehicle ref:9248954193559945219 cutIdx:0 (RenewMap.cpp::305)
[2018-04-27 15:49:23.968][foregroundDBMerger][info][26205] [SAM] SecID:4481 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484482 add Reference: 9248954193559945221 (ServerSection.cpp::73)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] SecID:4482 update section (RenewMap.cpp::108)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945221 sec:1490154494078484482 from vehicle ref:9248954193559945219 cutIdx:1 (RenewMap.cpp::305)
[2018-04-27 15:49:23.972][foregroundDBMerger][info][26205] [SAM] SecID:4482 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:23.972][foregroundDBMerger][debug][26205] [SAM] begin addOverlap between:SecRefID4481-5220----SecRefID4482-5221 (RenewMap.cpp::362)
[2018-04-27 15:49:23.973][foregroundDBMerger][debug][26205] [SAM] addOverlap:26 between:SecRefID4481-5220----SecRefID4482-5221 (RenewMap.cpp::369)
[2018-04-27 15:49:23.973][foregroundDBMerger][debug][26205] [SAM] ----------RenewMap addOverlap end---------- (RenewMap.cpp::375)
[2018-04-27 15:49:23.975][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:23.975][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:23.975][foregroundDBMerger][info][26205] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] get slam report:1 (GenerateVehicle.cpp::217)
[2018-04-27 15:49:23.978][foregroundDBMerger][info][26205] [SAM] Camera Parameter:794.5803223,795.576416,466.002594,290.9239807 (GenerateVehicle.cpp::237)
[2018-04-27 15:49:24.000][foregroundDBMerger][info][26205] [SAM] SecRefID0000-5223, save slam or inc, ret.snippetType:0 (OccupancyManager.cpp::196)
[2018-04-27 15:49:24.019][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:24.019][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] ************ Statistics Information *************** (EvaluateVehicle.cpp::939)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Trajectory Distance: 464.1378479 (EvaluateVehicle.cpp::940)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Total KF: 85 (EvaluateVehicle.cpp::941)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Total Mp: 2931 Average Observers: 5 Max: 28 (EvaluateVehicle.cpp::942)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] FarPoint: 0 Per: 0% (EvaluateVehicle.cpp::943)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] OverReproject: 0 MaxReproject: 4.185479641 MeanReproject:0.7341172099 Percent: 0% (EvaluateVehicle.cpp::944)
[2018-04-27 15:49:24.085][foregroundDBMerger][info][26205] [SAM] Deviated KF: 0 MaxDist: 4.118600262m Per: 0% (EvaluateVehicle.cpp::945)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Deviated MeanDist: 1.20790267 stdErrDist: 0.6374417543 (EvaluateVehicle.cpp::946)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::947)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] ************ Statistics Reproject *************** (EvaluateVehicle.cpp::955)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Total Mp: 15398 (EvaluateVehicle.cpp::956)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Max Error: 4.185479641 (EvaluateVehicle.cpp::957)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Mean Error: 0.7341172099 (EvaluateVehicle.cpp::958)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;1 Error: 3200 (EvaluateVehicle.cpp::959)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;2 Error: 520 (EvaluateVehicle.cpp::960)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;5.99 Error: 0 (EvaluateVehicle.cpp::961)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] &gt;10 Error: 0 (EvaluateVehicle.cpp::962)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::963)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] Track:1 Quality OK, snippetName:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00 (OccupancyManager.cpp::272)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:24.086][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] has large distance gap KF, toal num:4 max gap:12.99447918 large than:10 (RoadMatching.cpp::321)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] total length:460.1931384 total KF num:85 total check point num:48 (RoadMatching.cpp::337)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] there are 27grids being crossed by divisions in the global map (RoadMatching.cpp::1775)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4481 (gps index:12 gps:Lat:794.738,Lon:728.341,Alt:-188.784) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] different direction between gps(182 degree) and divisions: SecID:4481=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4481 (gps index:12 gps:Lat:794.738,Lon:728.341,Alt:-188.784) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4482 (gps index:60 gps:Lat:783.556,Lon:459.166,Alt:-192.071) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] different direction between gps(181 degree) and divisions: SecID:4482=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.086][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4482 (gps index:60 gps:Lat:783.556,Lon:459.166,Alt:-192.071) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] find pathGroups:2 find paths:2 (RoadMatching.cpp::727)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] pathGroupID:1, path num:1
path 1:4481(allSuccess,avgGap:6.67872,num:16)-&gt;4482(allSuccess,avgGap:3.8727,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] pathGroupID:2, path num:1
path 2:4481(allSuccess,avgGap:4.53326,num:13)-&gt;4482(matchFailed,avgGap:7.74379,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] allBestPath, path num:2
path 1:4481(allSuccess,avgGap:6.67872,num:16)-&gt;4482(allSuccess,avgGap:3.8727,num:11)-&gt;
path 2:4481(allSuccess,avgGap:4.53326,num:13)-&gt;4482(matchFailed,avgGap:7.74379,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] after filterCompleteOverlap, path num:1
path 1:4481(allSuccess,avgGap:6.67872,num:16)-&gt;4482(allSuccess,avgGap:3.8727,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] trackId_1_SecRefID0000-5223 MatchRet find path num:1
4481(status:allSuccess,q:1,nodeA:14,len:114.684,nodeB:36,len:237.111)-&gt;4482(status:allSuccess,q:1,nodeA:36,len:237.111,nodeB:58,len:354.495)-&gt;////
 (RoadMatching.cpp::1613)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:14,id:6305,firstLen:2000,bToRight:0 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:58,id:6307,firstLen:2000,bToRight:1 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] before process Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:14,trackDis:114.684,B:0000,kf:36,trackDis:237.111; ID:4482,quality:0,A:0000,kf:36,trackDis:237.111,B:0000,kf:58,trackDis:354.495;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.087][foregroundDBMerger][debug][26205] [SAM] Final Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:14,trackDis:114.684,B:0000,kf:36,trackDis:237.111; ID:4482,quality:0,A:0000,kf:36,trackDis:237.111,B:0000,kf:58,trackDis:354.495;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] Track:1 Good Quality after cut:1/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] Track:1 Good Quality after cut:2/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:24.088][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:24.089][foregroundDBMerger][info][26205] [SAM] input cutVec size:2 sectionID:0 refID:9248954193559945223 (SelectReference.cpp::165)
[2018-04-27 15:49:24.091][foregroundDBMerger][info][26205] [SAM] curr cut piece start:4 end:52 cut kfs size:49 cut mps size:1910 (SelectReference.cpp::203)
[2018-04-27 15:49:24.091][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 2.358333349 (SelectReference.cpp::803)
[2018-04-27 15:49:24.091][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 1.3746351 (SelectReference.cpp::804)
[2018-04-27 15:49:24.132][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945223 has cov sub snippet num:1
------subCovinfo id:0 kf num:49 min:34 max:248 avg:138.979
weight with latter kf: 48
94  115  113  122  121  141  136  109  108  130  150  157  172  177  150  127  133  124  124  180  154  186  183  227  227  248  239  232  167  34  105  109  124  125  91  104  99  99  113  157  166  156  139  112  86  78  99  129  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.132][foregroundDBMerger][info][26205] [SAM] meanErr:0.1821098949 variance:0.1516005389 (SelectReference.cpp::454)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] meanErr:0.1753810209 variance:0.3468952216 (SelectReference.cpp::515)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:0--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] Total KF:49 aveConnectKfNum:0 HectometerKfNum:16 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] trajectoryLen:288.3460083 firstLastKfDist:288.2721558 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.38185823 varianceKfToGpsDist:0.6046081185 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1844460517 varianceDirectionOffset:0.1599684805 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:2.358333349 varianceKfToPrincipalDist:1.3746351 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] totalMpNum:1910 avePointToKfDist:89.14194489 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.7148922682 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.371727943 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.242998123 score:9.757001877 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.133][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:0 score:9.757001877 sectionID:1490154494078484481 refID:9248954193559945223 (SelectReference.cpp::263)
[2018-04-27 15:49:24.135][foregroundDBMerger][info][26205] [SAM] curr cut piece start:19 end:77 cut kfs size:59 cut mps size:2212 (SelectReference.cpp::203)
[2018-04-27 15:49:24.136][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 2.017094135 (SelectReference.cpp::803)
[2018-04-27 15:49:24.136][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.6615567803 (SelectReference.cpp::804)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945223 has cov sub snippet num:1
------subCovinfo id:0 kf num:59 min:34 max:248 avg:133.207
weight with latter kf: 58
127  133  124  124  180  154  186  183  227  227  248  239  232  167  34  105  109  124  125  91  104  99  99  113  157  166  156  139  112  86  78  99  129  93  127  135  87  68  111  151  136  151  108  81  107  124  137  168  163  107  148  146  142  133  138  91  89  109  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] meanErr:0.09984889821 variance:0.1134022421 (SelectReference.cpp::454)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] meanErr:0.1960372602 variance:0.3409200295 (SelectReference.cpp::515)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:1--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] Total KF:59 aveConnectKfNum:0 HectometerKfNum:20 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] trajectoryLen:288.3238525 firstLastKfDist:288.2740784 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:1.391327739 varianceKfToGpsDist:0.4541866183 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1158988476 varianceDirectionOffset:0.1433956921 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:2.017094135 varianceKfToPrincipalDist:0.6615567803 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] totalMpNum:2212 avePointToKfDist:92.88724518 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6845046282 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.537522793 fewObsPer:0.09041591734% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] EulerianErr:0 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.049774647 score:9.95022583 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.184][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:1 score:9.95022583 sectionID:1490154494078484482 refID:9248954193559945223 (SelectReference.cpp::263)
[2018-04-27 15:49:24.185][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:24.185][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:24.185][foregroundDBMerger][info][26205] [SAM] need update:1 (RenewMap.cpp::121)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484481 add Reference: 9248954193559945224 (ServerSection.cpp::73)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] SecID:4481 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945224 sec:1490154494078484481 from vehicle ref:9248954193559945223 cutIdx:0 (RenewMap.cpp::305)
[2018-04-27 15:49:24.190][foregroundDBMerger][info][26205] [SAM] SecID:4481 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484482 add Reference: 9248954193559945225 (ServerSection.cpp::73)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] SecID:4482 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945225 sec:1490154494078484482 from vehicle ref:9248954193559945223 cutIdx:1 (RenewMap.cpp::305)
[2018-04-27 15:49:24.197][foregroundDBMerger][info][26205] [SAM] SecID:4482 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.197][foregroundDBMerger][debug][26205] [SAM] begin addOverlap between:SecRefID4481-5224----SecRefID4482-5225 (RenewMap.cpp::362)
[2018-04-27 15:49:24.199][foregroundDBMerger][debug][26205] [SAM] addOverlap:33 between:SecRefID4481-5224----SecRefID4482-5225 (RenewMap.cpp::369)
[2018-04-27 15:49:24.199][foregroundDBMerger][debug][26205] [SAM] ----------RenewMap addOverlap end---------- (RenewMap.cpp::375)
[2018-04-27 15:49:24.201][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:24.201][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:24.202][foregroundDBMerger][info][26205] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] get slam report:1 (GenerateVehicle.cpp::217)
[2018-04-27 15:49:24.204][foregroundDBMerger][info][26205] [SAM] Camera Parameter:794.5803223,795.576416,466.002594,290.9239807 (GenerateVehicle.cpp::237)
[2018-04-27 15:49:24.221][foregroundDBMerger][info][26205] [SAM] SecRefID0000-5227, save slam or inc, ret.snippetType:0 (OccupancyManager.cpp::196)
[2018-04-27 15:49:24.235][foregroundDBMerger][info][26205] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:24.235][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.235][foregroundDBMerger][warning][26205] [SAM] wrong GPS, previous one equals current, Please Check the GPS input, wrong GPS !!! (EvaluateVehicle.cpp::477)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ************ Statistics Information *************** (EvaluateVehicle.cpp::939)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Trajectory Distance: 454.7890015 (EvaluateVehicle.cpp::940)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Total KF: 80 (EvaluateVehicle.cpp::941)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Total Mp: 2346 Average Observers: 4 Max: 23 (EvaluateVehicle.cpp::942)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] FarPoint: 0 Per: 0% (EvaluateVehicle.cpp::943)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] OverReproject: 0 MaxReproject: 4.201058388 MeanReproject:0.7128263712 Percent: 0% (EvaluateVehicle.cpp::944)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Deviated KF: 0 MaxDist: 8.969468659m Per: 0% (EvaluateVehicle.cpp::945)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Deviated MeanDist: 1.131308436 stdErrDist: 1.45271492 (EvaluateVehicle.cpp::946)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::947)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ************ Statistics Reproject *************** (EvaluateVehicle.cpp::955)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Total Mp: 11473 (EvaluateVehicle.cpp::956)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Max Error: 4.201058388 (EvaluateVehicle.cpp::957)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Mean Error: 0.7128263712 (EvaluateVehicle.cpp::958)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;1 Error: 2248 (EvaluateVehicle.cpp::959)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;2 Error: 390 (EvaluateVehicle.cpp::960)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;5.99 Error: 0 (EvaluateVehicle.cpp::961)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] &gt;10 Error: 0 (EvaluateVehicle.cpp::962)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] *************************************************** (EvaluateVehicle.cpp::963)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] Track:2 Quality OK, snippetName:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00 (OccupancyManager.cpp::272)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:24.282][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] has large distance gap KF, toal num:8 max gap:12.46717739 large than:10 (RoadMatching.cpp::321)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] total length:446.5102882 total KF num:80 total check point num:46 (RoadMatching.cpp::337)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] there are 27grids being crossed by divisions in the global map (RoadMatching.cpp::1775)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4481 (gps index:16 gps:Lat:794.558,Lon:724.069,Alt:-190.203) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] different direction between gps(182 degree) and divisions: SecID:4481=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4481 (gps index:16 gps:Lat:794.558,Lon:724.069,Alt:-190.203) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] rough result of matched divisions: SecID:4482 (gps index:61 gps:Lat:784.536,Lon:461.945,Alt:-192.073) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] different direction between gps(181 degree) and divisions: SecID:4482=0%  (RoadMatching.cpp::1959)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] final result of matched divisions: SecID:4482 (gps index:61 gps:Lat:784.536,Lon:461.945,Alt:-192.073) (RoadMatching.cpp::2053)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] find pathGroups:2 find paths:2 (RoadMatching.cpp::727)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] pathGroupID:1, path num:1
path 1:4481(allSuccess,avgGap:6.97878,num:16)-&gt;4482(allSuccess,avgGap:4.36737,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] pathGroupID:2, path num:1
path 2:4481(allSuccess,avgGap:4.73753,num:12)-&gt;4482(matchFailed,avgGap:8.35685,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] allBestPath, path num:2
path 1:4481(allSuccess,avgGap:6.97878,num:16)-&gt;4482(allSuccess,avgGap:4.36737,num:11)-&gt;
path 2:4481(allSuccess,avgGap:4.73753,num:12)-&gt;4482(matchFailed,avgGap:8.35685,num:16)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] after filterCompleteOverlap, path num:1
path 1:4481(allSuccess,avgGap:6.97878,num:16)-&gt;4482(allSuccess,avgGap:4.36737,num:11)-&gt;
 (RoadMatching.cpp::1584)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] trackId_2_SecRefID0000-5227 MatchRet find path num:1
4481(status:allSuccess,q:1,nodeA:19,len:122.617,nodeB:41,len:239.854)-&gt;4482(status:allSuccess,q:1,nodeA:41,len:239.854,nodeB:60,len:350.519)-&gt;////
 (RoadMatching.cpp::1613)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:19,id:6305,firstLen:2000,bToRight:0 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] cutSide: startIdx:60,id:6307,firstLen:2000,bToRight:1 (CutVehicle.cpp::556)
[2018-04-27 15:49:24.283][foregroundDBMerger][debug][26205] [SAM] before process Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.617,B:0000,kf:41,trackDis:239.854; ID:4482,quality:0,A:0000,kf:41,trackDis:239.854,B:0000,kf:60,trackDis:350.519;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.284][foregroundDBMerger][debug][26205] [SAM] Final Cut piece result: num:2; ID:4481,quality:0,A:0000,kf:19,trackDis:122.617,B:0000,kf:41,trackDis:239.854; ID:4482,quality:0,A:0000,kf:41,trackDis:239.854,B:0000,kf:60,trackDis:350.519;  (CutVehicle.cpp::748)
[2018-04-27 15:49:24.284][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] Track:2 Good Quality after cut:1/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] after: 7 (EvaluateVehicle.cpp::202)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] Track:2 Good Quality after cut:2/2 (OccupancyManager.cpp::342)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:24.285][foregroundDBMerger][info][26205] [SAM] input cutVec size:2 sectionID:0 refID:9248954193559945227 (SelectReference.cpp::165)
[2018-04-27 15:49:24.286][foregroundDBMerger][info][26205] [SAM] curr cut piece start:7 end:55 cut kfs size:49 cut mps size:1672 (SelectReference.cpp::203)
[2018-04-27 15:49:24.287][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 5 (SelectReference.cpp::803)
[2018-04-27 15:49:24.287][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 1.210001826 (SelectReference.cpp::804)
[2018-04-27 15:49:24.320][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945227 has cov sub snippet num:1
------subCovinfo id:0 kf num:49 min:55 max:195 avg:111.354
weight with latter kf: 48
102  81  102  126  98  118  101  117  92  81  90  94  99  103  114  136  161  154  158  152  118  158  147  96  137  135  131  157  180  181  181  195  149  68  63  76  77  67  73  79  87  55  96  84  68  72  56  80  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.320][foregroundDBMerger][info][26205] [SAM] meanErr:0.1704029026 variance:0.202044461 (SelectReference.cpp::454)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] meanErr:1.150459288 variance:7.144417044 (SelectReference.cpp::515)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:0--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] Total KF:49 aveConnectKfNum:0 HectometerKfNum:17 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] trajectoryLen:286.005127 firstLastKfDist:285.9473877 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:0.8958986998 varianceKfToGpsDist:0.2339208573 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1654871851 varianceDirectionOffset:0.1690800637 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:5 varianceKfToPrincipalDist:1.210001826 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] totalMpNum:1672 avePointToKfDist:89.74750519 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6938918233 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:5.110047817 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] EulerianErr:1 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.131403565 score:9.868596077 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.321][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:0 score:9.868596077 sectionID:1490154494078484481 refID:9248954193559945227 (SelectReference.cpp::263)
[2018-04-27 15:49:24.322][foregroundDBMerger][info][26205] [SAM] curr cut piece start:23 end:71 cut kfs size:49 cut mps size:1546 (SelectReference.cpp::203)
[2018-04-27 15:49:24.323][foregroundDBMerger][info][26205] [SAM] trajectory to principal averge: 4.051281929 (SelectReference.cpp::803)
[2018-04-27 15:49:24.323][foregroundDBMerger][info][26205] [SAM] trajectory to principal variance: 0.8363120556 (SelectReference.cpp::804)
[2018-04-27 15:49:24.353][foregroundDBMerger][info][26205] [SAM] cur ref:9248954193559945227 has cov sub snippet num:1
------subCovinfo id:0 kf num:49 min:44 max:195 avg:100.938
weight with latter kf: 48
161  154  158  152  118  158  147  96  137  135  131  157  180  181  181  195  149  68  63  76  77  67  73  79  87  55  96  84  68  72  56  80  107  73  89  59  76  48  44  46  55  83  92  94  78  77  78  55  
 (SelectReference.cpp::1187)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] meanErr:0.1045398799 variance:0.09079015084 (SelectReference.cpp::454)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] meanErr:1.234120325 variance:7.152778765 (SelectReference.cpp::515)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ------------------------------show info of cut:1--------------------------- (SelectReference.cpp::248)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ************ piece quality Information *************** (SelectReference.cpp::1205)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] Total KF:49 aveConnectKfNum:0 HectometerKfNum:17 (SelectReference.cpp::1206)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] trajectoryLen:281.4691162 firstLastKfDist:281.4439087 (SelectReference.cpp::1207)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveKfToGpsDist:0.6137382984 varianceKfToGpsDist:0.2712818086 greatKfToGpsDistPer:0% (SelectReference.cpp::1208)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveDirectionOffset:0.1176400781 varianceDirectionOffset:0.1075752378 greatDirectionOffsetPer:0% (SelectReference.cpp::1210)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveKfToPrincipalDist:4.051281929 varianceKfToPrincipalDist:0.8363120556 (SelectReference.cpp::1212)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] firstKfValid:0 (SelectReference.cpp::1213)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] totalMpNum:1546 avePointToKfDist:95.95278168 farPointPer: 0% (SelectReference.cpp::1215)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveReprojectErr:0.6706197262 greatReprojectErrPer:0% (SelectReference.cpp::1217)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] aveObsKfNum:4.997412682 fewObsPer:0% (SelectReference.cpp::1218)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] EulerianErr:1 (SelectReference.cpp::1219)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] *************************************************** (SelectReference.cpp::1220)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] full:11 negative:1.027868748 score:9.972131729 (SelectReference.cpp::1366)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] Remove Length info cut:1 score:9.972131729 sectionID:1490154494078484482 refID:9248954193559945227 (SelectReference.cpp::263)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:24.354][foregroundDBMerger][info][26205] [SAM] need update:1 (RenewMap.cpp::121)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484481 add Reference: 9248954193559945228 (ServerSection.cpp::73)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] SecID:4481 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945228 sec:1490154494078484481 from vehicle ref:9248954193559945227 cutIdx:0 (RenewMap.cpp::305)
[2018-04-27 15:49:24.358][foregroundDBMerger][info][26205] [SAM] SecID:4481 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] Section:1490154494078484482 add Reference: 9248954193559945229 (ServerSection.cpp::73)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] SecID:4482 update section (RenewMap.cpp::108)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] renew map, add cutData ref:9248954193559945229 sec:1490154494078484482 from vehicle ref:9248954193559945227 cutIdx:1 (RenewMap.cpp::305)
[2018-04-27 15:49:24.363][foregroundDBMerger][info][26205] [SAM] SecID:4482 need extractRefs (RenewMap.cpp::319)
[2018-04-27 15:49:24.363][foregroundDBMerger][debug][26205] [SAM] begin addOverlap between:SecRefID4481-5228----SecRefID4482-5229 (RenewMap.cpp::362)
[2018-04-27 15:49:24.364][foregroundDBMerger][debug][26205] [SAM] addOverlap:32 between:SecRefID4481-5228----SecRefID4482-5229 (RenewMap.cpp::369)
[2018-04-27 15:49:24.364][foregroundDBMerger][debug][26205] [SAM] ----------RenewMap addOverlap end---------- (RenewMap.cpp::375)
[2018-04-27 15:49:24.366][foregroundDBMerger][info][26205] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:24.366][foregroundDBMerger][info][26205] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] ==========END TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:300)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] start to write backend DB (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:302)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] manual mode(true) : beginTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:308)
[2018-04-27 15:49:24.367][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.374][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.374][foregroundDBMerger][debug][26205] [SYS] BackendData TransactionID: 2 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:49:24.377][foregroundDBMerger][info][26205] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:49:24.470][foregroundDBMerger][debug][26205] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:49:24.470][foregroundDBMerger][debug][26205] [SAM] Div:1490154494078484481  save overlaps:88 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:24.558][foregroundDBMerger][debug][26205] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:49:24.559][foregroundDBMerger][debug][26205] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:24.561][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:24.561][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945220 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945220 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945224 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945224 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945228 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945228 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945221 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945221 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945225 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945225 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              reference id:9248954193559945229 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945229 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.561][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945220 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968129 --&gt; 1490154496225968129 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945224 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968130 --&gt; 1490154496225968130 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945228 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968131 --&gt; 1490154496225968131 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945221 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968132 --&gt; 1490154496225968132 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945225 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968133 --&gt; 1490154496225968133 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] Old Reference ID: 9248954193559945229 (BackendDataTransfer.cpp:generateReferenceID:1034)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] add new Reference ID map: 1490154496225968134 --&gt; 1490154496225968134 (BackendDataTransfer.cpp:generateReferenceID:1051)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:24.562][foregroundDBMerger][info][26205] [SYS] geoDivision count: 88 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.562][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945224, 9248954193559945225) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945228, 9248954193559945229) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] reference - (9248954193559945220, 9248954193559945221) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:24.563][foregroundDBMerger][debug][26205] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945220 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945224 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945228 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:24.563][foregroundDBMerger][info][26205] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945221 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945225 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS]              original id:9248954193559945229 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:24.564][foregroundDBMerger][debug][26205] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] updateRefVersion_ equals to 0, no need to update reference version. (BackendDataTransfer.cpp:updateReferencesVersion:1582)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] Updated division :1490154494078484481, optmize status:2 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] Updated division :1490154494078484482, optmize status:2 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968130 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968131 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968133 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.564][foregroundDBMerger][info][26205] [SYS] 1490154496225968134 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:24.565][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.586][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.587][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.596][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.637][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.660][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:49:24.661][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:49:24.661][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] Division :1490154494078484481, optmize status:2 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] Division :1490154494078484482, optmize status:2 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SYS] updateRefVersion_ equals to 0, no need to update reference info. (BackendDTAdapter.cpp:generateUpdatedRefsInfo:225)
[2018-04-27 15:49:24.661][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:24.661][foregroundDBMerger][info][26205] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:49:24.663][foregroundDBMerger][info][26205] [SAM] str_id: toCacheDB  end: 56964663  start: 56964377  total:286(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:24.663][foregroundDBMerger][info][26205] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:323)
[2018-04-27 15:49:24.663][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.718][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.719][foregroundDBMerger][info][26205] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [COM] {
    "SnippetResultList": [
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ],
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "2",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226305",
            "toNodeID": "1490154495152226306",
            "length": "116.854637"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "2",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226306",
            "toNodeID": "1490154495152226307",
            "length": "115.893883"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [SYS] end to write Backend DB! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:350)
[2018-04-27 15:49:24.725][foregroundDBMerger][info][26205] [SYS] end server run with code: 0 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:352)
[2018-04-27 15:49:24.726][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:24.726][foregroundDBMerger][info][26205] [SYS] foregroundDBMerger return ok, value:0, fwRet: 0 (foregroundDBMerger.cpp:main:94)
[2018-04-27 15:49:24.726][foregroundDBMerger][debug][26205] [SYS] LEAVE FUNCTION: main (foregroundDBMerger.cpp::60)</msg>
<status status="PASS" endtime="20180427 15:49:24.158" starttime="20180427 15:49:24.155"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.158" starttime="20180427 15:49:23.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:24.158" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:24.158" starttime="20180427 15:49:24.158"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</arg>
<arg>"Status"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:24.159" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json']</msg>
<status status="PASS" endtime="20180427 15:49:24.159" starttime="20180427 15:49:24.159"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:24.160" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:24.160" starttime="20180427 15:49:24.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.161" starttime="20180427 15:49:24.161"></status>
</kw>
<msg timestamp="20180427 15:49:24.161" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</msg>
<status status="PASS" endtime="20180427 15:49:24.161" starttime="20180427 15:49:24.160"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:24.161" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json'.</msg>
<msg timestamp="20180427 15:49:24.216" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:24.216" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<msg timestamp="20180427 15:49:24.217" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:24.217" starttime="20180427 15:49:24.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.218" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.218" starttime="20180427 15:49:24.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.219" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:24.220" starttime="20180427 15:49:24.219"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:24.221" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.221" starttime="20180427 15:49:24.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:24.222" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.222" starttime="20180427 15:49:24.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.223" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.224" starttime="20180427 15:49:24.223"></status>
</kw>
<msg timestamp="20180427 15:49:24.224" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.225" starttime="20180427 15:49:24.159"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:49:24.226" level="INFO">2 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:24.226" level="INFO">${Value} =             "Status": "2",
            "Status": "2",</msg>
<status status="PASS" endtime="20180427 15:49:24.226" starttime="20180427 15:49:24.225"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:49:24.228" level="INFO">@{rKeyValueList} = [             "Status": "2", |             "Status": "2", ]</msg>
<status status="PASS" endtime="20180427 15:49:24.228" starttime="20180427 15:49:24.227"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.229" level="INFO">            "Status": "2",</msg>
<msg timestamp="20180427 15:49:24.229" level="INFO">            "Status": "2",</msg>
<status status="PASS" endtime="20180427 15:49:24.229" starttime="20180427 15:49:24.228"></status>
</kw>
<msg timestamp="20180427 15:49:24.230" level="INFO">@{rKeyValueList} = [             "Status": "2", |             "Status": "2", ]</msg>
<status status="PASS" endtime="20180427 15:49:24.230" starttime="20180427 15:49:24.158"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${2}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =             &quot;Status&quot;: &quot;2&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:24.233" level="INFO">${words} = [u'"Status":', u'"2",']</msg>
<status status="PASS" endtime="20180427 15:49:24.233" starttime="20180427 15:49:24.232"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.234" level="INFO">${key} = [u'', u'2', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.234" starttime="20180427 15:49:24.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.235" level="INFO">[u'', u'2', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.236" starttime="20180427 15:49:24.235"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.237" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.237" starttime="20180427 15:49:24.236"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.237" starttime="20180427 15:49:24.232"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Status&quot;: &quot;2&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:24.239" level="INFO">${words} = [u'"Status":', u'"2",']</msg>
<status status="PASS" endtime="20180427 15:49:24.239" starttime="20180427 15:49:24.238"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.240" level="INFO">${key} = [u'', u'2', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.240" starttime="20180427 15:49:24.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.242" level="INFO">[u'', u'2', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.242" starttime="20180427 15:49:24.240"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.243" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.243" starttime="20180427 15:49:24.242"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.244" starttime="20180427 15:49:24.237"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.244" starttime="20180427 15:49:24.231"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.244" starttime="20180427 15:49:24.230"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:24.247" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json']</msg>
<status status="PASS" endtime="20180427 15:49:24.247" starttime="20180427 15:49:24.246"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:24.248" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:24.248" starttime="20180427 15:49:24.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.250" starttime="20180427 15:49:24.249"></status>
</kw>
<msg timestamp="20180427 15:49:24.250" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</msg>
<status status="PASS" endtime="20180427 15:49:24.250" starttime="20180427 15:49:24.249"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:24.251" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json'.</msg>
<msg timestamp="20180427 15:49:24.281" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:24.281" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<msg timestamp="20180427 15:49:24.282" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:24.282" starttime="20180427 15:49:24.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.282" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.283" starttime="20180427 15:49:24.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.283" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:24.283" starttime="20180427 15:49:24.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:24.284" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.284" starttime="20180427 15:49:24.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:24.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.285" starttime="20180427 15:49:24.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.285" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.285" starttime="20180427 15:49:24.285"></status>
</kw>
<msg timestamp="20180427 15:49:24.285" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.286" starttime="20180427 15:49:24.245"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:49:24.286" level="INFO">3 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:24.286" level="INFO">${Value} =             "Quality": "0",
            "Quality": "0",
            "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:49:24.286" starttime="20180427 15:49:24.286"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:49:24.287" level="INFO">@{rKeyValueList} = [             "Quality": "0", |             "Quality": "0", |             "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:49:24.287" starttime="20180427 15:49:24.287"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.288" level="INFO">            "Quality": "0",</msg>
<msg timestamp="20180427 15:49:24.288" level="INFO">            "Quality": "0",</msg>
<msg timestamp="20180427 15:49:24.288" level="INFO">            "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:49:24.288" starttime="20180427 15:49:24.287"></status>
</kw>
<msg timestamp="20180427 15:49:24.288" level="INFO">@{rKeyValueList} = [             "Quality": "0", |             "Quality": "0", |             "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:49:24.288" starttime="20180427 15:49:24.244"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =             &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:24.290" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:49:24.290" starttime="20180427 15:49:24.290"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.291" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.291" starttime="20180427 15:49:24.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.291" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.292" starttime="20180427 15:49:24.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.292" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.292" starttime="20180427 15:49:24.292"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.292" starttime="20180427 15:49:24.289"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:24.293" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:49:24.293" starttime="20180427 15:49:24.293"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.294" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.294" starttime="20180427 15:49:24.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.294" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.295" starttime="20180427 15:49:24.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.295" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.295" starttime="20180427 15:49:24.295"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.295" starttime="20180427 15:49:24.293"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:24.296" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:49:24.296" starttime="20180427 15:49:24.296"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.297" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.297" starttime="20180427 15:49:24.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.298" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.298" starttime="20180427 15:49:24.297"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.299" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.299" starttime="20180427 15:49:24.298"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.299" starttime="20180427 15:49:24.295"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.299" starttime="20180427 15:49:24.289"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.299" starttime="20180427 15:49:24.289"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</arg>
<arg>"DivisionID"</arg>
<arg>${sForegroundDBMergerDivisionlist1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:49:24.300" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:49:24.300" starttime="20180427 15:49:24.300"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:24.302" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json']</msg>
<status status="PASS" endtime="20180427 15:49:24.302" starttime="20180427 15:49:24.301"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:24.302" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:24.302" starttime="20180427 15:49:24.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.303" starttime="20180427 15:49:24.303"></status>
</kw>
<msg timestamp="20180427 15:49:24.303" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</msg>
<status status="PASS" endtime="20180427 15:49:24.303" starttime="20180427 15:49:24.302"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:24.304" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json'.</msg>
<msg timestamp="20180427 15:49:24.358" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:24.359" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<msg timestamp="20180427 15:49:24.359" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:24.359" starttime="20180427 15:49:24.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.360" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.361" starttime="20180427 15:49:24.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.362" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:24.362" starttime="20180427 15:49:24.361"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:24.363" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.363" starttime="20180427 15:49:24.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:24.364" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.365" starttime="20180427 15:49:24.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.366" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.366" starttime="20180427 15:49:24.365"></status>
</kw>
<msg timestamp="20180427 15:49:24.367" level="INFO">${std_out} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.367" starttime="20180427 15:49:24.300"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:24.368" level="INFO">2 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:24.368" level="INFO">${division} =             "DivisionID": "1490154494078484481",
            "DivisionID": "1490154494078484482",</msg>
<status status="PASS" endtime="20180427 15:49:24.369" starttime="20180427 15:49:24.367"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.370" level="INFO">${key} = [u'            "DivisionID": "1490154494078484481",', u'            "DivisionID": "1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:49:24.370" starttime="20180427 15:49:24.369"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484481&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:24.372" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484481",']</msg>
<status status="PASS" endtime="20180427 15:49:24.372" starttime="20180427 15:49:24.371"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:24.373" level="INFO">${division} = [u'', u'1490154494078484481', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.373" starttime="20180427 15:49:24.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.375" level="INFO">1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:49:24.375" starttime="20180427 15:49:24.374"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.376" starttime="20180427 15:49:24.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.377" level="INFO">[u'1490154494078484481']</msg>
<status status="PASS" endtime="20180427 15:49:24.377" starttime="20180427 15:49:24.377"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.377" starttime="20180427 15:49:24.371"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484482&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:24.379" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:49:24.379" starttime="20180427 15:49:24.378"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:24.380" level="INFO">${division} = [u'', u'1490154494078484482', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.380" starttime="20180427 15:49:24.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.381" level="INFO">1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:49:24.382" starttime="20180427 15:49:24.381"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.382" starttime="20180427 15:49:24.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.383" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:49:24.383" starttime="20180427 15:49:24.383"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.383" starttime="20180427 15:49:24.378"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.384" starttime="20180427 15:49:24.370"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.384" starttime="20180427 15:49:24.384"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.385" starttime="20180427 15:49:24.299"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</arg>
<arg>"length"</arg>
<arg>${sForegroundDBMergerLength1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:49:24.387" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:49:24.387" starttime="20180427 15:49:24.386"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:24.388" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json']</msg>
<status status="PASS" endtime="20180427 15:49:24.388" starttime="20180427 15:49:24.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:24.389" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:24.389" starttime="20180427 15:49:24.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.390" starttime="20180427 15:49:24.390"></status>
</kw>
<msg timestamp="20180427 15:49:24.390" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json</msg>
<status status="PASS" endtime="20180427 15:49:24.390" starttime="20180427 15:49:24.389"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:24.391" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520564939346-2.json'.</msg>
<msg timestamp="20180427 15:49:24.420" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:24.421" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<msg timestamp="20180427 15:49:24.421" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:24.422" starttime="20180427 15:49:24.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.423" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.423" starttime="20180427 15:49:24.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.424" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:24.424" starttime="20180427 15:49:24.423"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:24.426" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.426" starttime="20180427 15:49:24.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:24.427" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:24.427" starttime="20180427 15:49:24.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.428" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082547_2017-07-31_T_19-18-48.508_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082651_2017-08-04_T_15-50-15.183_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426082811_2017-08-04_T_16-19-26.337_GMT_01.rtv_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:24.428" starttime="20180427 15:49:24.427"></status>
</kw>
<msg timestamp="20180427 15:49:24.429" level="INFO">${std_out} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "2",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:24.429" starttime="20180427 15:49:24.387"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:24.430" level="INFO">2 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:24.430" level="INFO">${division} =             "length": "116.854637",
            "length": "115.893883",</msg>
<status status="PASS" endtime="20180427 15:49:24.431" starttime="20180427 15:49:24.429"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:24.432" level="INFO">${key} = [u'            "length": "116.854637",', u'            "length": "115.893883",']</msg>
<status status="PASS" endtime="20180427 15:49:24.432" starttime="20180427 15:49:24.431"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;length&quot;: &quot;116.854637&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:24.434" level="INFO">${divisions} = [u'"length":', u'"116.854637",']</msg>
<status status="PASS" endtime="20180427 15:49:24.434" starttime="20180427 15:49:24.433"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:24.435" level="INFO">${division} = [u'', u'116.854637', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.435" starttime="20180427 15:49:24.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.437" level="INFO">116.854637</msg>
<status status="PASS" endtime="20180427 15:49:24.437" starttime="20180427 15:49:24.436"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.438" starttime="20180427 15:49:24.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.439" level="INFO">[u'116.854637']</msg>
<status status="PASS" endtime="20180427 15:49:24.439" starttime="20180427 15:49:24.439"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.439" starttime="20180427 15:49:24.432"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;length&quot;: &quot;115.893883&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:24.441" level="INFO">${divisions} = [u'"length":', u'"115.893883",']</msg>
<status status="PASS" endtime="20180427 15:49:24.441" starttime="20180427 15:49:24.440"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:24.442" level="INFO">${division} = [u'', u'115.893883', u',']</msg>
<status status="PASS" endtime="20180427 15:49:24.442" starttime="20180427 15:49:24.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.443" level="INFO">115.893883</msg>
<status status="PASS" endtime="20180427 15:49:24.444" starttime="20180427 15:49:24.443"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.445" starttime="20180427 15:49:24.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.446" level="INFO">[u'116.854637', u'115.893883']</msg>
<status status="PASS" endtime="20180427 15:49:24.446" starttime="20180427 15:49:24.445"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.446" starttime="20180427 15:49:24.440"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.446" starttime="20180427 15:49:24.432"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.448" starttime="20180427 15:49:24.447"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:24.448" starttime="20180427 15:49:24.385"></status>
</kw>
<doc>| Description | test normal foregroundDBMerger of slam snippet |
| Input | 1.DB |
| | 2.input json |
| | 3.snippet |
| Execute | call the command line to process foregroundDBMerger |
| Expect result | 1.output json |
| | 2.in output json, status,quality,divisionlist and length |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:49:24.448" critical="yes" starttime="20180427 15:49:07.919"></status>
</test>
<test id="s1-s3-s1-t2" name="Align Merger">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.455" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:49:24.455" starttime="20180427 15:49:24.452"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:49:24.458" starttime="20180427 15:49:24.455"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:24.459" starttime="20180427 15:49:24.458"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:49:24.460" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:49:25.916" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:49:08 CST 2018

  System load:  1.18               Processes:           302
  Usage of /:   82.7% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:49:08 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:49:25.917" starttime="20180427 15:49:24.459"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:25.917" starttime="20180427 15:49:24.452"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:25.919" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:49:25.920" starttime="20180427 15:49:25.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:25.921" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:25.921" starttime="20180427 15:49:25.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:25.923" starttime="20180427 15:49:25.923"></status>
</kw>
<msg timestamp="20180427 15:49:25.924" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:49:25.924" starttime="20180427 15:49:25.921"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:25.925" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:49:25.939" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:25.940" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:25.940" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:25.940" starttime="20180427 15:49:25.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:25.941" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:25.942" starttime="20180427 15:49:25.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:25.942" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:25.943" starttime="20180427 15:49:25.942"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:25.944" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:25.944" starttime="20180427 15:49:25.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:25.945" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:25.945" starttime="20180427 15:49:25.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:25.946" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:25.946" starttime="20180427 15:49:25.945"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:25.947" starttime="20180427 15:49:25.917"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:25.949" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:49:25.949" starttime="20180427 15:49:25.948"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:25.950" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:25.951" starttime="20180427 15:49:25.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:25.953" starttime="20180427 15:49:25.952"></status>
</kw>
<msg timestamp="20180427 15:49:25.953" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:49:25.953" starttime="20180427 15:49:25.951"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:25.954" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:49:25.999" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:26.000" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:26.000" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:26.000" starttime="20180427 15:49:25.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:26.001" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:26.002" starttime="20180427 15:49:26.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:26.003" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:26.003" starttime="20180427 15:49:26.002"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:26.004" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:26.004" starttime="20180427 15:49:26.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:26.005" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:26.005" starttime="20180427 15:49:26.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:26.006" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:26.006" starttime="20180427 15:49:26.006"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:26.007" starttime="20180427 15:49:25.947"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:26.010" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:49:26.010" starttime="20180427 15:49:26.009"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:26.011" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:26.011" starttime="20180427 15:49:26.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:26.014" starttime="20180427 15:49:26.013"></status>
</kw>
<msg timestamp="20180427 15:49:26.014" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:49:26.014" starttime="20180427 15:49:26.012"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:26.015" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:49:26.061" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:26.061" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:26.062" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:26.062" starttime="20180427 15:49:26.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:26.063" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:26.063" starttime="20180427 15:49:26.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:26.064" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:26.065" starttime="20180427 15:49:26.064"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:26.066" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:26.066" starttime="20180427 15:49:26.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:26.067" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:26.067" starttime="20180427 15:49:26.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:26.068" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:26.068" starttime="20180427 15:49:26.068"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:26.069" starttime="20180427 15:49:26.007"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:49:26.070" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:49:26.115" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:49:26.115" starttime="20180427 15:49:26.069"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:26.119" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:49:26.119" starttime="20180427 15:49:26.118"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:26.121" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:49:26.121" starttime="20180427 15:49:26.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:26.123" starttime="20180427 15:49:26.123"></status>
</kw>
<msg timestamp="20180427 15:49:26.124" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:49:26.124" starttime="20180427 15:49:26.121"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:26.125" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:49:36.726" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:36.727" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:49:36.727" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:36.727" starttime="20180427 15:49:26.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:36.729" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 27283
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:49:36.729" starttime="20180427 15:49:36.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:36.730" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:36.730" starttime="20180427 15:49:36.729"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:36.732" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:49:36.732" starttime="20180427 15:49:36.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:36.733" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:36.733" starttime="20180427 15:49:36.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:36.734" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 27283
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:49:36.735" starttime="20180427 15:49:36.734"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:36.735" starttime="20180427 15:49:26.117"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:36.735" starttime="20180427 15:49:26.116"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:36.738" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:49:36.738" starttime="20180427 15:49:36.737"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:36.739" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:49:36.740" starttime="20180427 15:49:36.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:36.742" starttime="20180427 15:49:36.742"></status>
</kw>
<msg timestamp="20180427 15:49:36.743" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:49:36.743" starttime="20180427 15:49:36.740"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:36.744" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:49:36.790" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:36.790" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:49:36.791" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:36.791" starttime="20180427 15:49:36.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:36.792" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:49:36.792" starttime="20180427 15:49:36.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:36.793" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:36.793" starttime="20180427 15:49:36.793"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:36.795" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:49:36.795" starttime="20180427 15:49:36.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:36.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:36.796" starttime="20180427 15:49:36.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:36.797" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:49:36.797" starttime="20180427 15:49:36.796"></status>
</kw>
<msg timestamp="20180427 15:49:36.798" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:49:36.798" starttime="20180427 15:49:36.736"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:36.800" starttime="20180427 15:49:36.799"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:36.800" starttime="20180427 15:49:24.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:36.801" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:36.801" starttime="20180427 15:49:36.801"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/ForegroundDBMerger/align/WorkflowManager /opt/ygomi/roadDB/file_storage/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/ForegroundDBMerger/align/dbbak.sql</arg>
<arg>cp ${sfilefortest}/ForegroundDBMerger/align/1524733383459-4.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:49:36.805" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:49:36.834" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:36.835" starttime="20180427 15:49:36.804"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:49:36.837" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:49:36.882" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:36.883" starttime="20180427 15:49:36.836"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:49:36.884" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:49:36.929" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:36.929" starttime="20180427 15:49:36.883"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:49:36.931" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:49:36.976" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:36.977" starttime="20180427 15:49:36.930"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:49:36.978" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:49:37.023" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.024" starttime="20180427 15:49:36.977"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:49:37.025" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:49:37.070" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.071" starttime="20180427 15:49:37.024"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:49:37.072" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:49:37.150" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.150" starttime="20180427 15:49:37.072"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:49:37.152" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:49:37.197" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.197" starttime="20180427 15:49:37.151"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:37.198" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:49:37.244" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.244" starttime="20180427 15:49:37.198"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:49:37.245" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:49:37.291" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.291" starttime="20180427 15:49:37.245"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:37.292" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:49:37.338" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.338" starttime="20180427 15:49:37.292"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:49:37.340" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:49:37.384" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.385" starttime="20180427 15:49:37.339"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:49:37.386" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:49:37.463" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.464" starttime="20180427 15:49:37.385"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:37.465" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:49:37.509" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:37.510" starttime="20180427 15:49:37.464"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:37.512" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/ForegroundDBMerger/align/WorkflowManager', u'/opt/ygomi/roadDB/file_storage/']</msg>
<status status="PASS" endtime="20180427 15:49:37.513" starttime="20180427 15:49:37.512"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:37.514" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:49:37.514" starttime="20180427 15:49:37.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:37.517" starttime="20180427 15:49:37.516"></status>
</kw>
<msg timestamp="20180427 15:49:37.517" level="INFO">${cmd} = cp -r ~/autotest/filefortest/ForegroundDBMerger/align/WorkflowManager /opt/ygomi/roadDB/file_storage/</msg>
<status status="PASS" endtime="20180427 15:49:37.517" starttime="20180427 15:49:37.515"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:37.518" level="INFO">Executing command 'cp -r ~/autotest/filefortest/ForegroundDBMerger/align/WorkflowManager /opt/ygomi/roadDB/file_storage/'.</msg>
<msg timestamp="20180427 15:49:37.605" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:37.605" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:37.606" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:37.606" starttime="20180427 15:49:37.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:37.607" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:37.607" starttime="20180427 15:49:37.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:37.609" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:37.609" starttime="20180427 15:49:37.608"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:37.610" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:37.611" starttime="20180427 15:49:37.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:37.612" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:37.612" starttime="20180427 15:49:37.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:37.613" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:37.613" starttime="20180427 15:49:37.612"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:37.614" starttime="20180427 15:49:37.510"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:37.614" starttime="20180427 15:49:36.803"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:37.616" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/ForegroundDBMerger/align/dbbak.sql'.</msg>
<msg timestamp="20180427 15:49:39.255" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:39.256" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:39.256" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:39.256" starttime="20180427 15:49:37.616"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:39.257" starttime="20180427 15:49:39.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:39.258" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:39.258" starttime="20180427 15:49:39.257"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:39.260" starttime="20180427 15:49:39.259"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:39.260" starttime="20180427 15:49:37.615"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:39.263" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/ForegroundDBMerger/align/1524733383459-4.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/']</msg>
<status status="PASS" endtime="20180427 15:49:39.263" starttime="20180427 15:49:39.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:39.264" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:49:39.264" starttime="20180427 15:49:39.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:39.267" starttime="20180427 15:49:39.266"></status>
</kw>
<msg timestamp="20180427 15:49:39.267" level="INFO">${cmd} = cp ~/autotest/filefortest/ForegroundDBMerger/align/1524733383459-4.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/</msg>
<status status="PASS" endtime="20180427 15:49:39.267" starttime="20180427 15:49:39.265"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:39.269" level="INFO">Executing command 'cp ~/autotest/filefortest/ForegroundDBMerger/align/1524733383459-4.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/'.</msg>
<msg timestamp="20180427 15:49:39.314" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:39.315" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:39.315" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:39.316" starttime="20180427 15:49:39.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:39.317" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:39.317" starttime="20180427 15:49:39.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:39.318" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:39.318" starttime="20180427 15:49:39.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:39.319" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:39.320" starttime="20180427 15:49:39.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:39.321" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:39.321" starttime="20180427 15:49:39.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:39.323" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:39.323" starttime="20180427 15:49:39.322"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:39.323" starttime="20180427 15:49:39.261"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:39.324" starttime="20180427 15:49:36.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:39.325" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:39.325" starttime="20180427 15:49:39.324"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/foregroundDBMerger \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524733383459-4.json \ --ojson \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5 \ --pcfg \ /opt/ygomi/roadDB/etc/config \ --manual \ --ol ${sOutput}/ForegroundDBMerger</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:39.328" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/foregroundDBMerger', u'', u'--ijson', u'', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524733383459-4.json', u'', u'--ojson', u'',...</msg>
<status status="PASS" endtime="20180427 15:49:39.328" starttime="20180427 15:49:39.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:39.330" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/foregroundDBMerger</msg>
<status status="PASS" endtime="20180427 15:49:39.330" starttime="20180427 15:49:39.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:39.332" starttime="20180427 15:49:39.332"></status>
</kw>
<msg timestamp="20180427 15:49:39.333" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524733383459-4.json  --ojson  /opt/ygomi/roadDB/work_path/Work...</msg>
<status status="PASS" endtime="20180427 15:49:39.333" starttime="20180427 15:49:39.330"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:39.334" level="INFO">Executing command '/opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524733383459-4.json  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol ~/autotest/output/ForegroundDBMerger'.</msg>
<msg timestamp="20180427 15:49:41.401" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:41.403" level="INFO">${stdout} = [2018-04-27 15:49:39.946][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SYS] Log level: 0 (foreg...</msg>
<msg timestamp="20180427 15:49:41.404" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:41.404" starttime="20180427 15:49:39.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.405" level="INFO">[2018-04-27 15:49:39.946][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SYS] Log level: 0 (foregroundDBMergerExecute.cpp:getForegroundDBMergerInput:294)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] {
    "DivisionList": [
        "1490154494078484482",
        "1490154494078484481"
    ],
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00"
        }
    ],
    "SegmentList": "",
    "DBStamp": "1524733383459",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "4"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524733383459-4.json  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBMerger   (otherFuns.h::410)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:49:39.946][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SYS] BackendDB Version: 104 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:193)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5/server_2018-04-27_15-49-39_28537 (DebugInfoPath.cpp::58)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SYS] server start success. (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:221)
[2018-04-27 15:49:39.950][foregroundDBMerger][debug][28537] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:49:39.951][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.958][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.958][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.964][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.964][foregroundDBMerger][info][28537] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:49:39.964][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:242)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:49:39.973][foregroundDBMerger][warning][28537] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:49:39.973][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:39.974][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.009][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.029][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.041][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.042][foregroundDBMerger][debug][28537] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:40.042][foregroundDBMerger][debug][28537] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:40.043][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:40.043][foregroundDBMerger][debug][28537] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:40.043][foregroundDBMerger][debug][28537] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SAM] Division:1490154494078484481read overlap:85 (ServerDbHelper.cpp::1186)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:40.072][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:40.072][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:40.085][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.106][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.124][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.137][foregroundDBMerger][debug][28537] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:40.137][foregroundDBMerger][debug][28537] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:40.138][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:40.138][foregroundDBMerger][debug][28537] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:49:40.166][foregroundDBMerger][debug][28537] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:40.166][foregroundDBMerger][debug][28537] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:49:40.166][foregroundDBMerger][debug][28537] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:49:40.170][foregroundDBMerger][info][28537] [SAM] restore overlap:85 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:49:40.170][foregroundDBMerger][debug][28537] [SAM] SecRefID4481-8130 have 30 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:40.170][foregroundDBMerger][debug][28537] [SAM] SecRefID4481-8131 have 29 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:40.170][foregroundDBMerger][debug][28537] [SAM] SecRefID4481-8129 have 23 anchorKF pairs TO SecRefID4482::8132 with conf: 12.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:40.170][foregroundDBMerger][info][28537] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:49:40.170][foregroundDBMerger][info][28537] [SAM] str_id: fromCacheDB  end: 56980170  start: 56979973  total:197(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:40.171][foregroundDBMerger][info][28537] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] get inc report:2 (GenerateVehicle.cpp::297)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380674 in SecRefID4481-8129 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.230][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380674 in SecRefID4482-8132 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.269][foregroundDBMerger][info][28537] [SAM] Pass inc report:2 (GenerateVehicle.cpp::424)
[2018-04-27 15:49:40.273][foregroundDBMerger][info][28537] [SAM] addOverlap:40 between:SecRefID4481-8129----SecRefID4482-8132 (GenerateVehicle.cpp::493)
[2018-04-27 15:49:40.273][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.293][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.309][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:40.309][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:40.310][foregroundDBMerger][info][28537] [SAM] check :SecRefID4481-8129 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.430][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 total inc kf:69 left inc KF:69 lastNewLoc_spars:69 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.430][foregroundDBMerger][info][28537] [SAM] check :SecRefID4482-8132 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 total inc kf:67 left inc KF:67 lastNewLoc_spars:67 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.529][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.535][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:40.535][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:40.536][foregroundDBMerger][info][28537] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] get inc report:2 (GenerateVehicle.cpp::297)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380675 in SecRefID4481-8129 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.585][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380675 in SecRefID4482-8132 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.618][foregroundDBMerger][info][28537] [SAM] Pass inc report:2 (GenerateVehicle.cpp::424)
[2018-04-27 15:49:40.623][foregroundDBMerger][info][28537] [SAM] addOverlap:37 between:SecRefID4481-8129----SecRefID4482-8132 (GenerateVehicle.cpp::493)
[2018-04-27 15:49:40.623][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.646][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.664][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:40.664][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:40.664][foregroundDBMerger][info][28537] [SAM] check :SecRefID4481-8129 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.765][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 total inc kf:68 left inc KF:68 lastNewLoc_spars:68 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.765][foregroundDBMerger][info][28537] [SAM] check :SecRefID4482-8132 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 total inc kf:65 left inc KF:65 lastNewLoc_spars:65 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.852][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.861][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:40.861][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:40.864][foregroundDBMerger][info][28537] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:40.868][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] get inc report:2 (GenerateVehicle.cpp::297)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380676 in SecRefID4481-8129 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.926][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380676 in SecRefID4482-8132 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.967][foregroundDBMerger][info][28537] [SAM] Pass inc report:2 (GenerateVehicle.cpp::424)
[2018-04-27 15:49:40.972][foregroundDBMerger][info][28537] [SAM] addOverlap:33 between:SecRefID4481-8129----SecRefID4482-8132 (GenerateVehicle.cpp::493)
[2018-04-27 15:49:40.972][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:41.002][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:41.026][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:41.026][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:41.026][foregroundDBMerger][info][28537] [SAM] check :SecRefID4481-8129 (OccupancyManager.cpp::280)
[2018-04-27 15:49:41.139][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 total inc kf:57 left inc KF:57 lastNewLoc_spars:57 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:41.139][foregroundDBMerger][info][28537] [SAM] check :SecRefID4482-8132 (OccupancyManager.cpp::280)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 total inc kf:57 left inc KF:57 lastNewLoc_spars:57 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:41.248][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:41.262][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:41.262][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] ==========END TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:300)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] start to write backend DB (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:302)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] manual mode(true) : beginTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:308)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.272][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.272][foregroundDBMerger][debug][28537] [SYS] BackendData TransactionID: 4 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:49:41.276][foregroundDBMerger][info][28537] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:49:41.544][foregroundDBMerger][debug][28537] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:49:41.544][foregroundDBMerger][debug][28537] [SAM] Div:1490154494078484481  save overlaps:192 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:41.757][foregroundDBMerger][debug][28537] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:49:41.757][foregroundDBMerger][debug][28537] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:41.765][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:41.765][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:41.767][foregroundDBMerger][info][28537] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] geoDivision count: 192 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] updateRefVersion_ equals to 0, no need to update reference version. (BackendDataTransfer.cpp:updateReferencesVersion:1582)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] Updated division :1490154494078484481, optmize status:1 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] Updated division :1490154494078484482, optmize status:1 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:41.773][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.794][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.794][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.803][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.904][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:49:41.929][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:49:41.929][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] Division :1490154494078484481, optmize status:1 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] Division :1490154494078484482, optmize status:1 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] updateRefVersion_ equals to 0, no need to update reference info. (BackendDTAdapter.cpp:generateUpdatedRefsInfo:225)
[2018-04-27 15:49:41.929][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:49:41.933][foregroundDBMerger][info][28537] [SAM] str_id: toCacheDB  end: 56981933  start: 56981276  total:657(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:41.933][foregroundDBMerger][info][28537] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:323)
[2018-04-27 15:49:41.933][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.967][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.967][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.972][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [COM] {
    "SnippetResultList": [
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ],
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "1",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226305",
            "toNodeID": "1490154495152226306",
            "length": "116.854637"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "1",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226306",
            "toNodeID": "1490154495152226307",
            "length": "115.893883"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [SYS] end to write Backend DB! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:350)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [SYS] end server run with code: 0 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:352)
[2018-04-27 15:49:41.974][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:41.974][foregroundDBMerger][info][28537] [SYS] foregroundDBMerger return ok, value:0, fwRet: 0 (foregroundDBMerger.cpp:main:94)
[2018-04-27 15:49:41.974][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: main (foregroundDBMerger.cpp::60)</msg>
<status status="PASS" endtime="20180427 15:49:41.409" starttime="20180427 15:49:41.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.410" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:41.410" starttime="20180427 15:49:41.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:41.413" level="INFO">${rStdout} = [2018-04-27 15:49:39.946][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SYS] Log level: 0 (foreg...</msg>
<status status="PASS" endtime="20180427 15:49:41.413" starttime="20180427 15:49:41.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:41.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.414" starttime="20180427 15:49:41.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.415" level="INFO">[2018-04-27 15:49:39.946][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: main (foregroundDBMerger.cpp::60)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SYS] Log level: 0 (foregroundDBMergerExecute.cpp:getForegroundDBMergerInput:294)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] {
    "DivisionList": [
        "1490154494078484482",
        "1490154494078484481"
    ],
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00"
        }
    ],
    "SegmentList": "",
    "DBStamp": "1524733383459",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "4"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBMerger  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/1524733383459-4.json  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBMerger   (otherFuns.h::410)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:49:39.946][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SYS] BackendDB Version: 104 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:193)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:49:39.946][foregroundDBMerger][info][28537] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5/server_2018-04-27_15-49-39_28537 (DebugInfoPath.cpp::58)
[2018-04-27 15:49:39.947][foregroundDBMerger][info][28537] [SYS] server start success. (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:221)
[2018-04-27 15:49:39.950][foregroundDBMerger][debug][28537] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:49:39.951][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.958][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.958][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.964][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.964][foregroundDBMerger][info][28537] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:49:39.964][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:242)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:49:39.973][foregroundDBMerger][warning][28537] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:49:39.973][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:39.973][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:39.974][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:39.988][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.009][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.029][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.041][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.042][foregroundDBMerger][debug][28537] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:40.042][foregroundDBMerger][debug][28537] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.042][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:40.043][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:40.043][foregroundDBMerger][debug][28537] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:40.043][foregroundDBMerger][debug][28537] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:49:40.043][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SAM] Division:1490154494078484481read overlap:85 (ServerDbHelper.cpp::1186)
[2018-04-27 15:49:40.072][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:40.072][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:40.072][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:40.084][foregroundDBMerger][info][28537] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:40.085][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.106][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.124][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:40.137][foregroundDBMerger][debug][28537] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:40.137][foregroundDBMerger][debug][28537] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:40.137][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:40.138][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:40.138][foregroundDBMerger][debug][28537] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:49:40.138][foregroundDBMerger][info][28537] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:49:40.166][foregroundDBMerger][debug][28537] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:40.166][foregroundDBMerger][debug][28537] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:49:40.166][foregroundDBMerger][debug][28537] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:49:40.166][foregroundDBMerger][info][28537] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:49:40.170][foregroundDBMerger][info][28537] [SAM] restore overlap:85 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:49:40.170][foregroundDBMerger][debug][28537] [SAM] SecRefID4481-8130 have 30 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:40.170][foregroundDBMerger][debug][28537] [SAM] SecRefID4481-8131 have 29 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:40.170][foregroundDBMerger][debug][28537] [SAM] SecRefID4481-8129 have 23 anchorKF pairs TO SecRefID4482::8132 with conf: 12.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:40.170][foregroundDBMerger][info][28537] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:49:40.170][foregroundDBMerger][info][28537] [SAM] str_id: fromCacheDB  end: 56980170  start: 56979973  total:197(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:40.171][foregroundDBMerger][info][28537] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] get inc report:2 (GenerateVehicle.cpp::297)
[2018-04-27 15:49:40.176][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380674 in SecRefID4481-8129 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.230][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380674 in SecRefID4482-8132 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.269][foregroundDBMerger][info][28537] [SAM] Pass inc report:2 (GenerateVehicle.cpp::424)
[2018-04-27 15:49:40.273][foregroundDBMerger][info][28537] [SAM] addOverlap:40 between:SecRefID4481-8129----SecRefID4482-8132 (GenerateVehicle.cpp::493)
[2018-04-27 15:49:40.273][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.293][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.309][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:40.309][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:40.310][foregroundDBMerger][info][28537] [SAM] check :SecRefID4481-8129 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.430][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 total inc kf:69 left inc KF:69 lastNewLoc_spars:69 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.430][foregroundDBMerger][info][28537] [SAM] check :SecRefID4482-8132 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 total inc kf:67 left inc KF:67 lastNewLoc_spars:67 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:49:40.522][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.529][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.535][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:40.535][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:40.536][foregroundDBMerger][info][28537] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] get inc report:2 (GenerateVehicle.cpp::297)
[2018-04-27 15:49:40.541][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380675 in SecRefID4481-8129 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.585][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380675 in SecRefID4482-8132 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.618][foregroundDBMerger][info][28537] [SAM] Pass inc report:2 (GenerateVehicle.cpp::424)
[2018-04-27 15:49:40.623][foregroundDBMerger][info][28537] [SAM] addOverlap:37 between:SecRefID4481-8129----SecRefID4482-8132 (GenerateVehicle.cpp::493)
[2018-04-27 15:49:40.623][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.646][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:40.664][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:40.664][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:40.664][foregroundDBMerger][info][28537] [SAM] check :SecRefID4481-8129 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.765][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 total inc kf:68 left inc KF:68 lastNewLoc_spars:68 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.765][foregroundDBMerger][info][28537] [SAM] check :SecRefID4482-8132 (OccupancyManager.cpp::280)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 total inc kf:65 left inc KF:65 lastNewLoc_spars:65 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:49:40.839][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.852][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:40.861][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:40.861][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:40.864][foregroundDBMerger][info][28537] [SYS] run snippet file name: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:257)
[2018-04-27 15:49:40.868][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Beginning ### (AlgoServerGeneratorImp.cpp::136)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Beginning ### (OccupancyManager.cpp::144)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] get report number:1 (GenerateVehicle.cpp::86)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] get inc report:2 (GenerateVehicle.cpp::297)
[2018-04-27 15:49:40.869][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380676 in SecRefID4481-8129 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.926][foregroundDBMerger][info][28537] [SAM] add batch:9248954193828380676 in SecRefID4482-8132 (GenerateVehicle.cpp::363)
[2018-04-27 15:49:40.967][foregroundDBMerger][info][28537] [SAM] Pass inc report:2 (GenerateVehicle.cpp::424)
[2018-04-27 15:49:40.972][foregroundDBMerger][info][28537] [SAM] addOverlap:33 between:SecRefID4481-8129----SecRefID4482-8132 (GenerateVehicle.cpp::493)
[2018-04-27 15:49:40.972][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:41.002][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132, save slam or inc, ret.snippetType:1 (OccupancyManager.cpp::196)
[2018-04-27 15:49:41.026][foregroundDBMerger][info][28537] [SAM] ### Module:generateVehicle Ending ### (OccupancyManager.cpp::201)
[2018-04-27 15:49:41.026][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Beginning ### (OccupancyManager.cpp::246)
[2018-04-27 15:49:41.026][foregroundDBMerger][info][28537] [SAM] check :SecRefID4481-8129 (OccupancyManager.cpp::280)
[2018-04-27 15:49:41.139][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 total inc kf:57 left inc KF:57 lastNewLoc_spars:57 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:41.139][foregroundDBMerger][info][28537] [SAM] check :SecRefID4482-8132 (OccupancyManager.cpp::280)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 total inc kf:57 left inc KF:57 lastNewLoc_spars:57 (EvaluateVehicle.cpp::350)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:inspectVehicle Ending ### (OccupancyManager.cpp::296)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Beginning ### (OccupancyManager.cpp::303)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:divideSnippet Ending ### (OccupancyManager.cpp::356)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Beginning ### (OccupancyManager.cpp::364)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:selectReference Ending ### (OccupancyManager.cpp::397)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerGeneratorImp.cpp::174)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:49:41.228][foregroundDBMerger][info][28537] [SAM] SecRefID4481-8129 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:41.248][foregroundDBMerger][info][28537] [SAM] SecRefID4482-8132 should optimize (RenewMap.cpp::154)
[2018-04-27 15:49:41.262][foregroundDBMerger][info][28537] [SAM] ### Module:renewGlobal Ending ### (AlgoServerGeneratorImp.cpp::182)
[2018-04-27 15:49:41.262][foregroundDBMerger][info][28537] [SAM] ### Module:occupancyFlow Ending ### (AlgoServerGeneratorImp.cpp::163)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] ==========END TO PROCESS ALGORITHM========== (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:300)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] start to write backend DB (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:302)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] manual mode(true) : beginTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:308)
[2018-04-27 15:49:41.265][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.272][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.272][foregroundDBMerger][debug][28537] [SYS] BackendData TransactionID: 4 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:49:41.276][foregroundDBMerger][info][28537] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:49:41.544][foregroundDBMerger][debug][28537] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:49:41.544][foregroundDBMerger][debug][28537] [SAM] Div:1490154494078484481  save overlaps:192 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:41.757][foregroundDBMerger][debug][28537] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:49:41.757][foregroundDBMerger][debug][28537] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:49:41.765][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:41.765][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.765][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.766][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:41.767][foregroundDBMerger][info][28537] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:41.768][foregroundDBMerger][info][28537] [SYS] geoDivision count: 192 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.768][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.769][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:49:41.770][foregroundDBMerger][debug][28537] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:41.770][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:49:41.771][foregroundDBMerger][debug][28537] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] updateRefVersion_ equals to 0, no need to update reference version. (BackendDataTransfer.cpp:updateReferencesVersion:1582)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] Updated division :1490154494078484481, optmize status:1 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] Updated division :1490154494078484482, optmize status:1 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:41.771][foregroundDBMerger][info][28537] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:49:41.773][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.794][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.794][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.803][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.904][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:49:41.929][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:49:41.929][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] Division :1490154494078484481, optmize status:1 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] Division :1490154494078484482, optmize status:1 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SYS] updateRefVersion_ equals to 0, no need to update reference info. (BackendDTAdapter.cpp:generateUpdatedRefsInfo:225)
[2018-04-27 15:49:41.929][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:49:41.929][foregroundDBMerger][info][28537] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:49:41.933][foregroundDBMerger][info][28537] [SAM] str_id: toCacheDB  end: 56981933  start: 56981276  total:657(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:41.933][foregroundDBMerger][info][28537] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:323)
[2018-04-27 15:49:41.933][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.967][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.967][foregroundDBMerger][info][28537] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:41.972][foregroundDBMerger][info][28537] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [COM] {
    "SnippetResultList": [
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "SnippetName": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "Quality": "0",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ],
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "1",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226305",
            "toNodeID": "1490154495152226306",
            "length": "116.854637"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "1",
            "SegmentList": [
                "346953630"
            ],
            "fromNodeID": "1490154495152226306",
            "toNodeID": "1490154495152226307",
            "length": "115.893883"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [SYS] end to write Backend DB! (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:350)
[2018-04-27 15:49:41.973][foregroundDBMerger][info][28537] [SYS] end server run with code: 0 (rdbForegroundDBMerger.cpp:rdbForegroundDBMerger:352)
[2018-04-27 15:49:41.974][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: rdbForegroundDBMerger (rdbForegroundDBMerger.cpp::182)
[2018-04-27 15:49:41.974][foregroundDBMerger][info][28537] [SYS] foregroundDBMerger return ok, value:0, fwRet: 0 (foregroundDBMerger.cpp:main:94)
[2018-04-27 15:49:41.974][foregroundDBMerger][debug][28537] [SYS] LEAVE FUNCTION: main (foregroundDBMerger.cpp::60)</msg>
<status status="PASS" endtime="20180427 15:49:41.420" starttime="20180427 15:49:41.414"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.420" starttime="20180427 15:49:39.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:41.421" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:41.421" starttime="20180427 15:49:41.421"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:41.426" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json']</msg>
<status status="PASS" endtime="20180427 15:49:41.426" starttime="20180427 15:49:41.425"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:41.427" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:41.427" starttime="20180427 15:49:41.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.430" starttime="20180427 15:49:41.429"></status>
</kw>
<msg timestamp="20180427 15:49:41.430" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</msg>
<status status="PASS" endtime="20180427 15:49:41.430" starttime="20180427 15:49:41.428"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:41.431" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json'.</msg>
<msg timestamp="20180427 15:49:41.462" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:41.462" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<msg timestamp="20180427 15:49:41.462" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:41.462" starttime="20180427 15:49:41.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.463" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.464" starttime="20180427 15:49:41.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.464" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:41.464" starttime="20180427 15:49:41.464"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:41.465" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.465" starttime="20180427 15:49:41.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:41.466" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.466" starttime="20180427 15:49:41.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.467" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.467" starttime="20180427 15:49:41.467"></status>
</kw>
<msg timestamp="20180427 15:49:41.468" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.468" starttime="20180427 15:49:41.424"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:49:41.469" level="INFO">3 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:41.469" level="INFO">${Value} =             "Quality": "0",
            "Quality": "0",
            "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:49:41.469" starttime="20180427 15:49:41.468"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:49:41.470" level="INFO">@{rKeyValueList} = [             "Quality": "0", |             "Quality": "0", |             "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:49:41.470" starttime="20180427 15:49:41.469"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.471" level="INFO">            "Quality": "0",</msg>
<msg timestamp="20180427 15:49:41.471" level="INFO">            "Quality": "0",</msg>
<msg timestamp="20180427 15:49:41.471" level="INFO">            "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:49:41.471" starttime="20180427 15:49:41.470"></status>
</kw>
<msg timestamp="20180427 15:49:41.471" level="INFO">@{rKeyValueList} = [             "Quality": "0", |             "Quality": "0", |             "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:49:41.471" starttime="20180427 15:49:41.422"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =             &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:41.474" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:49:41.474" starttime="20180427 15:49:41.473"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.475" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.475" starttime="20180427 15:49:41.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.475" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.476" starttime="20180427 15:49:41.475"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.476" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.477" starttime="20180427 15:49:41.476"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.477" starttime="20180427 15:49:41.473"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:41.477" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:49:41.477" starttime="20180427 15:49:41.477"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.478" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.478" starttime="20180427 15:49:41.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.479" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.479" starttime="20180427 15:49:41.478"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.479" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.480" starttime="20180427 15:49:41.479"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.480" starttime="20180427 15:49:41.477"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:41.480" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:49:41.480" starttime="20180427 15:49:41.480"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.481" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.481" starttime="20180427 15:49:41.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.482" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.482" starttime="20180427 15:49:41.482"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.483" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.483" starttime="20180427 15:49:41.482"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.483" starttime="20180427 15:49:41.480"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.483" starttime="20180427 15:49:41.472"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.483" starttime="20180427 15:49:41.472"></status>
</kw>
<kw name="Check Alignmerger Status" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</arg>
<arg>"Status"</arg>
<arg>1</arg>
<arg>2</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${alignment status}</var>
</assign>
<msg timestamp="20180427 15:49:41.486" level="INFO">${alignment status} = []</msg>
<status status="PASS" endtime="20180427 15:49:41.486" starttime="20180427 15:49:41.484"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:41.487" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json']</msg>
<status status="PASS" endtime="20180427 15:49:41.487" starttime="20180427 15:49:41.487"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:41.487" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:41.488" starttime="20180427 15:49:41.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.488" starttime="20180427 15:49:41.488"></status>
</kw>
<msg timestamp="20180427 15:49:41.488" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</msg>
<status status="PASS" endtime="20180427 15:49:41.489" starttime="20180427 15:49:41.488"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:41.489" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json'.</msg>
<msg timestamp="20180427 15:49:41.519" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:41.519" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<msg timestamp="20180427 15:49:41.519" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:41.519" starttime="20180427 15:49:41.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.520" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.520" starttime="20180427 15:49:41.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.520" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:41.520" starttime="20180427 15:49:41.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:41.521" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.521" starttime="20180427 15:49:41.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:41.521" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.521" starttime="20180427 15:49:41.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.521" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.522" starttime="20180427 15:49:41.521"></status>
</kw>
<msg timestamp="20180427 15:49:41.522" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.522" starttime="20180427 15:49:41.486"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${lines}</var>
</assign>
<msg timestamp="20180427 15:49:41.522" level="INFO">2 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:41.522" level="INFO">${lines} =             "Status": "1",
            "Status": "1",</msg>
<status status="PASS" endtime="20180427 15:49:41.522" starttime="20180427 15:49:41.522"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lines}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${lines}</var>
</assign>
<msg timestamp="20180427 15:49:41.523" level="INFO">${lines} = [u'            "Status": "1",', u'            "Status": "1",']</msg>
<status status="PASS" endtime="20180427 15:49:41.523" starttime="20180427 15:49:41.523"></status>
</kw>
<kw type="for" name="${line} IN [ @{lines} ]">
<kw type="foritem" name="${line} =             &quot;Status&quot;: &quot;1&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:41.523" level="INFO">${words} = [u'"Status":', u'"1",']</msg>
<status status="PASS" endtime="20180427 15:49:41.524" starttime="20180427 15:49:41.523"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.524" level="INFO">${key} = [u'', u'1', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.524" starttime="20180427 15:49:41.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.524" level="INFO">[u'', u'1', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.524" starttime="20180427 15:49:41.524"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${alignment status}</arg>
<arg>${key[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.525" starttime="20180427 15:49:41.525"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.525" starttime="20180427 15:49:41.523"></status>
</kw>
<kw type="foritem" name="${line} =             &quot;Status&quot;: &quot;1&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:41.525" level="INFO">${words} = [u'"Status":', u'"1",']</msg>
<status status="PASS" endtime="20180427 15:49:41.525" starttime="20180427 15:49:41.525"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.526" level="INFO">${key} = [u'', u'1', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.526" starttime="20180427 15:49:41.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.526" level="INFO">[u'', u'1', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.526" starttime="20180427 15:49:41.526"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${alignment status}</arg>
<arg>${key[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.527" starttime="20180427 15:49:41.527"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.527" starttime="20180427 15:49:41.525"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.527" starttime="20180427 15:49:41.523"></status>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<arguments>
<arg>@{alignment status}</arg>
<arg>${pValue1}</arg>
<arg>${pValue2}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.527" starttime="20180427 15:49:41.527"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.528" starttime="20180427 15:49:41.483"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</arg>
<arg>"DivisionID"</arg>
<arg>${sForegroundDBMergerDivisionlist1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:49:41.528" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:49:41.528" starttime="20180427 15:49:41.528"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:41.529" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json']</msg>
<status status="PASS" endtime="20180427 15:49:41.529" starttime="20180427 15:49:41.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:41.530" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:41.530" starttime="20180427 15:49:41.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.531" starttime="20180427 15:49:41.531"></status>
</kw>
<msg timestamp="20180427 15:49:41.531" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</msg>
<status status="PASS" endtime="20180427 15:49:41.531" starttime="20180427 15:49:41.530"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:41.531" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json'.</msg>
<msg timestamp="20180427 15:49:41.586" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:41.586" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<msg timestamp="20180427 15:49:41.586" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:41.586" starttime="20180427 15:49:41.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.588" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.588" starttime="20180427 15:49:41.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.589" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:41.589" starttime="20180427 15:49:41.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:41.590" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.591" starttime="20180427 15:49:41.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:41.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.592" starttime="20180427 15:49:41.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.593" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.593" starttime="20180427 15:49:41.592"></status>
</kw>
<msg timestamp="20180427 15:49:41.594" level="INFO">${std_out} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.594" starttime="20180427 15:49:41.528"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:41.595" level="INFO">2 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:41.595" level="INFO">${division} =             "DivisionID": "1490154494078484481",
            "DivisionID": "1490154494078484482",</msg>
<status status="PASS" endtime="20180427 15:49:41.595" starttime="20180427 15:49:41.594"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.597" level="INFO">${key} = [u'            "DivisionID": "1490154494078484481",', u'            "DivisionID": "1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:49:41.597" starttime="20180427 15:49:41.596"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484481&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:41.599" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484481",']</msg>
<status status="PASS" endtime="20180427 15:49:41.599" starttime="20180427 15:49:41.598"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:41.600" level="INFO">${division} = [u'', u'1490154494078484481', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.600" starttime="20180427 15:49:41.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.602" level="INFO">1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:49:41.602" starttime="20180427 15:49:41.601"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.603" starttime="20180427 15:49:41.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.604" level="INFO">[u'1490154494078484481']</msg>
<status status="PASS" endtime="20180427 15:49:41.604" starttime="20180427 15:49:41.603"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.604" starttime="20180427 15:49:41.597"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484482&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:41.606" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:49:41.606" starttime="20180427 15:49:41.605"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:41.607" level="INFO">${division} = [u'', u'1490154494078484482', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.607" starttime="20180427 15:49:41.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.608" level="INFO">1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:49:41.609" starttime="20180427 15:49:41.608"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.610" starttime="20180427 15:49:41.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.611" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:49:41.611" starttime="20180427 15:49:41.610"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.611" starttime="20180427 15:49:41.605"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.611" starttime="20180427 15:49:41.597"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.612" starttime="20180427 15:49:41.612"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.613" starttime="20180427 15:49:41.528"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</arg>
<arg>"length"</arg>
<arg>${sForegroundDBMergerLength1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:49:41.615" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:49:41.615" starttime="20180427 15:49:41.614"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:41.617" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json']</msg>
<status status="PASS" endtime="20180427 15:49:41.617" starttime="20180427 15:49:41.616"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:41.618" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:41.618" starttime="20180427 15:49:41.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.620" starttime="20180427 15:49:41.619"></status>
</kw>
<msg timestamp="20180427 15:49:41.620" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json</msg>
<status status="PASS" endtime="20180427 15:49:41.620" starttime="20180427 15:49:41.618"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:41.621" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson/status-1520578465515-5.json'.</msg>
<msg timestamp="20180427 15:49:41.645" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:41.645" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<msg timestamp="20180427 15:49:41.645" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:41.645" starttime="20180427 15:49:41.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.646" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.646" starttime="20180427 15:49:41.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.647" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:41.647" starttime="20180427 15:49:41.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:41.647" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.647" starttime="20180427 15:49:41.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:41.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:41.648" starttime="20180427 15:49:41.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.648" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226305",
            "length": "116.854637",
            "toNodeID": "1490154495152226306"
        },
        {
            "DivisionID": "1490154494078484482",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fromNodeID": "1490154495152226306",
            "length": "115.893883",
            "toNodeID": "1490154495152226307"
        }
    ],
    "SnippetResultList": [
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090826_2017-07-31_T_19-18-48.508_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426090940_2017-08-04_T_15-50-15.183_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        },
        {
            "Quality": "0",
            "SnippetName": "/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426091104_2017-08-04_T_16-19-26.337_GMT_01.rtv_incr_slam.out00",
            "UptDivisionList": [
                "1490154494078484481",
                "1490154494078484482"
            ]
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:41.648" starttime="20180427 15:49:41.648"></status>
</kw>
<msg timestamp="20180427 15:49:41.648" level="INFO">${std_out} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "SegmentList": [
                "346953630"
            ],
            "Status": "1",
            "fro...</msg>
<status status="PASS" endtime="20180427 15:49:41.649" starttime="20180427 15:49:41.615"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:41.649" level="INFO">2 out of 50 lines matched</msg>
<msg timestamp="20180427 15:49:41.649" level="INFO">${division} =             "length": "116.854637",
            "length": "115.893883",</msg>
<status status="PASS" endtime="20180427 15:49:41.649" starttime="20180427 15:49:41.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:41.650" level="INFO">${key} = [u'            "length": "116.854637",', u'            "length": "115.893883",']</msg>
<status status="PASS" endtime="20180427 15:49:41.650" starttime="20180427 15:49:41.649"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;length&quot;: &quot;116.854637&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:41.651" level="INFO">${divisions} = [u'"length":', u'"116.854637",']</msg>
<status status="PASS" endtime="20180427 15:49:41.651" starttime="20180427 15:49:41.650"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:41.651" level="INFO">${division} = [u'', u'116.854637', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.651" starttime="20180427 15:49:41.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.652" level="INFO">116.854637</msg>
<status status="PASS" endtime="20180427 15:49:41.652" starttime="20180427 15:49:41.651"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.652" starttime="20180427 15:49:41.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.653" level="INFO">[u'116.854637']</msg>
<status status="PASS" endtime="20180427 15:49:41.653" starttime="20180427 15:49:41.653"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.653" starttime="20180427 15:49:41.650"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;length&quot;: &quot;115.893883&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:41.653" level="INFO">${divisions} = [u'"length":', u'"115.893883",']</msg>
<status status="PASS" endtime="20180427 15:49:41.653" starttime="20180427 15:49:41.653"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:41.654" level="INFO">${division} = [u'', u'115.893883', u',']</msg>
<status status="PASS" endtime="20180427 15:49:41.654" starttime="20180427 15:49:41.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.655" level="INFO">115.893883</msg>
<status status="PASS" endtime="20180427 15:49:41.655" starttime="20180427 15:49:41.654"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.655" starttime="20180427 15:49:41.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.656" level="INFO">[u'116.854637', u'115.893883']</msg>
<status status="PASS" endtime="20180427 15:49:41.656" starttime="20180427 15:49:41.655"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.656" starttime="20180427 15:49:41.653"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.656" starttime="20180427 15:49:41.650"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.656" starttime="20180427 15:49:41.656"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:41.657" starttime="20180427 15:49:41.613"></status>
</kw>
<doc>| Description | test normal foregroundDBMerger of align snippet |
| Input | 1.DB |
| | 2.input json |
| | 3.snippet |
| | 4.reference |
| Execute | call the command line to process foregroundDBMerger |
| Expect result | 1.output json |
| | 2.in output json, status,quality,divisionlist and length |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:49:41.657" critical="yes" starttime="20180427 15:49:24.449"></status>
</test>
<doc>| Description | test normal foregroundDBMerger of slam/align snippet |
| Input | 1.DB |
| | 2.input json |
| | 3.snippet |
| Execute | call the command line to process foregroundDBMerger |
| Expect result | 1.output json |
| | 2.in output json, status,quality,divisionlist and length |</doc>
<status status="PASS" endtime="20180427 15:49:41.657" starttime="20180427 15:49:07.893"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System/foregroundDBUpdater.txt" id="s1-s3-s2" name="foregroundDBUpdater">
<test id="s1-s3-s2-t1" name="Slam Updater">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.667" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:49:41.667" starttime="20180427 15:49:41.667"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:49:41.686" starttime="20180427 15:49:41.667"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:41.688" starttime="20180427 15:49:41.687"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:49:41.688" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:49:42.890" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:49:25 CST 2018

  System load:  1.22               Processes:           300
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:49:25 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:49:42.890" starttime="20180427 15:49:41.688"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:42.891" starttime="20180427 15:49:41.666"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:42.893" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:49:42.894" starttime="20180427 15:49:42.892"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:42.895" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:42.895" starttime="20180427 15:49:42.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:42.898" starttime="20180427 15:49:42.897"></status>
</kw>
<msg timestamp="20180427 15:49:42.898" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:49:42.898" starttime="20180427 15:49:42.896"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:42.899" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:49:42.914" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:42.915" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:42.915" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:42.915" starttime="20180427 15:49:42.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:42.916" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:42.917" starttime="20180427 15:49:42.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:42.918" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:42.918" starttime="20180427 15:49:42.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:42.919" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:42.919" starttime="20180427 15:49:42.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:42.921" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:42.921" starttime="20180427 15:49:42.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:42.923" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:42.923" starttime="20180427 15:49:42.922"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:42.924" starttime="20180427 15:49:42.891"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:42.926" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:49:42.927" starttime="20180427 15:49:42.925"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:42.928" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:42.929" starttime="20180427 15:49:42.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:42.932" starttime="20180427 15:49:42.931"></status>
</kw>
<msg timestamp="20180427 15:49:42.932" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:49:42.932" starttime="20180427 15:49:42.929"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:42.934" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:49:42.979" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:42.979" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:42.979" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:42.980" starttime="20180427 15:49:42.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:42.981" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:42.982" starttime="20180427 15:49:42.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:42.983" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:42.983" starttime="20180427 15:49:42.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:42.984" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:42.984" starttime="20180427 15:49:42.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:42.985" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:42.985" starttime="20180427 15:49:42.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:42.986" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:42.987" starttime="20180427 15:49:42.986"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:42.987" starttime="20180427 15:49:42.924"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:42.989" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:49:42.989" starttime="20180427 15:49:42.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:42.991" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:49:42.991" starttime="20180427 15:49:42.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:42.993" starttime="20180427 15:49:42.993"></status>
</kw>
<msg timestamp="20180427 15:49:42.994" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:49:42.994" starttime="20180427 15:49:42.991"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:42.995" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:49:43.040" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:43.041" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:43.041" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:43.041" starttime="20180427 15:49:42.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:43.043" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:43.043" starttime="20180427 15:49:43.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:43.044" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:43.044" starttime="20180427 15:49:43.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:43.046" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:43.046" starttime="20180427 15:49:43.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:43.047" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:43.047" starttime="20180427 15:49:43.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:43.048" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:43.049" starttime="20180427 15:49:43.048"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:43.049" starttime="20180427 15:49:42.987"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:49:43.050" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:49:43.095" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:49:43.096" starttime="20180427 15:49:43.049"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:43.099" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:49:43.099" starttime="20180427 15:49:43.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:43.101" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:49:43.101" starttime="20180427 15:49:43.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:43.103" starttime="20180427 15:49:43.103"></status>
</kw>
<msg timestamp="20180427 15:49:43.104" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:49:43.104" starttime="20180427 15:49:43.101"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:43.105" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:49:53.754" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:53.754" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:49:53.755" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:53.755" starttime="20180427 15:49:43.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:53.756" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 29658
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:49:53.756" starttime="20180427 15:49:53.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:53.758" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:53.758" starttime="20180427 15:49:53.757"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:53.759" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:49:53.759" starttime="20180427 15:49:53.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:53.760" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:53.761" starttime="20180427 15:49:53.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:53.762" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 29658
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:49:53.762" starttime="20180427 15:49:53.761"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:53.763" starttime="20180427 15:49:43.097"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:53.763" starttime="20180427 15:49:43.096"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:53.766" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:49:53.766" starttime="20180427 15:49:53.764"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:53.768" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:49:53.768" starttime="20180427 15:49:53.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:53.771" starttime="20180427 15:49:53.770"></status>
</kw>
<msg timestamp="20180427 15:49:53.771" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:49:53.771" starttime="20180427 15:49:53.768"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:53.772" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:49:53.818" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:53.818" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:49:53.818" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:53.818" starttime="20180427 15:49:53.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:53.820" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:49:53.820" starttime="20180427 15:49:53.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:53.821" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:53.821" starttime="20180427 15:49:53.821"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:53.823" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:49:53.823" starttime="20180427 15:49:53.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:53.824" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:53.824" starttime="20180427 15:49:53.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:53.825" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:49:53.825" starttime="20180427 15:49:53.825"></status>
</kw>
<msg timestamp="20180427 15:49:53.826" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:49:53.826" starttime="20180427 15:49:53.763"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:53.827" starttime="20180427 15:49:53.827"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:53.828" starttime="20180427 15:49:41.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:53.829" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:53.829" starttime="20180427 15:49:53.828"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/ForegroundDBUpdater/slam/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/ForegroundDBUpdater/slam/dbbak.sql</arg>
<arg>cp ${sfilefortest}/ForegroundDBUpdater/slam/foregroudDBUpdater-1490154494078484481-1524733111397.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:49:53.833" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:49:53.878" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:53.879" starttime="20180427 15:49:53.833"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:49:53.880" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:49:53.925" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:53.926" starttime="20180427 15:49:53.879"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:49:53.927" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:49:53.972" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:53.973" starttime="20180427 15:49:53.926"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:49:53.974" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:49:54.019" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.020" starttime="20180427 15:49:53.973"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:49:54.021" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:49:54.066" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.066" starttime="20180427 15:49:54.020"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:49:54.068" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:49:54.113" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.113" starttime="20180427 15:49:54.067"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:49:54.115" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:49:54.160" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.160" starttime="20180427 15:49:54.114"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:49:54.161" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:49:54.207" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.207" starttime="20180427 15:49:54.161"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:54.208" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:49:54.252" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.253" starttime="20180427 15:49:54.207"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:49:54.254" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:49:54.299" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.300" starttime="20180427 15:49:54.253"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:54.301" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:49:54.378" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.379" starttime="20180427 15:49:54.300"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:49:54.380" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:49:54.425" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.425" starttime="20180427 15:49:54.379"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:49:54.427" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:49:54.472" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.473" starttime="20180427 15:49:54.426"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:49:54.474" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:49:54.519" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:49:54.520" starttime="20180427 15:49:54.473"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:54.522" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/ForegroundDBUpdater/slam/WorkflowManager/*', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/']</msg>
<status status="PASS" endtime="20180427 15:49:54.522" starttime="20180427 15:49:54.521"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:54.523" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:49:54.523" starttime="20180427 15:49:54.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:54.525" starttime="20180427 15:49:54.524"></status>
</kw>
<msg timestamp="20180427 15:49:54.525" level="INFO">${cmd} = cp -r ~/autotest/filefortest/ForegroundDBUpdater/slam/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</msg>
<status status="PASS" endtime="20180427 15:49:54.525" starttime="20180427 15:49:54.523"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:54.526" level="INFO">Executing command 'cp -r ~/autotest/filefortest/ForegroundDBUpdater/slam/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/'.</msg>
<msg timestamp="20180427 15:49:54.580" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:54.581" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:54.581" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:54.581" starttime="20180427 15:49:54.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:54.582" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:54.582" starttime="20180427 15:49:54.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:54.582" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:54.583" starttime="20180427 15:49:54.582"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:54.583" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:54.583" starttime="20180427 15:49:54.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:54.584" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:54.584" starttime="20180427 15:49:54.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:54.584" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:54.584" starttime="20180427 15:49:54.584"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:54.584" starttime="20180427 15:49:54.520"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:54.585" starttime="20180427 15:49:53.832"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:54.586" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/ForegroundDBUpdater/slam/dbbak.sql'.</msg>
<msg timestamp="20180427 15:49:56.191" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:56.192" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:56.192" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:56.192" starttime="20180427 15:49:54.585"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:56.193" starttime="20180427 15:49:56.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:56.194" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:56.195" starttime="20180427 15:49:56.194"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:56.196" starttime="20180427 15:49:56.195"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:56.197" starttime="20180427 15:49:54.585"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:56.199" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/ForegroundDBUpdater/slam/foregroudDBUpdater-1490154494078484481-1524733111397.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdater...</msg>
<status status="PASS" endtime="20180427 15:49:56.199" starttime="20180427 15:49:56.198"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:56.201" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:49:56.201" starttime="20180427 15:49:56.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:56.204" starttime="20180427 15:49:56.203"></status>
</kw>
<msg timestamp="20180427 15:49:56.204" level="INFO">${cmd} = cp ~/autotest/filefortest/ForegroundDBUpdater/slam/foregroudDBUpdater-1490154494078484481-1524733111397.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/</msg>
<status status="PASS" endtime="20180427 15:49:56.204" starttime="20180427 15:49:56.201"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:56.205" level="INFO">Executing command 'cp ~/autotest/filefortest/ForegroundDBUpdater/slam/foregroudDBUpdater-1490154494078484481-1524733111397.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/'.</msg>
<msg timestamp="20180427 15:49:56.251" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:56.251" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:49:56.251" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:56.251" starttime="20180427 15:49:56.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:56.254" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:56.255" starttime="20180427 15:49:56.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:56.256" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:56.256" starttime="20180427 15:49:56.255"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:56.257" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:49:56.257" starttime="20180427 15:49:56.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:56.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:56.259" starttime="20180427 15:49:56.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:56.260" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:49:56.260" starttime="20180427 15:49:56.259"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:56.261" starttime="20180427 15:49:56.197"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:56.261" starttime="20180427 15:49:53.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:56.262" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:56.262" starttime="20180427 15:49:56.262"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/foregroundDBUpdater \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524733111397.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug \ --ojson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json \ --pcfg \ /opt/ygomi/roadDB/etc/config \ --model \ normal \ --manual \ --ol ${sOutput}/ForegroundDBUpdater</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:56.265" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/foregroundDBUpdater', u'', u'--ijson', u'', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524...</msg>
<status status="PASS" endtime="20180427 15:49:56.265" starttime="20180427 15:49:56.264"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:56.267" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/foregroundDBUpdater</msg>
<status status="PASS" endtime="20180427 15:49:56.267" starttime="20180427 15:49:56.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:56.270" starttime="20180427 15:49:56.269"></status>
</kw>
<msg timestamp="20180427 15:49:56.270" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524733111397.json  --d...</msg>
<status status="PASS" endtime="20180427 15:49:56.270" starttime="20180427 15:49:56.268"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:56.272" level="INFO">Executing command '/opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524733111397.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json  --pcfg  /opt/ygomi/roadDB/etc/config  --model  normal  --manual  --ol ~/autotest/output/ForegroundDBUpdater'.</msg>
<msg timestamp="20180427 15:49:59.789" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:59.792" level="INFO">${stdout} = [2018-04-27 15:49:56.935][foregroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [SYS] Log level: 0 (fo...</msg>
<msg timestamp="20180427 15:49:59.792" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:59.792" starttime="20180427 15:49:56.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.794" level="INFO">[2018-04-27 15:49:56.935][foregroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [SYS] Log level: 0 (foregroundDBUpdaterExecute.cpp:getForegroundDBUpdaterInput:237)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "Version": "1524733380010",
    "DBStamp": "1524733111397",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "3"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524733111397.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json  --pcfg  /opt/ygomi/roadDB/etc/config  --model  normal  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBUpdater   (otherFuns.h::410)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SYS] BackendDB Version: 104 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:118)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug/server_2018-04-27_15-49-56_30906 (DebugInfoPath.cpp::58)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] server init success. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:129)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] update reference is: 1524733380010 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:145)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] geoDivision id in severInput json are:  (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:149)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484481 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484482 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] -------------preparing backendData Transfer------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:162)
[2018-04-27 15:49:56.941][ForegroundDBUpdater][debug][30906] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:49:56.942][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.950][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.950][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.956][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.956][ForegroundDBUpdater][info][30906] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:49:56.956][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.965][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] -------------getting GeoDivision from backendDb------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:187)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][warning][30906] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.980][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.002][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.021][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][debug][30906] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][debug][30906] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][debug][30906] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][debug][30906] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:57.037][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:49:57.037][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:49:57.037][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SAM] Division:1490154494078484481read overlap:88 (ServerDbHelper.cpp::1186)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:57.067][ForegroundDBUpdater][info][30906] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:57.067][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.100][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.118][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][debug][30906] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][debug][30906] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][debug][30906] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][debug][30906] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][debug][30906] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][debug][30906] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:49:57.169][ForegroundDBUpdater][info][30906] [SAM] restore overlap:88 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] SecRefID4481-8130 have 31 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] SecRefID4481-8131 have 30 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] SecRefID4481-8129 have 24 anchorKF pairs TO SecRefID4482::8132 with conf: 9.872980118 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] str_id: fromCacheDB  end: 56997172  start: 56996966  total:206(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SYS] -------------updating division data------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:220)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:mergingFlow Beginning ### (AlgoServerOptimizerImp.cpp::147)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:BuildDivisionGraph Beginning ### (MergingManager.cpp::76)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] addEdge: new map (ServerDirectedGraph.cpp::579)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] create new tree:1 type:0 (ServerDirectedGraph.cpp::526)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:BuildDivisionGraph Ending ### (MergingManager.cpp::78)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] str_id: BuildDivisionGraph  end: 56997172  start: 56997172  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:OptimizedJudge Beginning ### (MergingManager.cpp::87)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] input domain with 2 divisions: , SecRefID4481-8129, SecRefID4482-8132 (OptimizationJudgment.cpp::58)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] min num of divisions with inc snippets in the 1st condition: 0 domain size:2 (OptimizationJudgment.cpp::90)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] not meet the 1st condition: num of inc snippet 0 &lt;= 0 (OptimizationJudgment.cpp::121)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] not meet the 2nd condition: num of inc snippet 0 &lt; 10 (OptimizationJudgment.cpp::181)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] not meet the 3rd condition: all divisions in the domain have been inter-optimized (OptimizationJudgment.cpp::250)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] min num of divisions without optimizition for a long time in the 4th condition: 0 (OptimizationJudgment.cpp::151)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30906] [SAM] meet the 4th condition: num of divisions without optimization 0 &gt;= 0 (OptimizationJudgment.cpp::154)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] ### Module:OptimizedJudge Ending ### (MergingManager.cpp::120)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] str_id: OptimizationJudgement  end: 56997173  start: 56997172  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] ### Module:Summarizing Beginning ### (MergingManager.cpp::128)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] SummarizeTask begin: GraphTree size:1 (SummarizingFlow.cpp::394)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30906] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] 30908 begin task: type[1] (ThreadPool.h::220)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30909] [SAM] 30909 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30909] [SAM] 30909 exit (ThreadPool.h::250)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] create a domain qa instance, including 2 division: 1490154494078484481-1490154494078484482- (SummarizingFlow.cpp::100)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129 have orgRefMPs number: 1708 (SummarizingFlow.cpp::150)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132 have orgRefMPs number: 1497 (SummarizingFlow.cpp::150)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] str_id: reserveInfoFormatchIncreMP  end: 56997173  start: 56997173  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] ref 1490154496225968129 has 0 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] neighbor Ref 1490154496225968132 has 0 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] 24 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:24 (InitSubGraph.cpp::182)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] orgAnchorKFs size:24, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:49:57.184][ForegroundDBUpdater][debug][30908] [SAM] match pair size on anchor KF is: 1115 (InitSubGraph.cpp::611)
[2018-04-27 15:49:57.300][ForegroundDBUpdater][info][30908] [SAM] mnBestInliers_:1115 inputPair:1115 mnIterations_:2000 mRansacMaxIts_:2000 collinear:11 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:49:57.300][ForegroundDBUpdater][debug][30908] [SAM] sim3 inlier number is: 1115 (InitSubGraph.cpp::778)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] translation =[ 0, 0, 0 ] (InitSubGraph.cpp::816)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] sumT =[ 0, 0, 0 ] (InitSubGraph.cpp::817)
[2018-04-27 15:49:57.305][ForegroundDBUpdater][debug][30908] [SAM] ---------mps 3d median:0 mean:0 var:0 (InitSubGraph.cpp::861)
[2018-04-27 15:49:57.305][ForegroundDBUpdater][debug][30908] [SAM] ---------mps height median:0 mean:0 var:0 (InitSubGraph.cpp::862)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:24 (InitSubGraph.cpp::955)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:0 Var:0 inler 3d meanDist:0 Var:0 (InitSubGraph.cpp::960)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] batchId:9248952813583597570 anchorKF height meanDist:0 Var:0 inler height meanDist:0 Var:0 (InitSubGraph.cpp::963)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] left anchor kfs size:24 (InitSubGraph.cpp::975)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] select anchor of ref, matchInliers:1115 anchorKfs:24 (InitSubGraph.cpp::426)
[2018-04-27 15:49:57.316][ForegroundDBUpdater][debug][30908] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][info][30908] [SAM] str_id: InitSubGraph  end: 56997317  start: 56997173  total:144(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][info][30908] [SAM] [SelectData] folder created  (MapTreeSummarizer.cpp::749)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129]average kf distance: 6.875283889, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] cluster done: 0,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484481 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132]average kf distance: 7.227970982, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] cluster done: 0,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484482 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] vertexs initialized (MapTreeSummarizer.cpp::778)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] 1 edges between 2 vertexs (MapTreeSummarizer.cpp::871)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [OG:4481-4482] anchor on ref, simple skip (MapTreeSummarizer.cpp::633)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] edge processed (MapTreeSummarizer.cpp::785)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] 0/0 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] 0/0 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] QA installed, nCoverage: 0.3655913978 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] QA installed, nCoverage: 0.4210526316 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] summarize done (MapTreeSummarizer.cpp::798)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][info][30908] [SAM] str_id: clusterLane  end: 56997318  start: 56997317  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] 
SecRefID4481-8129 OrgRef info: nKF: 41 nAKF: L4-R20 KFDistMean: 7.05 IncKFDistToSparse: 8.81
 (SparseIncKFs.cpp::136)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] 
SecRefID4482-8132 OrgRef info: nKF: 38 nAKF: L18-R6 KFDistMean: 7.42 IncKFDistToSparse: 9.28
 (SparseIncKFs.cpp::136)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] empty overlap (ServerOverlap.cpp::267)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: sparsifyKF  end: 56997319  start: 56997318  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] SecRefID4481-8129 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] SecRefID4482-8132 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: pickReferenceMP  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: matchIncrementMP  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129, total MP num: 1708, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129, total observation num: 8229, delete observation num: 0, left observation num: 8229 (ManageObservation.cpp::363)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132, total MP num: 1497, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132, total observation num: 6608, delete observation num: 0, left observation num: 6608 (ManageObservation.cpp::363)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: sparsifyObs  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is 0 (DeleteMovingMps.cpp::53)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is 0 (DeleteMovingMps.cpp::53)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: filterMovingMP  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] bEnableFCM is false, do not get into clustering process (SummarizingFlow.cpp::354)
[2018-04-27 15:49:57.324][ForegroundDBUpdater][debug][30908] [SAM] 30908 finish Task: type[1] (ThreadPool.h::228)
[2018-04-27 15:49:57.324][ForegroundDBUpdater][debug][30908] [SAM] 30908 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:49:57.324][ForegroundDBUpdater][debug][30908] [SAM] 30908 exit (ThreadPool.h::250)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30910] [SAM] 30910 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30910] [SAM] 30910 exit (ThreadPool.h::250)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30906] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] SummarizeTask Done:1 (SummarizingFlow.cpp::403)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] ### Module:Summarizing Ending ### (MergingManager.cpp::133)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30906] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] str_id: Summarizing  end: 56998175  start: 56997173  total:1002(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] ### Module:Merging Beginning ### (MergingManager.cpp::141)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] InterMergingTask begin: GraphTree size:1 (MergingFlow.cpp::285)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] 30945 begin task: type[2] (ThreadPool.h::220)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] ref 1490154496225968129 has 0 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] neighbor Ref 1490154496225968132 has 0 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] 24 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:24 (InitSubGraph.cpp::182)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] orgAnchorKFs size:24, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:49:59.185][ForegroundDBUpdater][debug][30945] [SAM] match pair size on anchor KF is: 1115 (InitSubGraph.cpp::611)
[2018-04-27 15:49:59.308][ForegroundDBUpdater][info][30945] [SAM] mnBestInliers_:1115 inputPair:1115 mnIterations_:2000 mRansacMaxIts_:2000 collinear:11 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:49:59.308][ForegroundDBUpdater][debug][30945] [SAM] sim3 inlier number is: 1115 (InitSubGraph.cpp::778)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] translation =[ 0, 0, 0 ] (InitSubGraph.cpp::816)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] sumT =[ 0, 0, 0 ] (InitSubGraph.cpp::817)
[2018-04-27 15:49:59.313][ForegroundDBUpdater][debug][30945] [SAM] ---------mps 3d median:0 mean:0 var:0 (InitSubGraph.cpp::861)
[2018-04-27 15:49:59.313][ForegroundDBUpdater][debug][30945] [SAM] ---------mps height median:0 mean:0 var:0 (InitSubGraph.cpp::862)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:24 (InitSubGraph.cpp::955)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:0 Var:0 inler 3d meanDist:0 Var:0 (InitSubGraph.cpp::960)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] batchId:9248952813583597570 anchorKF height meanDist:0 Var:0 inler height meanDist:0 Var:0 (InitSubGraph.cpp::963)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] left anchor kfs size:24 (InitSubGraph.cpp::975)
[2018-04-27 15:49:59.315][ForegroundDBUpdater][debug][30945] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:49:59.315][ForegroundDBUpdater][debug][30945] [SAM] select anchor of ref, matchInliers:1115 anchorKfs:24 (InitSubGraph.cpp::426)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC05D200, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC0012E0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC0012E0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC05D200, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC005830, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC0052D0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC0052D0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC005830, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][debug][30945] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][debug][30945] [SAM] save Graph: , 0xC624A0, SecID:4481, 1 (ServerVisualisation.cpp::160)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][info][30945] [SAM] str_id: initializeSubGraph  end: 56999325  start: 56999175  total:150(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.333][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.334][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.342][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][info][30945] [SAM] FORCE MERGING MODE! (InitConnection.cpp::47)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 dis = 0 (InitConnection.cpp::406)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] edgeT = 0, 0, 0 (InitConnection.cpp::416)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][info][30945] [SAM] before translation Averaging: (InitConnection.cpp::295)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][info][30945] [SAM] dis = 0 (InitConnection.cpp::299)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] before translationAveraging: sumDis = 0 (InitConnection.cpp::301)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] transAveraging sec: 1490154494078484481 -&gt; 1490154494078484482 -&gt; 
 (InitConnection.cpp::331)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] before optimization (OptimizeInterDivision.cpp::192)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] edge number: 1 (OptimizeInterDivision.cpp::193)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] chi2 = 0 (OptimizeInterDivision.cpp::200)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::205)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] after translation Averaging: (InitConnection.cpp::347)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 dis = 0 (InitConnection.cpp::406)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] edgeT = 0, 0, 0 (InitConnection.cpp::416)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] dis = 0 (InitConnection.cpp::354)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] after translationAveraging: sumDis = 0 (InitConnection.cpp::356)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] before InitConnection: Dist info:  (InitConnection.cpp::67)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 0 varKFDis: 0 meanMPDis: 0 varMPDis: 0 (InitConnection.cpp::96)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][info][30945] [SAM] connected section number is: 2 (InitConnection.cpp::103)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] before optimization (OptimizeInterDivision.cpp::336)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] edge number: 1 (OptimizeInterDivision.cpp::337)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] chi2 = 0 (OptimizeInterDivision.cpp::344)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::349)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][warning][30945] [SAM] can not find optSim3 of sec1490154494078484481 (InitConnection.cpp::213)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][warning][30945] [SAM] can not find optSim3 of sec1490154494078484482 (InitConnection.cpp::213)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM]  fix divisions: 1490154494078484481-&gt;1490154494078484482-&gt;
 (InitConnection.cpp::124)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] after InitConnection: Dist info:  (InitConnection.cpp::126)
[2018-04-27 15:49:59.348][ForegroundDBUpdater][debug][30945] [SAM] 1490154494078484481-&gt;1490154494078484482: AnchorKF num:24 meanKFDis: 0 varKFDis: 0 inlierNum: 1115 meanMPDis: 0 varMPDis: 0 (InitConnection.cpp::156)
[2018-04-27 15:49:59.357][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.358][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.366][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.367][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.367][ForegroundDBUpdater][info][30945] [SAM] str_id: InitConnection  end: 56999367  start: 56999325  total:42(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.377][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.379][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.389][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.390][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.406][ForegroundDBUpdater][info][30945] [SAM] ***** for division:SecRefID4482-8132, before opt, reproject err is:
#used map points = 1497
#bad  map points = 0
#observations    = 6608
total error = 4.14e+03
  min error = 0.0091
  max error = 3.38
  avg error = 0.626
#observations with reprojection error in [0, 1) = 5466 (82.7%)
#observations with reprojection error in [1, 2) = 994 (15%)
#observations with reprojection error in [2, 6) = 148 (2.24%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::230)
[2018-04-27 15:49:59.427][ForegroundDBUpdater][info][30945] [SAM] ***** for division:SecRefID4481-8129, before opt, reproject err is:
#used map points = 1708
#bad  map points = 0
#observations    = 8229
total error = 5.06e+03
  min error = 0.00441
  max error = 3.75
  avg error = 0.614
#observations with reprojection error in [0, 1) = 6885 (83.7%)
#observations with reprojection error in [1, 2) = 1176 (14.3%)
#observations with reprojection error in [2, 6) = 168 (2.04%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::230)
[2018-04-27 15:49:59.428][ForegroundDBUpdater][debug][30945] [SAM] batch id1 = 9248952813583597570 (OptimizeKeyFrame.cpp::265)
[2018-04-27 15:49:59.428][ForegroundDBUpdater][debug][30945] [SAM] batch id2 = 9248952813583597570 (OptimizeKeyFrame.cpp::266)
[2018-04-27 15:49:59.428][ForegroundDBUpdater][debug][30945] [SAM] before inter-division PGO: Dist info:  (OptimizeKeyFrame.cpp::51)
[2018-04-27 15:49:59.430][ForegroundDBUpdater][debug][30945] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 0 varKFDis: 0 meanMPDis: 0 varMPDis: 0 (OptimizeKeyFrame.cpp::72)
[2018-04-27 15:49:59.431][ForegroundDBUpdater][debug][30945] [SAM] group anchorkfs num:24 AnchorKFPairs size:24 (OptimizeInterDivision.cpp::486)
[2018-04-27 15:49:59.431][ForegroundDBUpdater][debug][30945] [SAM] ----inter division PGO init, Total Time : 0s (OptimizeInterDivision.cpp::1111)
[2018-04-27 15:49:59.432][ForegroundDBUpdater][debug][30945] [SAM] ---------add kf vertex, Total Time : 0s (OptimizeInterDivision.cpp::1120)
[2018-04-27 15:49:59.442][ForegroundDBUpdater][debug][30945] [SAM] before interSectionPGO, sum chi2 = 3.323653787e-07 (OptimizeInterDivision.cpp::1144)
[2018-04-27 15:49:59.442][ForegroundDBUpdater][debug][30945] [SAM] there is no error, no need to do interSectionPGO (OptimizeInterDivision.cpp::1147)
[2018-04-27 15:49:59.451][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.452][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.460][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.460][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.461][ForegroundDBUpdater][info][30945] [SAM] str_id: interDivisionPGO  end: 56999461  start: 56999367  total:94(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.469][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.470][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.478][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.478][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.479][ForegroundDBUpdater][info][30945] [SAM] FORCE MERGING MODE! (OptimizeOverlap.cpp::66)
[2018-04-27 15:49:59.479][ForegroundDBUpdater][info][30945] [SAM] optType=soft edge, value=2 (OptimizeOverlap.cpp::103)
[2018-04-27 15:49:59.499][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: before refBA is 0.6258687707, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: before refBA is 0.6142972072, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] getAnchorKFfAndInlierMpPairs (OptimizeOverlap.cpp::523)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] input setSec num:2 found overlaped edge num:1 (OptimizeOverlap.cpp::562)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] setAnchorKFPairs:24 setInlierMPPairs size:1115 (OptimizeOverlap.cpp::563)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] input fixedOverlaps num:0 used fixedOverlaps num:0 (OptimizeOverlap.cpp::668)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] fixedKFs:2 fixedMps:0 in head and tail (OptimizeOverlap.cpp::742)
[2018-04-27 15:49:59.522][ForegroundDBUpdater][info][30945] [SAM] Sec:4481---&gt;Sec:4482---&gt; (OptimizeOverlap.cpp::447)
[2018-04-27 15:49:59.522][ForegroundDBUpdater][info][30945] [SAM] depth:0 inputeSize:2 outputSize:2 (OptimizeOverlap.cpp::462)
[2018-04-27 15:49:59.522][ForegroundDBUpdater][info][30945] [SAM] visitedSec size:2 setSec size:2 setInlierMPPairs:1115 (OptimizeOverlap.cpp::494)
[2018-04-27 15:49:59.523][ForegroundDBUpdater][info][30945] [SAM] before inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:49:59.525][ForegroundDBUpdater][info][30945] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:24 meanKFDis:0 varKFDis:0 InlierMpNum:1115 meanMPDis:0 varMPDis:0 (OptimizeOverlap.cpp::218)
[2018-04-27 15:49:59.525][ForegroundDBUpdater][debug][30945] [SAM] global reference BA with fixed overlaps (OptimizeInterDivision.cpp::1191)
[2018-04-27 15:49:59.525][ForegroundDBUpdater][debug][30945] [SAM] setAllSec:2 setAnchorKFPairs:24 setInlierMPPairs:1115 fixedKFs:2 fixedMps:0 (OptimizeInterDivision.cpp::1192)
[2018-04-27 15:49:59.528][ForegroundDBUpdater][debug][30945] [SAM] vpKFs size:79 (OptimizeInterDivision.cpp::1264)
[2018-04-27 15:49:59.529][ForegroundDBUpdater][debug][30945] [SAM] vpMPs size:3205 (OptimizeInterDivision.cpp::1306)
[2018-04-27 15:49:59.529][ForegroundDBUpdater][debug][30945] [SAM] ---------get kfs and mps, Totle Time : 0.004524s (OptimizeInterDivision.cpp::1315)
[2018-04-27 15:49:59.530][ForegroundDBUpdater][debug][30945] [SAM] ---------add kf vertex, Totle Time : 8.4e-05s (OptimizeInterDivision.cpp::1355)
[2018-04-27 15:49:59.547][ForegroundDBUpdater][debug][30945] [SAM] ---------add mps vertex and edge, Totle Time : 0.016972s (OptimizeInterDivision.cpp::1428)
[2018-04-27 15:49:59.558][ForegroundDBUpdater][debug][30945] [SAM] ---------add inlier mp pair edge, Totle Time : 0.011104s (OptimizeInterDivision.cpp::1515)
[2018-04-27 15:49:59.558][ForegroundDBUpdater][debug][30945] [SAM] ---------add anchor kf pair edge, Totle Time : 7.7e-05s (OptimizeInterDivision.cpp::1543)
[2018-04-27 15:49:59.560][ForegroundDBUpdater][debug][30945] [SAM] before ref globalBA, sum chi2 = 15273.75367 edgeNum:25576 (OptimizeInterDivision.cpp::1572)
[2018-04-27 15:49:59.560][ForegroundDBUpdater][debug][30945] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeInterDivision.cpp::1573)
[2018-04-27 15:49:59.851][ForegroundDBUpdater][debug][30945] [SAM] after ref globalBA, sum chi2 = 13490.68051 edgeNum:25576 (OptimizeInterDivision.cpp::1602)
[2018-04-27 15:49:59.851][ForegroundDBUpdater][debug][30945] [SAM] ---------ref globalBA optimize, Totle Time : 0.292825s (OptimizeInterDivision.cpp::1605)
[2018-04-27 15:49:59.853][ForegroundDBUpdater][debug][30945] [SAM] ---------recove data, Totle Time : 0.002013s (OptimizeInterDivision.cpp::1642)
[2018-04-27 15:49:59.864][ForegroundDBUpdater][info][30945] [SAM] after inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:49:59.866][ForegroundDBUpdater][info][30945] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:24 meanKFDis:5.042634921e-09 varKFDis:1.224845486e-08 InlierMpNum:1115 meanMPDis:0.0003943614498 varMPDis:0.005721577751 (OptimizeOverlap.cpp::218)
[2018-04-27 15:49:59.884][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: after refBA is 0.5721216036, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.906][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: after refBA is 0.5808301551, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1708 total mps size = 1708
lateral Shift Mean = 1.0011, Variance  = 0.4839
longitudinal Shift Mean = 0.35587, Variance = 1.9136
altitude Shift Mean = 1.1113, Variance = 0.44991
XZ selfDirection Shift Mean = 0.14309, Variance = 0.11333
XYZ selfDirection Shift Mean = 0.17045, Variance = 0.11195
selfRotation Shift Mean  = 1.1232, Variance = 0.34365
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1708 total mps size = 1708
lateral Shift Mean = 0.9985, Variance  = 0.4841
longitudinal Shift Mean = 0.38758, Variance = 1.9081
altitude Shift Mean = 1.0811, Variance = 0.42215
XZ selfDirection Shift Mean = 0.24359, Variance = 0.19687
XYZ selfDirection Shift Mean = 0.38774, Variance = 0.24732
selfRotation Shift Mean  = 0.48486, Variance = 0.1773
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484481-refId:1490154496225968129
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:-0.0026179  Variance:0.00020408
change of longitudinal Shift Mean:0.031713  Variance:-0.0055019
change of altitude Shift Mean:-0.03019  Variance:-0.027762
change of XZ selfDirection Shift Mean:0.1005  Variance:0.083539
change of XYZ selfDirection Shift Mean:0.21729  Variance:0.13537
change of self Rotation Mean:-0.63839  Variance:-0.16634
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1497 total mps size = 1497
lateral Shift Mean = 1.4179, Variance  = 0.1724
longitudinal Shift Mean = 0.29208, Variance = 1.4208
altitude Shift Mean = 1.5566, Variance = 0.26971
XZ selfDirection Shift Mean = 0.079226, Variance = 0.063143
XYZ selfDirection Shift Mean = 0.11176, Variance = 0.070986
selfRotation Shift Mean  = 0.5241, Variance = 0.20123
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1497 total mps size = 1497
lateral Shift Mean = 1.4176, Variance  = 0.1817
longitudinal Shift Mean = 0.32061, Variance = 1.4169
altitude Shift Mean = 1.5259, Variance = 0.29317
XZ selfDirection Shift Mean = 0.19884, Variance = 0.15228
XYZ selfDirection Shift Mean = 0.36637, Variance = 0.21817
selfRotation Shift Mean  = 0.50008, Variance = 0.18041
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484482-refId:1490154496225968132
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:-0.00025816  Variance:0.0092917
change of longitudinal Shift Mean:0.028535  Variance:-0.0038974
change of altitude Shift Mean:-0.030709  Variance:0.023457
change of XZ selfDirection Shift Mean:0.11961  Variance:0.089133
change of XYZ selfDirection Shift Mean:0.25462  Variance:0.14718
change of self Rotation Mean:-0.024028  Variance:-0.020813
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:49:59.908][ForegroundDBUpdater][info][30945] [SAM] optimize overlap success (OptimizeOverlap.cpp::77)
[2018-04-27 15:49:59.916][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.917][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.925][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][info][30945] [SAM] str_id: optimizeOverlap  end: 56999926  start: 56999461  total:465(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][info][30945] [SAM] Add IntraMergingTask:2 (MergingFlow.cpp::172)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][debug][30945] [SAM] 30945 finish Task: type[2] (ThreadPool.h::228)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][debug][30948] [SAM] 30948 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:49:59.927][ForegroundDBUpdater][debug][30950] [SAM] 30950 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:49:59.927][ForegroundDBUpdater][debug][30948] [SAM] Ref batch: 9248952813583597570, ref kf number: 41 (KmlVisualisation.cpp::339)
[2018-04-27 15:49:59.927][ForegroundDBUpdater][debug][30950] [SAM] Ref batch: 9248952813583597570, ref kf number: 38 (KmlVisualisation.cpp::339)
[2018-04-27 15:49:59.935][ForegroundDBUpdater][warning][30950] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.936][ForegroundDBUpdater][warning][30950] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.936][ForegroundDBUpdater][warning][30948] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.937][ForegroundDBUpdater][warning][30948] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.992][ForegroundDBUpdater][debug][30950] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: before intraBA, is 0.5721216036, kf num:38 (UpdateDivision.cpp::245)
[2018-04-27 15:49:59.993][ForegroundDBUpdater][info][30950] [SAM] refKf batch size:1 incKf batch size:0 chi2ErrsBefore size:0 chi2ErrsAfter size:0 (UpdateDivision.cpp::151)
[2018-04-27 15:49:59.993][ForegroundDBUpdater][info][30950] [SAM] ---intra global BA for curr divsion:SecRefID4482-8132 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:00.006][ForegroundDBUpdater][debug][30948] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: before intraBA, is 0.5808301551, kf num:41 (UpdateDivision.cpp::245)
[2018-04-27 15:50:00.008][ForegroundDBUpdater][info][30948] [SAM] refKf batch size:1 incKf batch size:0 chi2ErrsBefore size:0 chi2ErrsAfter size:0 (UpdateDivision.cpp::151)
[2018-04-27 15:50:00.008][ForegroundDBUpdater][info][30948] [SAM] ---intra global BA for curr divsion:SecRefID4481-8129 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:00.011][ForegroundDBUpdater][debug][30950] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: after intraBA, is 0.5721216036, kf num:38 (UpdateDivision.cpp::245)
[2018-04-27 15:50:00.019][ForegroundDBUpdater][warning][30950] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:50:00.020][ForegroundDBUpdater][warning][30950] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:50:00.020][ForegroundDBUpdater][info][30950] [SAM] str_id: updateDivision  end: 57000020  start: 56999927  total:93(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.031][ForegroundDBUpdater][debug][30948] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: after intraBA, is 0.5808301551, kf num:41 (UpdateDivision.cpp::245)
[2018-04-27 15:50:00.038][ForegroundDBUpdater][info][30950] [SAM] ***** for division:SecRefID4482-8132, after opt, reproject err is:
#used map points = 1497
#bad  map points = 0
#observations    = 6608
total error = 3.78e+03
  min error = 1.26e-05
  max error = 3.54
  avg error = 0.572
#observations with reprojection error in [0, 1) = 5625 (85.1%)
#observations with reprojection error in [1, 2) = 909 (13.8%)
#observations with reprojection error in [2, 6) = 74 (1.12%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::64)
[2018-04-27 15:50:00.038][ForegroundDBUpdater][debug][30950] [SAM] 30950 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:00.041][ForegroundDBUpdater][warning][30948] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:50:00.042][ForegroundDBUpdater][warning][30948] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:50:00.042][ForegroundDBUpdater][info][30948] [SAM] str_id: updateDivision  end: 57000042  start: 56999927  total:115(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.061][ForegroundDBUpdater][info][30948] [SAM] ***** for division:SecRefID4481-8129, after opt, reproject err is:
#used map points = 1708
#bad  map points = 0
#observations    = 8229
total error = 4.78e+03
  min error = 2.59e-05
  max error = 3.4
  avg error = 0.581
#observations with reprojection error in [0, 1) = 6970 (84.7%)
#observations with reprojection error in [1, 2) = 1156 (14%)
#observations with reprojection error in [2, 6) = 103 (1.25%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::64)
[2018-04-27 15:50:00.061][ForegroundDBUpdater][debug][30948] [SAM] 30948 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30945] [SAM] 30945 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30945] [SAM] 30945 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30947] [SAM] 30947 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30946] [SAM] 30946 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30946] [SAM] 30946 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30947] [SAM] 30947 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] InterMergingTask Done (MergingFlow.cpp::307)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30949] [SAM] 30949 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30951] [SAM] 30951 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30950] [SAM] 30950 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30951] [SAM] 30951 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30950] [SAM] 30950 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30949] [SAM] 30949 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30948] [SAM] 30948 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30948] [SAM] 30948 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] IntraMergingTask Done:2 (MergingFlow.cpp::313)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] MergingFlow Done (MergingFlow.cpp::315)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] ### Module:Merging Ending ### (MergingManager.cpp::146)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] str_id: Merging  end: 57000176  start: 56998175  total:2001(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] ### Module:fillStatus Beginning ### (MergingManager.cpp::154)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC0012E0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC05ECC0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC05ECC0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC0012E0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC0052D0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC05D200, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC05D200, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC0052D0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0xC624A0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0xC7FEB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0xC7FEB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0xC624A0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][info][30906] [SAM] ### Module:fillStatus Ending ### (MergingManager.cpp::191)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][info][30906] [SAM] str_id: fillStatus  end: 57000177  start: 57000176  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] debug information: 1490154494078484481-&gt;1490154494078484482: orgRefAnchorKF num:24 AnchorKF num:24 inlierNum: 1115
 afterPre meanKFDis: 0        varKFDis: 0        meanMPDis: 0        varMPDis: 0       
 afterPgo meanKFDis: -1       varKFDis: -1       meanMPDis: -1       varMPDis: -1      
 afterOpt meanKFDis: 5.04263e-09 varKFDis: 1.22485e-08 meanMPDis: 0.000394361 varMPDis: 0.00572158 (MergingManager.cpp::252)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerOptimizerImp.cpp::132)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] SecRefID4481-8129 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:00.179][ForegroundDBUpdater][info][30906] [SAM] SecRefID4481-8129 replaced ref confidence:12.87298012 (RenewMap.cpp::214)
[2018-04-27 15:50:00.179][ForegroundDBUpdater][info][30906] [SAM] SecRefID4482-8132 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SAM] SecRefID4482-8132 replaced ref confidence:13.09060001 (RenewMap.cpp::214)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SAM] ### Module:renewGlobal Ending ### (AlgoServerOptimizerImp.cpp::139)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SAM] ### Module:mergingFlow Ending ### (AlgoServerOptimizerImp.cpp::161)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SYS] start to write backend DB (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:230)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SYS] manual mode(true) : beginTransaction ! generate TransactionID manually! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:234)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.187][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.187][ForegroundDBUpdater][debug][30906] [SYS] BackendData TransactionID: 3 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:50:00.191][ForegroundDBUpdater][info][30906] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:50:00.223][ForegroundDBUpdater][debug][30906] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:50:00.223][ForegroundDBUpdater][debug][30906] [SAM] Div:1490154494078484481  save overlaps:85 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:00.250][ForegroundDBUpdater][debug][30906] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:50:00.250][ForegroundDBUpdater][debug][30906] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] geoDivision count: 85 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] Updated division :1490154494078484481, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] Updated division :1490154494078484482, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:00.256][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.275][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.275][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.284][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.297][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] Division :1490154494078484481, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] Division :1490154494078484482, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] updated reference version:1524733380010 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision: 1490154494078484481 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 referenceID: 1490154496225968129 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 confidence: 12.87298012 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] updated reference version:1524733380010 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision: 1490154494078484482 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 referenceID: 1490154496225968132 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 confidence: 13.09060001 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:50:00.320][ForegroundDBUpdater][info][30906] [SAM] str_id: toCacheDB  end: 57000320  start: 57000191  total:129(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.320][ForegroundDBUpdater][info][30906] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:249)
[2018-04-27 15:50:00.320][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.352][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.352][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [COM] {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [SYS] end ForegroundDBUpdater run. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:277)
[2018-04-27 15:50:00.359][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:50:00.359][ForegroundDBUpdater][info][30906] [SYS] foregroundDBUpdater return ok, value:0, fwRet: 0 (foregroundDBUpdater.cpp:main:82)
[2018-04-27 15:50:00.359][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: main (foregroundDBUpdater.cpp::59)</msg>
<status status="PASS" endtime="20180427 15:49:59.799" starttime="20180427 15:49:59.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.800" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:59.800" starttime="20180427 15:49:59.799"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:59.804" level="INFO">${rStdout} = [2018-04-27 15:49:56.935][foregroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [SYS] Log level: 0 (fo...</msg>
<status status="PASS" endtime="20180427 15:49:59.804" starttime="20180427 15:49:59.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:59.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:59.805" starttime="20180427 15:49:59.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.807" level="INFO">[2018-04-27 15:49:56.935][foregroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [SYS] Log level: 0 (foregroundDBUpdaterExecute.cpp:getForegroundDBUpdaterInput:237)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:49:56.935][ForegroundDBUpdater][info][30906] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "Version": "1524733380010",
    "DBStamp": "1524733111397",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "3"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524733111397.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json  --pcfg  /opt/ygomi/roadDB/etc/config  --model  normal  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBUpdater   (otherFuns.h::410)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SYS] BackendDB Version: 104 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:118)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:49:56.936][ForegroundDBUpdater][info][30906] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug/server_2018-04-27_15-49-56_30906 (DebugInfoPath.cpp::58)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] server init success. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:129)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] update reference is: 1524733380010 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:145)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] geoDivision id in severInput json are:  (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:149)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484481 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484482 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:49:56.937][ForegroundDBUpdater][info][30906] [SYS] -------------preparing backendData Transfer------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:162)
[2018-04-27 15:49:56.941][ForegroundDBUpdater][debug][30906] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:49:56.942][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.950][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.950][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.956][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.956][ForegroundDBUpdater][info][30906] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:49:56.956][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.965][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] -------------getting GeoDivision from backendDb------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:187)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][warning][30906] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:56.966][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:56.980][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:56.981][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.002][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.021][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][debug][30906] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:57.035][ForegroundDBUpdater][debug][30906] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][debug][30906] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][debug][30906] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:57.036][ForegroundDBUpdater][info][30906] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:57.037][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:49:57.037][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:49:57.037][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SAM] Division:1490154494078484481read overlap:88 (ServerDbHelper.cpp::1186)
[2018-04-27 15:49:57.066][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:57.067][ForegroundDBUpdater][info][30906] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:49:57.067][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:49:57.079][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.100][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.118][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][debug][30906] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][debug][30906] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:49:57.134][ForegroundDBUpdater][info][30906] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 2 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][debug][30906] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:49:57.135][ForegroundDBUpdater][info][30906] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][debug][30906] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][debug][30906] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][debug][30906] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:49:57.165][ForegroundDBUpdater][info][30906] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:49:57.169][ForegroundDBUpdater][info][30906] [SAM] restore overlap:88 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] SecRefID4481-8130 have 31 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] SecRefID4481-8131 have 30 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] SecRefID4481-8129 have 24 anchorKF pairs TO SecRefID4482::8132 with conf: 9.872980118 (ServerDbHelper.cpp::1280)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] str_id: fromCacheDB  end: 56997172  start: 56996966  total:206(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SYS] -------------updating division data------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:220)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:mergingFlow Beginning ### (AlgoServerOptimizerImp.cpp::147)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:BuildDivisionGraph Beginning ### (MergingManager.cpp::76)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] addEdge: new map (ServerDirectedGraph.cpp::579)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] create new tree:1 type:0 (ServerDirectedGraph.cpp::526)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:BuildDivisionGraph Ending ### (MergingManager.cpp::78)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] str_id: BuildDivisionGraph  end: 56997172  start: 56997172  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][info][30906] [SAM] ### Module:OptimizedJudge Beginning ### (MergingManager.cpp::87)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] input domain with 2 divisions: , SecRefID4481-8129, SecRefID4482-8132 (OptimizationJudgment.cpp::58)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] min num of divisions with inc snippets in the 1st condition: 0 domain size:2 (OptimizationJudgment.cpp::90)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] not meet the 1st condition: num of inc snippet 0 &lt;= 0 (OptimizationJudgment.cpp::121)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] not meet the 2nd condition: num of inc snippet 0 &lt; 10 (OptimizationJudgment.cpp::181)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] not meet the 3rd condition: all divisions in the domain have been inter-optimized (OptimizationJudgment.cpp::250)
[2018-04-27 15:49:57.172][ForegroundDBUpdater][debug][30906] [SAM] min num of divisions without optimizition for a long time in the 4th condition: 0 (OptimizationJudgment.cpp::151)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30906] [SAM] meet the 4th condition: num of divisions without optimization 0 &gt;= 0 (OptimizationJudgment.cpp::154)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] ### Module:OptimizedJudge Ending ### (MergingManager.cpp::120)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] str_id: OptimizationJudgement  end: 56997173  start: 56997172  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] ### Module:Summarizing Beginning ### (MergingManager.cpp::128)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30906] [SAM] SummarizeTask begin: GraphTree size:1 (SummarizingFlow.cpp::394)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30906] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] 30908 begin task: type[1] (ThreadPool.h::220)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30909] [SAM] 30909 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30909] [SAM] 30909 exit (ThreadPool.h::250)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] create a domain qa instance, including 2 division: 1490154494078484481-1490154494078484482- (SummarizingFlow.cpp::100)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129 have orgRefMPs number: 1708 (SummarizingFlow.cpp::150)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132 have orgRefMPs number: 1497 (SummarizingFlow.cpp::150)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][info][30908] [SAM] str_id: reserveInfoFormatchIncreMP  end: 56997173  start: 56997173  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] ref 1490154496225968129 has 0 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] neighbor Ref 1490154496225968132 has 0 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] 24 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:24 (InitSubGraph.cpp::182)
[2018-04-27 15:49:57.173][ForegroundDBUpdater][debug][30908] [SAM] orgAnchorKFs size:24, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:49:57.184][ForegroundDBUpdater][debug][30908] [SAM] match pair size on anchor KF is: 1115 (InitSubGraph.cpp::611)
[2018-04-27 15:49:57.300][ForegroundDBUpdater][info][30908] [SAM] mnBestInliers_:1115 inputPair:1115 mnIterations_:2000 mRansacMaxIts_:2000 collinear:11 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:49:57.300][ForegroundDBUpdater][debug][30908] [SAM] sim3 inlier number is: 1115 (InitSubGraph.cpp::778)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] translation =[ 0, 0, 0 ] (InitSubGraph.cpp::816)
[2018-04-27 15:49:57.304][ForegroundDBUpdater][debug][30908] [SAM] sumT =[ 0, 0, 0 ] (InitSubGraph.cpp::817)
[2018-04-27 15:49:57.305][ForegroundDBUpdater][debug][30908] [SAM] ---------mps 3d median:0 mean:0 var:0 (InitSubGraph.cpp::861)
[2018-04-27 15:49:57.305][ForegroundDBUpdater][debug][30908] [SAM] ---------mps height median:0 mean:0 var:0 (InitSubGraph.cpp::862)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:24 (InitSubGraph.cpp::955)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:0 Var:0 inler 3d meanDist:0 Var:0 (InitSubGraph.cpp::960)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] batchId:9248952813583597570 anchorKF height meanDist:0 Var:0 inler height meanDist:0 Var:0 (InitSubGraph.cpp::963)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] left anchor kfs size:24 (InitSubGraph.cpp::975)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:49:57.307][ForegroundDBUpdater][debug][30908] [SAM] select anchor of ref, matchInliers:1115 anchorKfs:24 (InitSubGraph.cpp::426)
[2018-04-27 15:49:57.316][ForegroundDBUpdater][debug][30908] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][info][30908] [SAM] str_id: InitSubGraph  end: 56997317  start: 56997173  total:144(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][info][30908] [SAM] [SelectData] folder created  (MapTreeSummarizer.cpp::749)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129]average kf distance: 6.875283889, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] cluster done: 0,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484481 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132]average kf distance: 7.227970982, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] cluster done: 0,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484482 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] vertexs initialized (MapTreeSummarizer.cpp::778)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] 1 edges between 2 vertexs (MapTreeSummarizer.cpp::871)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [OG:4481-4482] anchor on ref, simple skip (MapTreeSummarizer.cpp::633)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] edge processed (MapTreeSummarizer.cpp::785)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:49:57.317][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] 0/0 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] 0/0 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4482:8132] QA installed, nCoverage: 0.3655913978 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [DJ:4481:8129] QA installed, nCoverage: 0.4210526316 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] [SelectData] [MTS: 0001] summarize done (MapTreeSummarizer.cpp::798)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][info][30908] [SAM] str_id: clusterLane  end: 56997318  start: 56997317  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][debug][30908] [SAM] 
SecRefID4481-8129 OrgRef info: nKF: 41 nAKF: L4-R20 KFDistMean: 7.05 IncKFDistToSparse: 8.81
 (SparseIncKFs.cpp::136)
[2018-04-27 15:49:57.318][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] 
SecRefID4482-8132 OrgRef info: nKF: 38 nAKF: L18-R6 KFDistMean: 7.42 IncKFDistToSparse: 9.28
 (SparseIncKFs.cpp::136)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] empty overlap (ServerOverlap.cpp::267)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: sparsifyKF  end: 56997319  start: 56997318  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] SecRefID4481-8129 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] SecRefID4482-8132 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: pickReferenceMP  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: matchIncrementMP  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129, total MP num: 1708, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129, total observation num: 8229, delete observation num: 0, left observation num: 8229 (ManageObservation.cpp::363)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4481-8129, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132, total MP num: 1497, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132, total observation num: 6608, delete observation num: 0, left observation num: 6608 (ManageObservation.cpp::363)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] SecRefID4482-8132, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: sparsifyObs  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is 0 (DeleteMovingMps.cpp::53)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is 0 (DeleteMovingMps.cpp::53)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][info][30908] [SAM] str_id: filterMovingMP  end: 56997319  start: 56997319  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:57.319][ForegroundDBUpdater][debug][30908] [SAM] bEnableFCM is false, do not get into clustering process (SummarizingFlow.cpp::354)
[2018-04-27 15:49:57.324][ForegroundDBUpdater][debug][30908] [SAM] 30908 finish Task: type[1] (ThreadPool.h::228)
[2018-04-27 15:49:57.324][ForegroundDBUpdater][debug][30908] [SAM] 30908 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:49:57.324][ForegroundDBUpdater][debug][30908] [SAM] 30908 exit (ThreadPool.h::250)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30910] [SAM] 30910 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30910] [SAM] 30910 exit (ThreadPool.h::250)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30906] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] SummarizeTask Done:1 (SummarizingFlow.cpp::403)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] ### Module:Summarizing Ending ### (MergingManager.cpp::133)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][debug][30906] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] str_id: Summarizing  end: 56998175  start: 56997173  total:1002(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] ### Module:Merging Beginning ### (MergingManager.cpp::141)
[2018-04-27 15:49:58.175][ForegroundDBUpdater][info][30906] [SAM] InterMergingTask begin: GraphTree size:1 (MergingFlow.cpp::285)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] 30945 begin task: type[2] (ThreadPool.h::220)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] ref 1490154496225968129 has 0 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] neighbor Ref 1490154496225968132 has 0 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] 24 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:24 (InitSubGraph.cpp::182)
[2018-04-27 15:49:59.175][ForegroundDBUpdater][debug][30945] [SAM] orgAnchorKFs size:24, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:49:59.185][ForegroundDBUpdater][debug][30945] [SAM] match pair size on anchor KF is: 1115 (InitSubGraph.cpp::611)
[2018-04-27 15:49:59.308][ForegroundDBUpdater][info][30945] [SAM] mnBestInliers_:1115 inputPair:1115 mnIterations_:2000 mRansacMaxIts_:2000 collinear:11 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:49:59.308][ForegroundDBUpdater][debug][30945] [SAM] sim3 inlier number is: 1115 (InitSubGraph.cpp::778)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] translation =[ 0, 0, 0 ] (InitSubGraph.cpp::816)
[2018-04-27 15:49:59.312][ForegroundDBUpdater][debug][30945] [SAM] sumT =[ 0, 0, 0 ] (InitSubGraph.cpp::817)
[2018-04-27 15:49:59.313][ForegroundDBUpdater][debug][30945] [SAM] ---------mps 3d median:0 mean:0 var:0 (InitSubGraph.cpp::861)
[2018-04-27 15:49:59.313][ForegroundDBUpdater][debug][30945] [SAM] ---------mps height median:0 mean:0 var:0 (InitSubGraph.cpp::862)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:24 (InitSubGraph.cpp::955)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:0 Var:0 inler 3d meanDist:0 Var:0 (InitSubGraph.cpp::960)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] batchId:9248952813583597570 anchorKF height meanDist:0 Var:0 inler height meanDist:0 Var:0 (InitSubGraph.cpp::963)
[2018-04-27 15:49:59.314][ForegroundDBUpdater][debug][30945] [SAM] left anchor kfs size:24 (InitSubGraph.cpp::975)
[2018-04-27 15:49:59.315][ForegroundDBUpdater][debug][30945] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:49:59.315][ForegroundDBUpdater][debug][30945] [SAM] select anchor of ref, matchInliers:1115 anchorKfs:24 (InitSubGraph.cpp::426)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC05D200, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC0012E0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC0012E0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC05D200, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC005830, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC0052D0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC0052D0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC005830, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:49:59.324][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][debug][30945] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][debug][30945] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][debug][30945] [SAM] save Graph: , 0xC624A0, SecID:4481, 1 (ServerVisualisation.cpp::160)
[2018-04-27 15:49:59.325][ForegroundDBUpdater][info][30945] [SAM] str_id: initializeSubGraph  end: 56999325  start: 56999175  total:150(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.333][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.334][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.342][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][info][30945] [SAM] FORCE MERGING MODE! (InitConnection.cpp::47)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 dis = 0 (InitConnection.cpp::406)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][debug][30945] [SAM] edgeT = 0, 0, 0 (InitConnection.cpp::416)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][info][30945] [SAM] before translation Averaging: (InitConnection.cpp::295)
[2018-04-27 15:49:59.343][ForegroundDBUpdater][info][30945] [SAM] dis = 0 (InitConnection.cpp::299)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] before translationAveraging: sumDis = 0 (InitConnection.cpp::301)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] transAveraging sec: 1490154494078484481 -&gt; 1490154494078484482 -&gt; 
 (InitConnection.cpp::331)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] before optimization (OptimizeInterDivision.cpp::192)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] edge number: 1 (OptimizeInterDivision.cpp::193)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] chi2 = 0 (OptimizeInterDivision.cpp::200)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::205)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] after translation Averaging: (InitConnection.cpp::347)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] verify vertex sim3 dis = 0 (InitConnection.cpp::406)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] edgeT = 0, 0, 0 (InitConnection.cpp::416)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] dis = 0 (InitConnection.cpp::354)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][info][30945] [SAM] after translationAveraging: sumDis = 0 (InitConnection.cpp::356)
[2018-04-27 15:49:59.344][ForegroundDBUpdater][debug][30945] [SAM] before InitConnection: Dist info:  (InitConnection.cpp::67)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 0 varKFDis: 0 meanMPDis: 0 varMPDis: 0 (InitConnection.cpp::96)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][info][30945] [SAM] connected section number is: 2 (InitConnection.cpp::103)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] before optimization (OptimizeInterDivision.cpp::336)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] edge number: 1 (OptimizeInterDivision.cpp::337)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] chi2 = 0 (OptimizeInterDivision.cpp::344)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::349)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][warning][30945] [SAM] can not find optSim3 of sec1490154494078484481 (InitConnection.cpp::213)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][warning][30945] [SAM] can not find optSim3 of sec1490154494078484482 (InitConnection.cpp::213)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM]  fix divisions: 1490154494078484481-&gt;1490154494078484482-&gt;
 (InitConnection.cpp::124)
[2018-04-27 15:49:59.346][ForegroundDBUpdater][debug][30945] [SAM] after InitConnection: Dist info:  (InitConnection.cpp::126)
[2018-04-27 15:49:59.348][ForegroundDBUpdater][debug][30945] [SAM] 1490154494078484481-&gt;1490154494078484482: AnchorKF num:24 meanKFDis: 0 varKFDis: 0 inlierNum: 1115 meanMPDis: 0 varMPDis: 0 (InitConnection.cpp::156)
[2018-04-27 15:49:59.357][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.358][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.366][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.367][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.367][ForegroundDBUpdater][info][30945] [SAM] str_id: InitConnection  end: 56999367  start: 56999325  total:42(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.377][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.379][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.389][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.390][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.406][ForegroundDBUpdater][info][30945] [SAM] ***** for division:SecRefID4482-8132, before opt, reproject err is:
#used map points = 1497
#bad  map points = 0
#observations    = 6608
total error = 4.14e+03
  min error = 0.0091
  max error = 3.38
  avg error = 0.626
#observations with reprojection error in [0, 1) = 5466 (82.7%)
#observations with reprojection error in [1, 2) = 994 (15%)
#observations with reprojection error in [2, 6) = 148 (2.24%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::230)
[2018-04-27 15:49:59.427][ForegroundDBUpdater][info][30945] [SAM] ***** for division:SecRefID4481-8129, before opt, reproject err is:
#used map points = 1708
#bad  map points = 0
#observations    = 8229
total error = 5.06e+03
  min error = 0.00441
  max error = 3.75
  avg error = 0.614
#observations with reprojection error in [0, 1) = 6885 (83.7%)
#observations with reprojection error in [1, 2) = 1176 (14.3%)
#observations with reprojection error in [2, 6) = 168 (2.04%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::230)
[2018-04-27 15:49:59.428][ForegroundDBUpdater][debug][30945] [SAM] batch id1 = 9248952813583597570 (OptimizeKeyFrame.cpp::265)
[2018-04-27 15:49:59.428][ForegroundDBUpdater][debug][30945] [SAM] batch id2 = 9248952813583597570 (OptimizeKeyFrame.cpp::266)
[2018-04-27 15:49:59.428][ForegroundDBUpdater][debug][30945] [SAM] before inter-division PGO: Dist info:  (OptimizeKeyFrame.cpp::51)
[2018-04-27 15:49:59.430][ForegroundDBUpdater][debug][30945] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 0 varKFDis: 0 meanMPDis: 0 varMPDis: 0 (OptimizeKeyFrame.cpp::72)
[2018-04-27 15:49:59.431][ForegroundDBUpdater][debug][30945] [SAM] group anchorkfs num:24 AnchorKFPairs size:24 (OptimizeInterDivision.cpp::486)
[2018-04-27 15:49:59.431][ForegroundDBUpdater][debug][30945] [SAM] ----inter division PGO init, Total Time : 0s (OptimizeInterDivision.cpp::1111)
[2018-04-27 15:49:59.432][ForegroundDBUpdater][debug][30945] [SAM] ---------add kf vertex, Total Time : 0s (OptimizeInterDivision.cpp::1120)
[2018-04-27 15:49:59.442][ForegroundDBUpdater][debug][30945] [SAM] before interSectionPGO, sum chi2 = 3.323653787e-07 (OptimizeInterDivision.cpp::1144)
[2018-04-27 15:49:59.442][ForegroundDBUpdater][debug][30945] [SAM] there is no error, no need to do interSectionPGO (OptimizeInterDivision.cpp::1147)
[2018-04-27 15:49:59.451][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.452][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.460][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.460][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.461][ForegroundDBUpdater][info][30945] [SAM] str_id: interDivisionPGO  end: 56999461  start: 56999367  total:94(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.469][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.470][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.478][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.478][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.479][ForegroundDBUpdater][info][30945] [SAM] FORCE MERGING MODE! (OptimizeOverlap.cpp::66)
[2018-04-27 15:49:59.479][ForegroundDBUpdater][info][30945] [SAM] optType=soft edge, value=2 (OptimizeOverlap.cpp::103)
[2018-04-27 15:49:59.499][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: before refBA is 0.6258687707, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: before refBA is 0.6142972072, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] getAnchorKFfAndInlierMpPairs (OptimizeOverlap.cpp::523)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] input setSec num:2 found overlaped edge num:1 (OptimizeOverlap.cpp::562)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] setAnchorKFPairs:24 setInlierMPPairs size:1115 (OptimizeOverlap.cpp::563)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] input fixedOverlaps num:0 used fixedOverlaps num:0 (OptimizeOverlap.cpp::668)
[2018-04-27 15:49:59.521][ForegroundDBUpdater][info][30945] [SAM] fixedKFs:2 fixedMps:0 in head and tail (OptimizeOverlap.cpp::742)
[2018-04-27 15:49:59.522][ForegroundDBUpdater][info][30945] [SAM] Sec:4481---&gt;Sec:4482---&gt; (OptimizeOverlap.cpp::447)
[2018-04-27 15:49:59.522][ForegroundDBUpdater][info][30945] [SAM] depth:0 inputeSize:2 outputSize:2 (OptimizeOverlap.cpp::462)
[2018-04-27 15:49:59.522][ForegroundDBUpdater][info][30945] [SAM] visitedSec size:2 setSec size:2 setInlierMPPairs:1115 (OptimizeOverlap.cpp::494)
[2018-04-27 15:49:59.523][ForegroundDBUpdater][info][30945] [SAM] before inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:49:59.525][ForegroundDBUpdater][info][30945] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:24 meanKFDis:0 varKFDis:0 InlierMpNum:1115 meanMPDis:0 varMPDis:0 (OptimizeOverlap.cpp::218)
[2018-04-27 15:49:59.525][ForegroundDBUpdater][debug][30945] [SAM] global reference BA with fixed overlaps (OptimizeInterDivision.cpp::1191)
[2018-04-27 15:49:59.525][ForegroundDBUpdater][debug][30945] [SAM] setAllSec:2 setAnchorKFPairs:24 setInlierMPPairs:1115 fixedKFs:2 fixedMps:0 (OptimizeInterDivision.cpp::1192)
[2018-04-27 15:49:59.528][ForegroundDBUpdater][debug][30945] [SAM] vpKFs size:79 (OptimizeInterDivision.cpp::1264)
[2018-04-27 15:49:59.529][ForegroundDBUpdater][debug][30945] [SAM] vpMPs size:3205 (OptimizeInterDivision.cpp::1306)
[2018-04-27 15:49:59.529][ForegroundDBUpdater][debug][30945] [SAM] ---------get kfs and mps, Totle Time : 0.004524s (OptimizeInterDivision.cpp::1315)
[2018-04-27 15:49:59.530][ForegroundDBUpdater][debug][30945] [SAM] ---------add kf vertex, Totle Time : 8.4e-05s (OptimizeInterDivision.cpp::1355)
[2018-04-27 15:49:59.547][ForegroundDBUpdater][debug][30945] [SAM] ---------add mps vertex and edge, Totle Time : 0.016972s (OptimizeInterDivision.cpp::1428)
[2018-04-27 15:49:59.558][ForegroundDBUpdater][debug][30945] [SAM] ---------add inlier mp pair edge, Totle Time : 0.011104s (OptimizeInterDivision.cpp::1515)
[2018-04-27 15:49:59.558][ForegroundDBUpdater][debug][30945] [SAM] ---------add anchor kf pair edge, Totle Time : 7.7e-05s (OptimizeInterDivision.cpp::1543)
[2018-04-27 15:49:59.560][ForegroundDBUpdater][debug][30945] [SAM] before ref globalBA, sum chi2 = 15273.75367 edgeNum:25576 (OptimizeInterDivision.cpp::1572)
[2018-04-27 15:49:59.560][ForegroundDBUpdater][debug][30945] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeInterDivision.cpp::1573)
[2018-04-27 15:49:59.851][ForegroundDBUpdater][debug][30945] [SAM] after ref globalBA, sum chi2 = 13490.68051 edgeNum:25576 (OptimizeInterDivision.cpp::1602)
[2018-04-27 15:49:59.851][ForegroundDBUpdater][debug][30945] [SAM] ---------ref globalBA optimize, Totle Time : 0.292825s (OptimizeInterDivision.cpp::1605)
[2018-04-27 15:49:59.853][ForegroundDBUpdater][debug][30945] [SAM] ---------recove data, Totle Time : 0.002013s (OptimizeInterDivision.cpp::1642)
[2018-04-27 15:49:59.864][ForegroundDBUpdater][info][30945] [SAM] after inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:49:59.866][ForegroundDBUpdater][info][30945] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:24 meanKFDis:5.042634921e-09 varKFDis:1.224845486e-08 InlierMpNum:1115 meanMPDis:0.0003943614498 varMPDis:0.005721577751 (OptimizeOverlap.cpp::218)
[2018-04-27 15:49:59.884][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: after refBA is 0.5721216036, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.906][ForegroundDBUpdater][debug][30945] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: after refBA is 0.5808301551, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1708 total mps size = 1708
lateral Shift Mean = 1.0011, Variance  = 0.4839
longitudinal Shift Mean = 0.35587, Variance = 1.9136
altitude Shift Mean = 1.1113, Variance = 0.44991
XZ selfDirection Shift Mean = 0.14309, Variance = 0.11333
XYZ selfDirection Shift Mean = 0.17045, Variance = 0.11195
selfRotation Shift Mean  = 1.1232, Variance = 0.34365
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1708 total mps size = 1708
lateral Shift Mean = 0.9985, Variance  = 0.4841
longitudinal Shift Mean = 0.38758, Variance = 1.9081
altitude Shift Mean = 1.0811, Variance = 0.42215
XZ selfDirection Shift Mean = 0.24359, Variance = 0.19687
XYZ selfDirection Shift Mean = 0.38774, Variance = 0.24732
selfRotation Shift Mean  = 0.48486, Variance = 0.1773
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484481-refId:1490154496225968129
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:-0.0026179  Variance:0.00020408
change of longitudinal Shift Mean:0.031713  Variance:-0.0055019
change of altitude Shift Mean:-0.03019  Variance:-0.027762
change of XZ selfDirection Shift Mean:0.1005  Variance:0.083539
change of XYZ selfDirection Shift Mean:0.21729  Variance:0.13537
change of self Rotation Mean:-0.63839  Variance:-0.16634
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1497 total mps size = 1497
lateral Shift Mean = 1.4179, Variance  = 0.1724
longitudinal Shift Mean = 0.29208, Variance = 1.4208
altitude Shift Mean = 1.5566, Variance = 0.26971
XZ selfDirection Shift Mean = 0.079226, Variance = 0.063143
XYZ selfDirection Shift Mean = 0.11176, Variance = 0.070986
selfRotation Shift Mean  = 0.5241, Variance = 0.20123
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1497 total mps size = 1497
lateral Shift Mean = 1.4176, Variance  = 0.1817
longitudinal Shift Mean = 0.32061, Variance = 1.4169
altitude Shift Mean = 1.5259, Variance = 0.29317
XZ selfDirection Shift Mean = 0.19884, Variance = 0.15228
XYZ selfDirection Shift Mean = 0.36637, Variance = 0.21817
selfRotation Shift Mean  = 0.50008, Variance = 0.18041
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:49:59.907][ForegroundDBUpdater][info][30945] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484482-refId:1490154496225968132
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:-0.00025816  Variance:0.0092917
change of longitudinal Shift Mean:0.028535  Variance:-0.0038974
change of altitude Shift Mean:-0.030709  Variance:0.023457
change of XZ selfDirection Shift Mean:0.11961  Variance:0.089133
change of XYZ selfDirection Shift Mean:0.25462  Variance:0.14718
change of self Rotation Mean:-0.024028  Variance:-0.020813
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:49:59.908][ForegroundDBUpdater][info][30945] [SAM] optimize overlap success (OptimizeOverlap.cpp::77)
[2018-04-27 15:49:59.916][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.917][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.925][ForegroundDBUpdater][warning][30945] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][warning][30945] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][info][30945] [SAM] str_id: optimizeOverlap  end: 56999926  start: 56999461  total:465(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][info][30945] [SAM] Add IntraMergingTask:2 (MergingFlow.cpp::172)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][debug][30945] [SAM] 30945 finish Task: type[2] (ThreadPool.h::228)
[2018-04-27 15:49:59.926][ForegroundDBUpdater][debug][30948] [SAM] 30948 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:49:59.927][ForegroundDBUpdater][debug][30950] [SAM] 30950 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:49:59.927][ForegroundDBUpdater][debug][30948] [SAM] Ref batch: 9248952813583597570, ref kf number: 41 (KmlVisualisation.cpp::339)
[2018-04-27 15:49:59.927][ForegroundDBUpdater][debug][30950] [SAM] Ref batch: 9248952813583597570, ref kf number: 38 (KmlVisualisation.cpp::339)
[2018-04-27 15:49:59.935][ForegroundDBUpdater][warning][30950] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.936][ForegroundDBUpdater][warning][30950] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.936][ForegroundDBUpdater][warning][30948] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:49:59.937][ForegroundDBUpdater][warning][30948] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:49:59.992][ForegroundDBUpdater][debug][30950] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: before intraBA, is 0.5721216036, kf num:38 (UpdateDivision.cpp::245)
[2018-04-27 15:49:59.993][ForegroundDBUpdater][info][30950] [SAM] refKf batch size:1 incKf batch size:0 chi2ErrsBefore size:0 chi2ErrsAfter size:0 (UpdateDivision.cpp::151)
[2018-04-27 15:49:59.993][ForegroundDBUpdater][info][30950] [SAM] ---intra global BA for curr divsion:SecRefID4482-8132 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:00.006][ForegroundDBUpdater][debug][30948] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: before intraBA, is 0.5808301551, kf num:41 (UpdateDivision.cpp::245)
[2018-04-27 15:50:00.008][ForegroundDBUpdater][info][30948] [SAM] refKf batch size:1 incKf batch size:0 chi2ErrsBefore size:0 chi2ErrsAfter size:0 (UpdateDivision.cpp::151)
[2018-04-27 15:50:00.008][ForegroundDBUpdater][info][30948] [SAM] ---intra global BA for curr divsion:SecRefID4481-8129 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:00.011][ForegroundDBUpdater][debug][30950] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: after intraBA, is 0.5721216036, kf num:38 (UpdateDivision.cpp::245)
[2018-04-27 15:50:00.019][ForegroundDBUpdater][warning][30950] [SAM] INC-MPs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:50:00.020][ForegroundDBUpdater][warning][30950] [SAM] INC-KFs in RefID: 1490154496225968132 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:50:00.020][ForegroundDBUpdater][info][30950] [SAM] str_id: updateDivision  end: 57000020  start: 56999927  total:93(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.031][ForegroundDBUpdater][debug][30948] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: after intraBA, is 0.5808301551, kf num:41 (UpdateDivision.cpp::245)
[2018-04-27 15:50:00.038][ForegroundDBUpdater][info][30950] [SAM] ***** for division:SecRefID4482-8132, after opt, reproject err is:
#used map points = 1497
#bad  map points = 0
#observations    = 6608
total error = 3.78e+03
  min error = 1.26e-05
  max error = 3.54
  avg error = 0.572
#observations with reprojection error in [0, 1) = 5625 (85.1%)
#observations with reprojection error in [1, 2) = 909 (13.8%)
#observations with reprojection error in [2, 6) = 74 (1.12%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::64)
[2018-04-27 15:50:00.038][ForegroundDBUpdater][debug][30950] [SAM] 30950 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:00.041][ForegroundDBUpdater][warning][30948] [SAM] INC-MPs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::270)
[2018-04-27 15:50:00.042][ForegroundDBUpdater][warning][30948] [SAM] INC-KFs in RefID: 1490154496225968129 is empty (PanglVisualisation.cpp::104)
[2018-04-27 15:50:00.042][ForegroundDBUpdater][info][30948] [SAM] str_id: updateDivision  end: 57000042  start: 56999927  total:115(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.061][ForegroundDBUpdater][info][30948] [SAM] ***** for division:SecRefID4481-8129, after opt, reproject err is:
#used map points = 1708
#bad  map points = 0
#observations    = 8229
total error = 4.78e+03
  min error = 2.59e-05
  max error = 3.4
  avg error = 0.581
#observations with reprojection error in [0, 1) = 6970 (84.7%)
#observations with reprojection error in [1, 2) = 1156 (14%)
#observations with reprojection error in [2, 6) = 103 (1.25%)
#observations with reprojection error in [6,10) = 0 (0%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::64)
[2018-04-27 15:50:00.061][ForegroundDBUpdater][debug][30948] [SAM] 30948 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30945] [SAM] 30945 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30945] [SAM] 30945 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30947] [SAM] 30947 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30946] [SAM] 30946 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30946] [SAM] 30946 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30947] [SAM] 30947 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] InterMergingTask Done (MergingFlow.cpp::307)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30949] [SAM] 30949 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30951] [SAM] 30951 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30950] [SAM] 30950 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30951] [SAM] 30951 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30950] [SAM] 30950 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30949] [SAM] 30949 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30948] [SAM] 30948 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30948] [SAM] 30948 exit (ThreadPool.h::250)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] IntraMergingTask Done:2 (MergingFlow.cpp::313)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] MergingFlow Done (MergingFlow.cpp::315)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] ### Module:Merging Ending ### (MergingManager.cpp::146)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][debug][30906] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] str_id: Merging  end: 57000176  start: 56998175  total:2001(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.176][ForegroundDBUpdater][info][30906] [SAM] ### Module:fillStatus Beginning ### (MergingManager.cpp::154)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC0012E0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC05ECC0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC05ECC0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC0012E0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7F3DEC0052D0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7F3DEC05D200, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7F3DEC05D200, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7F3DEC0052D0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0xC624A0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0xC7FEB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0xC7FEB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][debug][30906] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0xC624A0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][info][30906] [SAM] ### Module:fillStatus Ending ### (MergingManager.cpp::191)
[2018-04-27 15:50:00.177][ForegroundDBUpdater][info][30906] [SAM] str_id: fillStatus  end: 57000177  start: 57000176  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] debug information: 1490154494078484481-&gt;1490154494078484482: orgRefAnchorKF num:24 AnchorKF num:24 inlierNum: 1115
 afterPre meanKFDis: 0        varKFDis: 0        meanMPDis: 0        varMPDis: 0       
 afterPgo meanKFDis: -1       varKFDis: -1       meanMPDis: -1       varMPDis: -1      
 afterOpt meanKFDis: 5.04263e-09 varKFDis: 1.22485e-08 meanMPDis: 0.000394361 varMPDis: 0.00572158 (MergingManager.cpp::252)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerOptimizerImp.cpp::132)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:50:00.178][ForegroundDBUpdater][info][30906] [SAM] SecRefID4481-8129 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:00.179][ForegroundDBUpdater][info][30906] [SAM] SecRefID4481-8129 replaced ref confidence:12.87298012 (RenewMap.cpp::214)
[2018-04-27 15:50:00.179][ForegroundDBUpdater][info][30906] [SAM] SecRefID4482-8132 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SAM] SecRefID4482-8132 replaced ref confidence:13.09060001 (RenewMap.cpp::214)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SAM] ### Module:renewGlobal Ending ### (AlgoServerOptimizerImp.cpp::139)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SAM] ### Module:mergingFlow Ending ### (AlgoServerOptimizerImp.cpp::161)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SYS] start to write backend DB (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:230)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SYS] manual mode(true) : beginTransaction ! generate TransactionID manually! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:234)
[2018-04-27 15:50:00.180][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.187][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.187][ForegroundDBUpdater][debug][30906] [SYS] BackendData TransactionID: 3 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:50:00.191][ForegroundDBUpdater][info][30906] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:50:00.223][ForegroundDBUpdater][debug][30906] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:50:00.223][ForegroundDBUpdater][debug][30906] [SAM] Div:1490154494078484481  save overlaps:85 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:00.250][ForegroundDBUpdater][debug][30906] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:50:00.250][ForegroundDBUpdater][debug][30906] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.253][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][info][30906] [SYS] geoDivision count: 85 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.254][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][debug][30906] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] Updated division :1490154494078484481, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] Updated division :1490154494078484482, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:00.255][ForegroundDBUpdater][info][30906] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:00.256][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.275][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.275][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.284][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.297][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] Division :1490154494078484481, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] Division :1490154494078484482, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] updated reference version:1524733380010 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision: 1490154494078484481 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 referenceID: 1490154496225968129 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 confidence: 12.87298012 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] updated reference version:1524733380010 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 geoDivision: 1490154494078484482 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 referenceID: 1490154496225968132 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SYS] 	 confidence: 13.09060001 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:00.319][ForegroundDBUpdater][info][30906] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:50:00.320][ForegroundDBUpdater][info][30906] [SAM] str_id: toCacheDB  end: 57000320  start: 57000191  total:129(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:00.320][ForegroundDBUpdater][info][30906] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:249)
[2018-04-27 15:50:00.320][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.352][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.352][ForegroundDBUpdater][info][30906] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [COM] {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:00.358][ForegroundDBUpdater][info][30906] [SYS] end ForegroundDBUpdater run. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:277)
[2018-04-27 15:50:00.359][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:50:00.359][ForegroundDBUpdater][info][30906] [SYS] foregroundDBUpdater return ok, value:0, fwRet: 0 (foregroundDBUpdater.cpp:main:82)
[2018-04-27 15:50:00.359][ForegroundDBUpdater][debug][30906] [SYS] LEAVE FUNCTION: main (foregroundDBUpdater.cpp::59)</msg>
<status status="PASS" endtime="20180427 15:49:59.812" starttime="20180427 15:49:59.806"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.812" starttime="20180427 15:49:56.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:49:59.813" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:49:59.813" starttime="20180427 15:49:59.813"></status>
</kw>
<kw name="Check Confidence" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json</arg>
</arguments>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:59.817" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json']</msg>
<status status="PASS" endtime="20180427 15:49:59.817" starttime="20180427 15:49:59.816"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:59.818" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:59.818" starttime="20180427 15:49:59.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.820" starttime="20180427 15:49:59.819"></status>
</kw>
<msg timestamp="20180427 15:49:59.820" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json</msg>
<status status="PASS" endtime="20180427 15:49:59.820" starttime="20180427 15:49:59.818"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:59.821" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json'.</msg>
<msg timestamp="20180427 15:49:59.845" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:59.845" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<msg timestamp="20180427 15:49:59.846" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:59.846" starttime="20180427 15:49:59.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.846" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:59.846" starttime="20180427 15:49:59.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.847" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:59.847" starttime="20180427 15:49:59.846"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:59.847" level="INFO">${rStdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:49:59.848" starttime="20180427 15:49:59.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:59.848" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:59.848" starttime="20180427 15:49:59.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.849" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:59.849" starttime="20180427 15:49:59.848"></status>
</kw>
<msg timestamp="20180427 15:49:59.849" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:49:59.849" starttime="20180427 15:49:59.815"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Confidence</arg>
</arguments>
<assign>
<var>${lines}</var>
</assign>
<msg timestamp="20180427 15:49:59.850" level="INFO">2 out of 16 lines matched</msg>
<msg timestamp="20180427 15:49:59.850" level="INFO">${lines} =             "Confidence": "12.872980",
            "Confidence": "13.090600",</msg>
<status status="PASS" endtime="20180427 15:49:59.850" starttime="20180427 15:49:59.850"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lines}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${lines}</var>
</assign>
<msg timestamp="20180427 15:49:59.851" level="INFO">${lines} = [u'            "Confidence": "12.872980",', u'            "Confidence": "13.090600",']</msg>
<status status="PASS" endtime="20180427 15:49:59.851" starttime="20180427 15:49:59.850"></status>
</kw>
<kw type="for" name="${line} IN [ @{lines} ]">
<kw type="foritem" name="${line} =             &quot;Confidence&quot;: &quot;12.872980&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:59.852" level="INFO">${words} = [u'"Confidence":', u'"12.872980",']</msg>
<status status="PASS" endtime="20180427 15:49:59.852" starttime="20180427 15:49:59.851"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${confidence}</var>
</assign>
<msg timestamp="20180427 15:49:59.853" level="INFO">${confidence} = [u'', u'12.872980', u',']</msg>
<status status="PASS" endtime="20180427 15:49:59.853" starttime="20180427 15:49:59.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${confidence}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.853" level="INFO">[u'', u'12.872980', u',']</msg>
<status status="PASS" endtime="20180427 15:49:59.853" starttime="20180427 15:49:59.853"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${confidence[1]}&gt;1</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.854" starttime="20180427 15:49:59.853"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.854" starttime="20180427 15:49:59.851"></status>
</kw>
<kw type="foritem" name="${line} =             &quot;Confidence&quot;: &quot;13.090600&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:49:59.855" level="INFO">${words} = [u'"Confidence":', u'"13.090600",']</msg>
<status status="PASS" endtime="20180427 15:49:59.855" starttime="20180427 15:49:59.854"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${confidence}</var>
</assign>
<msg timestamp="20180427 15:49:59.856" level="INFO">${confidence} = [u'', u'13.090600', u',']</msg>
<status status="PASS" endtime="20180427 15:49:59.856" starttime="20180427 15:49:59.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${confidence}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.856" level="INFO">[u'', u'13.090600', u',']</msg>
<status status="PASS" endtime="20180427 15:49:59.856" starttime="20180427 15:49:59.856"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${confidence[1]}&gt;1</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.857" starttime="20180427 15:49:59.856"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.857" starttime="20180427 15:49:59.854"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.857" starttime="20180427 15:49:59.851"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.857" starttime="20180427 15:49:59.814"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json</arg>
<arg>"DivisionID"</arg>
<arg>${sForegroudDbUpdaterDivisionlist1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:49:59.858" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:49:59.858" starttime="20180427 15:49:59.858"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:59.860" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json']</msg>
<status status="PASS" endtime="20180427 15:49:59.860" starttime="20180427 15:49:59.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:59.861" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:59.861" starttime="20180427 15:49:59.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.862" starttime="20180427 15:49:59.862"></status>
</kw>
<msg timestamp="20180427 15:49:59.862" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json</msg>
<status status="PASS" endtime="20180427 15:49:59.862" starttime="20180427 15:49:59.861"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:59.863" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json'.</msg>
<msg timestamp="20180427 15:49:59.901" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:59.901" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<msg timestamp="20180427 15:49:59.901" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:59.902" starttime="20180427 15:49:59.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.903" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:59.903" starttime="20180427 15:49:59.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.904" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:59.904" starttime="20180427 15:49:59.904"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:59.905" level="INFO">${rStdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:49:59.906" starttime="20180427 15:49:59.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:59.907" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:59.907" starttime="20180427 15:49:59.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.907" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:59.907" starttime="20180427 15:49:59.907"></status>
</kw>
<msg timestamp="20180427 15:49:59.907" level="INFO">${std_out} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:49:59.907" starttime="20180427 15:49:59.859"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:59.908" level="INFO">2 out of 16 lines matched</msg>
<msg timestamp="20180427 15:49:59.908" level="INFO">${division} =             "DivisionID": "1490154494078484481",
            "DivisionID": "1490154494078484482",</msg>
<status status="PASS" endtime="20180427 15:49:59.908" starttime="20180427 15:49:59.907"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:59.908" level="INFO">${key} = [u'            "DivisionID": "1490154494078484481",', u'            "DivisionID": "1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:49:59.908" starttime="20180427 15:49:59.908"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484481&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:59.909" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484481",']</msg>
<status status="PASS" endtime="20180427 15:49:59.909" starttime="20180427 15:49:59.909"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:59.909" level="INFO">${division} = [u'', u'1490154494078484481', u',']</msg>
<status status="PASS" endtime="20180427 15:49:59.909" starttime="20180427 15:49:59.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.910" level="INFO">1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:49:59.910" starttime="20180427 15:49:59.910"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.910" starttime="20180427 15:49:59.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.911" level="INFO">[u'1490154494078484481']</msg>
<status status="PASS" endtime="20180427 15:49:59.911" starttime="20180427 15:49:59.910"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.911" starttime="20180427 15:49:59.908"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484482&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:59.911" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:49:59.911" starttime="20180427 15:49:59.911"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:59.912" level="INFO">${division} = [u'', u'1490154494078484482', u',']</msg>
<status status="PASS" endtime="20180427 15:49:59.912" starttime="20180427 15:49:59.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.912" level="INFO">1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:49:59.912" starttime="20180427 15:49:59.912"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.913" starttime="20180427 15:49:59.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.913" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:49:59.913" starttime="20180427 15:49:59.913"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.913" starttime="20180427 15:49:59.911"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.913" starttime="20180427 15:49:59.908"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.913" starttime="20180427 15:49:59.913"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.914" starttime="20180427 15:49:59.857"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json</arg>
<arg>"ReferenceID"</arg>
<arg>${sForegroudDbUpdaterReference1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:49:59.914" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:49:59.914" starttime="20180427 15:49:59.914"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:49:59.915" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json']</msg>
<status status="PASS" endtime="20180427 15:49:59.915" starttime="20180427 15:49:59.915"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:49:59.916" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:49:59.916" starttime="20180427 15:49:59.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.917" starttime="20180427 15:49:59.916"></status>
</kw>
<msg timestamp="20180427 15:49:59.917" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json</msg>
<status status="PASS" endtime="20180427 15:49:59.917" starttime="20180427 15:49:59.916"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:49:59.917" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160610111913985-1520576619328.json'.</msg>
<msg timestamp="20180427 15:49:59.972" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:49:59.972" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<msg timestamp="20180427 15:49:59.973" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:49:59.973" starttime="20180427 15:49:59.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.974" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:59.974" starttime="20180427 15:49:59.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.975" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:49:59.976" starttime="20180427 15:49:59.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:49:59.977" level="INFO">${rStdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:49:59.977" starttime="20180427 15:49:59.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:49:59.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:49:59.978" starttime="20180427 15:49:59.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.979" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "13.090600",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524733380010",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:49:59.980" starttime="20180427 15:49:59.979"></status>
</kw>
<msg timestamp="20180427 15:49:59.980" level="INFO">${std_out} = {
    "DivisionVersionList": [
        {
            "Confidence": "12.872980",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524733380010",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:49:59.980" starttime="20180427 15:49:59.914"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:59.982" level="INFO">2 out of 16 lines matched</msg>
<msg timestamp="20180427 15:49:59.982" level="INFO">${division} =             "ReferenceID": "1490154496225968129"
            "ReferenceID": "1490154496225968132"</msg>
<status status="PASS" endtime="20180427 15:49:59.982" starttime="20180427 15:49:59.981"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:49:59.983" level="INFO">${key} = [u'            "ReferenceID": "1490154496225968129"', u'            "ReferenceID": "1490154496225968132"']</msg>
<status status="PASS" endtime="20180427 15:49:59.983" starttime="20180427 15:49:59.982"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;ReferenceID&quot;: &quot;1490154496225968129&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:59.985" level="INFO">${divisions} = [u'"ReferenceID":', u'"1490154496225968129"']</msg>
<status status="PASS" endtime="20180427 15:49:59.985" starttime="20180427 15:49:59.984"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:59.987" level="INFO">${division} = [u'', u'1490154496225968129', u'']</msg>
<status status="PASS" endtime="20180427 15:49:59.987" starttime="20180427 15:49:59.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.988" level="INFO">1490154496225968129</msg>
<status status="PASS" endtime="20180427 15:49:59.988" starttime="20180427 15:49:59.987"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.990" starttime="20180427 15:49:59.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.991" level="INFO">[u'1490154496225968129']</msg>
<status status="PASS" endtime="20180427 15:49:59.991" starttime="20180427 15:49:59.990"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.991" starttime="20180427 15:49:59.984"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;ReferenceID&quot;: &quot;1490154496225968132&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:49:59.992" level="INFO">${divisions} = [u'"ReferenceID":', u'"1490154496225968132"']</msg>
<status status="PASS" endtime="20180427 15:49:59.992" starttime="20180427 15:49:59.992"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:49:59.994" level="INFO">${division} = [u'', u'1490154496225968132', u'']</msg>
<status status="PASS" endtime="20180427 15:49:59.994" starttime="20180427 15:49:59.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.995" level="INFO">1490154496225968132</msg>
<status status="PASS" endtime="20180427 15:49:59.995" starttime="20180427 15:49:59.994"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.997" starttime="20180427 15:49:59.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:49:59.997" level="INFO">[u'1490154496225968129', u'1490154496225968132']</msg>
<status status="PASS" endtime="20180427 15:49:59.998" starttime="20180427 15:49:59.997"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.998" starttime="20180427 15:49:59.991"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.998" starttime="20180427 15:49:59.984"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:49:59.999" starttime="20180427 15:49:59.998"></status>
</kw>
<status status="PASS" endtime="20180427 15:49:59.999" starttime="20180427 15:49:59.914"></status>
</kw>
<doc>| Description | test normal foregroundDBUpdater of slam snippet |
| Input | 1.DB |
| | 2.input json |
| | 3.snippet |
| | 4.reference |
| Execute | call the command line to process foregroundDBUpdater |
| Expect result | 1.output json |
| | 2.in output json, divisionlist and referencelist |
| | 3.confidence |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:50:00.000" critical="yes" starttime="20180427 15:49:41.666"></status>
</test>
<test id="s1-s3-s2-t2" name="Align Updater">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:50:00.004" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:50:00.004" starttime="20180427 15:50:00.004"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:50:00.008" starttime="20180427 15:50:00.004"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:00.009" starttime="20180427 15:50:00.008"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:50:00.010" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:50:01.459" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

 System information disabled due to load higher than 4.0

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:49:42 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:50:01.459" starttime="20180427 15:50:00.009"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:01.460" starttime="20180427 15:50:00.003"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:01.462" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:01.462" starttime="20180427 15:50:01.461"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:01.464" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:01.464" starttime="20180427 15:50:01.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:01.468" starttime="20180427 15:50:01.467"></status>
</kw>
<msg timestamp="20180427 15:50:01.468" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:01.469" starttime="20180427 15:50:01.465"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:01.470" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:01.484" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:01.484" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:01.484" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:01.484" starttime="20180427 15:50:01.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.486" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:01.486" starttime="20180427 15:50:01.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.487" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:01.487" starttime="20180427 15:50:01.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:01.488" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:01.488" starttime="20180427 15:50:01.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:01.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:01.490" starttime="20180427 15:50:01.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.491" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:01.491" starttime="20180427 15:50:01.490"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:01.491" starttime="20180427 15:50:01.460"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:01.493" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:50:01.494" starttime="20180427 15:50:01.493"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:01.495" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:01.495" starttime="20180427 15:50:01.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:01.498" starttime="20180427 15:50:01.497"></status>
</kw>
<msg timestamp="20180427 15:50:01.498" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:50:01.498" starttime="20180427 15:50:01.496"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:01.499" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:50:01.545" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:01.546" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:01.546" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:01.546" starttime="20180427 15:50:01.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.547" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:01.547" starttime="20180427 15:50:01.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.548" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:01.549" starttime="20180427 15:50:01.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:01.550" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:01.550" starttime="20180427 15:50:01.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:01.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:01.551" starttime="20180427 15:50:01.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.552" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:01.553" starttime="20180427 15:50:01.552"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:01.553" starttime="20180427 15:50:01.492"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:01.555" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:01.556" starttime="20180427 15:50:01.554"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:01.557" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:01.557" starttime="20180427 15:50:01.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:01.560" starttime="20180427 15:50:01.559"></status>
</kw>
<msg timestamp="20180427 15:50:01.560" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:01.560" starttime="20180427 15:50:01.558"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:01.561" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:01.607" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:01.607" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:01.607" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:01.608" starttime="20180427 15:50:01.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.609" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:01.609" starttime="20180427 15:50:01.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.610" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:01.610" starttime="20180427 15:50:01.609"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:01.611" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:01.612" starttime="20180427 15:50:01.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:01.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:01.613" starttime="20180427 15:50:01.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:01.614" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:01.614" starttime="20180427 15:50:01.613"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:01.615" starttime="20180427 15:50:01.553"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:50:01.616" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:50:01.662" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:50:01.662" starttime="20180427 15:50:01.615"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:01.667" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:50:01.667" starttime="20180427 15:50:01.666"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:01.669" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:50:01.669" starttime="20180427 15:50:01.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:01.672" starttime="20180427 15:50:01.671"></status>
</kw>
<msg timestamp="20180427 15:50:01.672" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:50:01.672" starttime="20180427 15:50:01.670"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:01.673" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:50:13.798" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:13.798" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:50:13.799" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:13.799" starttime="20180427 15:50:01.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:13.800" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 32046
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:50:13.800" starttime="20180427 15:50:13.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:13.801" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:13.802" starttime="20180427 15:50:13.801"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:13.803" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:50:13.803" starttime="20180427 15:50:13.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:13.804" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:13.804" starttime="20180427 15:50:13.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:13.805" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 32046
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:50:13.806" starttime="20180427 15:50:13.805"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:13.806" starttime="20180427 15:50:01.665"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:13.807" starttime="20180427 15:50:01.663"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:13.809" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:50:13.809" starttime="20180427 15:50:13.808"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:13.811" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:50:13.811" starttime="20180427 15:50:13.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:13.813" starttime="20180427 15:50:13.812"></status>
</kw>
<msg timestamp="20180427 15:50:13.813" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:50:13.813" starttime="20180427 15:50:13.811"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:13.815" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:50:13.844" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:13.844" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:50:13.845" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:13.845" starttime="20180427 15:50:13.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:13.846" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:50:13.846" starttime="20180427 15:50:13.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:13.847" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:13.847" starttime="20180427 15:50:13.847"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:13.849" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:50:13.849" starttime="20180427 15:50:13.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:13.850" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:13.850" starttime="20180427 15:50:13.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:13.851" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:50:13.851" starttime="20180427 15:50:13.850"></status>
</kw>
<msg timestamp="20180427 15:50:13.852" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:50:13.852" starttime="20180427 15:50:13.807"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:13.853" starttime="20180427 15:50:13.853"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:13.854" starttime="20180427 15:50:00.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:13.855" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:13.855" starttime="20180427 15:50:13.854"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/ForegroundDBUpdater/align/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/ForegroundDBUpdater/align/dbbak.sql</arg>
<arg>cp ${sfilefortest}/ForegroundDBUpdater/align/foregroudDBUpdater-1490154494078484481-1524734320645.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:50:13.858" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:50:13.888" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:13.889" starttime="20180427 15:50:13.858"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:50:13.890" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:50:13.935" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:13.936" starttime="20180427 15:50:13.890"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:50:13.937" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:50:13.982" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:13.983" starttime="20180427 15:50:13.936"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:50:13.984" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:50:14.061" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.062" starttime="20180427 15:50:13.983"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:50:14.063" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:50:14.109" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.109" starttime="20180427 15:50:14.063"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:50:14.110" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:50:14.156" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.157" starttime="20180427 15:50:14.110"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:50:14.158" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:50:14.203" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.204" starttime="20180427 15:50:14.157"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:50:14.205" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:50:14.250" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.251" starttime="20180427 15:50:14.204"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:50:14.252" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:50:14.297" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.298" starttime="20180427 15:50:14.251"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:50:14.299" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:50:14.344" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.344" starttime="20180427 15:50:14.298"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:50:14.345" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:50:14.391" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.391" starttime="20180427 15:50:14.345"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:50:14.392" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:50:14.470" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.470" starttime="20180427 15:50:14.392"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:50:14.471" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:50:14.517" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.517" starttime="20180427 15:50:14.471"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:50:14.518" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:50:14.564" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:14.564" starttime="20180427 15:50:14.518"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:14.567" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/ForegroundDBUpdater/align/WorkflowManager/*', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/']</msg>
<status status="PASS" endtime="20180427 15:50:14.567" starttime="20180427 15:50:14.566"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:14.569" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:50:14.569" starttime="20180427 15:50:14.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:14.572" starttime="20180427 15:50:14.571"></status>
</kw>
<msg timestamp="20180427 15:50:14.572" level="INFO">${cmd} = cp -r ~/autotest/filefortest/ForegroundDBUpdater/align/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</msg>
<status status="PASS" endtime="20180427 15:50:14.572" starttime="20180427 15:50:14.570"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:14.574" level="INFO">Executing command 'cp -r ~/autotest/filefortest/ForegroundDBUpdater/align/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/'.</msg>
<msg timestamp="20180427 15:50:14.680" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:14.681" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:14.681" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:14.681" starttime="20180427 15:50:14.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:14.682" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:14.683" starttime="20180427 15:50:14.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:14.684" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:14.684" starttime="20180427 15:50:14.683"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:14.685" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:14.685" starttime="20180427 15:50:14.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:14.686" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:14.687" starttime="20180427 15:50:14.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:14.688" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:14.688" starttime="20180427 15:50:14.687"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:14.688" starttime="20180427 15:50:14.565"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:14.689" starttime="20180427 15:50:13.857"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:14.691" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/ForegroundDBUpdater/align/dbbak.sql'.</msg>
<msg timestamp="20180427 15:50:16.285" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:16.285" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:16.285" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:16.286" starttime="20180427 15:50:14.690"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:16.287" starttime="20180427 15:50:16.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:16.288" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:16.288" starttime="20180427 15:50:16.287"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:16.290" starttime="20180427 15:50:16.289"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:16.290" starttime="20180427 15:50:14.689"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:16.293" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/ForegroundDBUpdater/align/foregroudDBUpdater-1490154494078484481-1524734320645.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdate...</msg>
<status status="PASS" endtime="20180427 15:50:16.293" starttime="20180427 15:50:16.292"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:16.295" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:50:16.295" starttime="20180427 15:50:16.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:16.298" starttime="20180427 15:50:16.297"></status>
</kw>
<msg timestamp="20180427 15:50:16.298" level="INFO">${cmd} = cp ~/autotest/filefortest/ForegroundDBUpdater/align/foregroudDBUpdater-1490154494078484481-1524734320645.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/</msg>
<status status="PASS" endtime="20180427 15:50:16.298" starttime="20180427 15:50:16.296"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:16.299" level="INFO">Executing command 'cp ~/autotest/filefortest/ForegroundDBUpdater/align/foregroudDBUpdater-1490154494078484481-1524734320645.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/'.</msg>
<msg timestamp="20180427 15:50:16.345" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:16.345" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:16.346" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:16.346" starttime="20180427 15:50:16.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:16.347" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:16.347" starttime="20180427 15:50:16.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:16.348" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:16.349" starttime="20180427 15:50:16.348"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:16.350" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:16.350" starttime="20180427 15:50:16.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:16.351" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:16.351" starttime="20180427 15:50:16.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:16.352" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:16.352" starttime="20180427 15:50:16.352"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:16.353" starttime="20180427 15:50:16.291"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:16.353" starttime="20180427 15:50:13.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:16.354" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:16.354" starttime="20180427 15:50:16.354"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/foregroundDBUpdater \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524734320645.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug \ --ojson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json \ --pcfg \ /opt/ygomi/roadDB/etc/config \ --model \ normal \ --manual \ --ol ${sOutput}/ForegroundDBUpdater</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:16.357" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/foregroundDBUpdater', u'', u'--ijson', u'', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524...</msg>
<status status="PASS" endtime="20180427 15:50:16.357" starttime="20180427 15:50:16.356"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:16.359" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/foregroundDBUpdater</msg>
<status status="PASS" endtime="20180427 15:50:16.359" starttime="20180427 15:50:16.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:16.361" starttime="20180427 15:50:16.361"></status>
</kw>
<msg timestamp="20180427 15:50:16.362" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524734320645.json  --d...</msg>
<status status="PASS" endtime="20180427 15:50:16.362" starttime="20180427 15:50:16.359"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:16.363" level="INFO">Executing command '/opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524734320645.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json  --pcfg  /opt/ygomi/roadDB/etc/config  --model  normal  --manual  --ol ~/autotest/output/ForegroundDBUpdater'.</msg>
<msg timestamp="20180427 15:50:20.557" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:20.560" level="INFO">${stdout} = [2018-04-27 15:50:16.987][foregroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SYS] Log level: 0 (foregr...</msg>
<msg timestamp="20180427 15:50:20.560" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:20.560" starttime="20180427 15:50:16.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.561" level="INFO">[2018-04-27 15:50:16.987][foregroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SYS] Log level: 0 (foregroundDBUpdaterExecute.cpp:getForegroundDBUpdaterInput:237)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "Version": "1524734488488",
    "DBStamp": "1524734320645",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "5"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524734320645.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json  --pcfg  /opt/ygomi/roadDB/etc/config  --model  normal  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBUpdater   (otherFuns.h::410)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SYS] BackendDB Version: 104 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:118)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug/server_2018-04-27_15-50-16_905 (DebugInfoPath.cpp::58)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] server init success. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:129)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] update reference is: 1524734488488 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:145)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] geoDivision id in severInput json are:  (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:149)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484481 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484482 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] -------------preparing backendData Transfer------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:162)
[2018-04-27 15:50:16.992][ForegroundDBUpdater][debug][905] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:50:16.993][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.001][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.001][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.008][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.008][ForegroundDBUpdater][info][905] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:50:17.008][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] -------------getting GeoDivision from backendDb------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:187)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][warning][905] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.031][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.053][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.120][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.133][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][debug][905] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][debug][905] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][debug][905] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][debug][905] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:50:17.232][ForegroundDBUpdater][debug][905] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:50:17.232][ForegroundDBUpdater][debug][905] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:50:17.232][ForegroundDBUpdater][debug][905] [SAM] Division:1490154494078484481read overlap:192 (ServerDbHelper.cpp::1186)
[2018-04-27 15:50:17.233][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.233][ForegroundDBUpdater][info][905] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:50:17.234][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.269][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.322][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][debug][905] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][debug][905] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][debug][905] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:50:17.415][ForegroundDBUpdater][debug][905] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:50:17.415][ForegroundDBUpdater][debug][905] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][debug][905] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][info][905] [SAM] restore overlap:192 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][debug][905] [SAM] SecRefID4481-8130 have 29 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][debug][905] [SAM] SecRefID4481-8131 have 28 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][debug][905] [SAM] SecRefID4481-8129 have 132 anchorKF pairs TO SecRefID4482::8132 with conf: 12.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][info][905] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] str_id: fromCacheDB  end: 57017432  start: 57017017  total:415(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SYS] -------------updating division data------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:220)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:mergingFlow Beginning ### (AlgoServerOptimizerImp.cpp::147)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:BuildDivisionGraph Beginning ### (MergingManager.cpp::76)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] addEdge: new map (ServerDirectedGraph.cpp::579)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] create new tree:1 type:0 (ServerDirectedGraph.cpp::526)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:BuildDivisionGraph Ending ### (MergingManager.cpp::78)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] str_id: BuildDivisionGraph  end: 57017432  start: 57017432  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:OptimizedJudge Beginning ### (MergingManager.cpp::87)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] input domain with 2 divisions: , SecRefID4481-8129, SecRefID4482-8132 (OptimizationJudgment.cpp::58)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] min num of divisions with inc snippets in the 1st condition: 0 domain size:2 (OptimizationJudgment.cpp::90)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] meet the 1st condition: num of inc snippet 2 &gt; 0 (OptimizationJudgment.cpp::116)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:OptimizedJudge Ending ### (MergingManager.cpp::120)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] str_id: OptimizationJudgement  end: 57017432  start: 57017432  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:Summarizing Beginning ### (MergingManager.cpp::128)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] SummarizeTask begin: GraphTree size:1 (SummarizingFlow.cpp::394)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][907] [SAM] 907 begin task: type[1] (ThreadPool.h::220)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][907] [SAM] create a domain qa instance, including 2 division: 1490154494078484481-1490154494078484482- (SummarizingFlow.cpp::100)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129 have orgRefMPs number: 1708 (SummarizingFlow.cpp::150)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132 have orgRefMPs number: 1497 (SummarizingFlow.cpp::150)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][info][907] [SAM] str_id: reserveInfoFormatchIncreMP  end: 57017433  start: 57017432  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] ref 1490154496225968129 has 3 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] neighbor Ref 1490154496225968132 has 3 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] 132 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:132 (InitSubGraph.cpp::182)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] orgAnchorKFs size:132, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:50:17.441][ForegroundDBUpdater][debug][907] [SAM] match pair size on anchor KF is: 975 (InitSubGraph.cpp::611)
[2018-04-27 15:50:17.552][ForegroundDBUpdater][info][907] [SAM] mnBestInliers_:975 inputPair:975 mnIterations_:2000 mRansacMaxIts_:2000 collinear:20 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:50:17.552][ForegroundDBUpdater][debug][907] [SAM] sim3 inlier number is: 975 (InitSubGraph.cpp::778)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] translation =[ -1.136868377e-13, 5.684341886e-14, -2.273736754e-13 ] (InitSubGraph.cpp::816)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] sumT =[ 0.0001492857322, 3.763834635e-05, 9.327423878e-06 ] (InitSubGraph.cpp::817)
[2018-04-27 15:50:17.556][ForegroundDBUpdater][debug][907] [SAM] ---------mps 3d median:0 mean:0.0001773555947 var:0.003384680448 (InitSubGraph.cpp::861)
[2018-04-27 15:50:17.556][ForegroundDBUpdater][debug][907] [SAM] ---------mps height median:0 mean:4.48060647e-05 var:0.0009864349745 (InitSubGraph.cpp::862)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:22 (InitSubGraph.cpp::955)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:2.116999647e-09 Var:3.508070894e-09 inler 3d meanDist:0.0001773555947 Var:0.003384680448 (InitSubGraph.cpp::960)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] batchId:9248952813583597570 anchorKF height meanDist:1.704114022e-10 Var:1.539853348e-10 inler height meanDist:4.48060647e-05 Var:0.0009864349745 (InitSubGraph.cpp::963)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] left anchor kfs size:22 (InitSubGraph.cpp::975)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] select anchor of ref, matchInliers:975 anchorKfs:22 (InitSubGraph.cpp::426)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][info][907] [SAM] str_id: InitSubGraph  end: 57017569  start: 57017433  total:136(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][info][907] [SAM] [SelectData] folder created  (MapTreeSummarizer.cpp::749)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129]average kf distance: 6.875162226, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] cluster done: -0.00119687,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484481 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132]average kf distance: 7.225532264, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] cluster done: 0.0423072,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484482 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] vertexs initialized (MapTreeSummarizer.cpp::778)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] 1 edges between 2 vertexs (MapTreeSummarizer.cpp::871)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [OG:4481-4482] anchor on ref, simple skip (MapTreeSummarizer.cpp::633)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] edge processed (MapTreeSummarizer.cpp::785)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] select 9248952833850474498 which fills 41 blanks (MapTreeSummarizer.cpp::541)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] 1/3 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:50:17.577][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:50:17.577][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] select 9248952833850474499 which fills 41 blanks (MapTreeSummarizer.cpp::541)
[2018-04-27 15:50:17.577][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] 1/3 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] QA installed, nCoverage: 0.8064516129 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] QA installed, nCoverage: 0.8526315789 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] summarize done (MapTreeSummarizer.cpp::798)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][info][907] [SAM] str_id: clusterLane  end: 57017586  start: 57017569  total:17(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:50:17.629][ForegroundDBUpdater][debug][907] [SAM] 
SecRefID4481-8129 OrgRef info: nKF: 41 nAKF: L2-R20 KFDistMean: 7.05 IncKFDistToSparse: 8.81
SecRefID4481-8129   4499 info: nKF: 68 nAKF: L3-R33 KFDistMean: 4.06 nAllSparseKF: 35 nSparseAKF: L0-R18 --- nSetBadAllKF: 20 nSetBadAKF: 0
 (SparseIncKFs.cpp::136)
[2018-04-27 15:50:17.629][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][debug][907] [SAM] 
SecRefID4482-8132 OrgRef info: nKF: 38 nAKF: L16-R6 KFDistMean: 7.42 IncKFDistToSparse: 9.28
SecRefID4482-8132   4498 info: nKF: 67 nAKF: L33-R6 KFDistMean: 4.08 nAllSparseKF: 36 nSparseAKF: L18-R0 --- nSetBadAllKF: 36 nSetBadAKF: 18
 (SparseIncKFs.cpp::136)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] empty overlap (ServerOverlap.cpp::267)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] str_id: sparsifyKF  end: 57017670  start: 57017586  total:84(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][debug][907] [SAM] SecRefID4481-8129 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][debug][907] [SAM] SecRefID4482-8132 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] str_id: pickReferenceMP  end: 57017670  start: 57017670  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] The number of refMPs set bad: 25 [1.463700234 %] (SummarizingFlow.cpp::279)
[2018-04-27 15:50:17.674][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4481-8129 processing batch: 4499 (MatchIncrementMP.cpp::600)
[2018-04-27 15:50:17.682][ForegroundDBUpdater][info][907] [SAM] MPnum: 1680/1706 [2%] Isolated Point: 26  | 0s (MatchIncrementMP.cpp::748)
[2018-04-27 15:50:17.707][ForegroundDBUpdater][info][907] [SAM] MPnum: 1480/1680 [12%] minCubicMatch: 	360[22%] mergedIntoPoint: 160[10%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.721][ForegroundDBUpdater][info][907] [SAM] MPnum: 1473/1480 [1%] rayCubicMatch: 	14[1%] mergedIntoPoint: 7[1%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.753][ForegroundDBUpdater][info][907] [SAM] ------------- SecRefID4481-8129 processing all INC batchs (MatchIncrementMP.cpp::643)
[2018-04-27 15:50:17.772][ForegroundDBUpdater][info][907] [SAM] MPnum: 1457/1473 [2%] minCubicMatch: 	32[3%] mergedIntoPoint: 16[2%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.785][ForegroundDBUpdater][info][907] [SAM] MPnum: 1456/1457 [1%] rayCubicMatch: 	2[1%] mergedIntoPoint: 1[1%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.795][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4481-8129 add supplementaryMP for batch: 4499 (MatchIncrementMP.cpp::1058)
[2018-04-27 15:50:17.795][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] use ILP-lpsolve-Pruner to select this amount of MPs with Parameter: 70 40 100 (MatchIncrementMP.cpp::1060)
[2018-04-27 15:50:17.798][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the 1456 MP to 100 with 1128 MP which can not be pruned and with 110 as minimum observation number per KeyFrame (BasePruneMap.cpp::140)
[2018-04-27 15:50:17.802][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruner: Optimal solution of the ILP problem found. Objective= 12.71464957 (IlpPruneMap.cpp::148)
[2018-04-27 15:50:17.803][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the MP finished. Selected 1259 (86.46978022%) MP. (BasePruneMap.cpp::158)
[2018-04-27 15:50:17.803][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning: There was at least one KF with only 165 MP observations. (BasePruneMap.cpp::164)
[2018-04-27 15:50:17.805][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve
86.47% of MP have been selected.
There are 0 KF which are not sufficiently covered with Landmark observations.
0 map points failed the initial number of 1 observers.
0 candidate map points alreayd have been bad.
0 map points failed since their confidence is too low.
# KeyFrame coverage result (total) (dependent data: ratio of covered KF)
[    96,    170): 2 [ 22.2%] ************                            | dependent data avg: 1
[   170,    300): 7 [ 77.8%] ****************************************| dependent data avg: 1
Min= 164 Max= 222 Average= 191
# KeyFrame coverage result (self)
[    55,     96): 9 [  100%] ****************************************
Min= 70 Max= 76 Average= 71
# KeyFrame coverage result (other)
[    55,     96): 1 [ 11.1%] *****
[    96,    170): 8 [ 88.9%] ****************************************
Min= 94 Max= 152 Average= 120
# pruned observations per KF
(  -Inf,      1): 0 [    0%] 
[     1,      2): 1 [ 11.1%] **********
[     2,      3): 0 [    0%] 
[     3,      5): 0 [    0%] 
[     5,      8): 0 [    0%] 
[     8,     13): 0 [    0%] 
[    13,     22): 0 [    0%] 
[    22,     35): 1 [ 11.1%] **********
[    35,     58): 4 [ 44.4%] ****************************************
[    58,     97): 3 [ 33.3%] ******************************
[    97,    160): 0 [    0%] 
[   160,   +Inf): 0 [    0%] 
Min= 1 Max= 73 Average= 45.6
# MapPoint observers
(  -Inf,      1):    0 [    0%] 
[     1,      2):    0 [    0%] 
[     2,      3):  113 [ 8.98%] *******
[     3,      5):  702 [ 55.8%] ****************************************
[     5,      8):  308 [ 24.5%] ******************
[     8,     13):  111 [ 8.82%] *******
[    13,     22):   23 [ 1.83%] **
[    22,     35):    2 [0.159%] *
[    35,     58):    0 [    0%] 
[    58,     97):    0 [    0%] 
[    97,    160):    0 [    0%] 
[   160,   +Inf):    0 [    0%] 
Min= 2 Max= 23 Average= 4.6
# MapPoint track observations
[     1,      2): 1259 [  100%] ****************************************
Min= 1 Max= 1 Average= 1
 (PruneMap.cpp::228)
[2018-04-27 15:50:17.828][ForegroundDBUpdater][debug][907] [SAM] ****************************************************** (MatchIncrementMP.cpp::541)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP :1259 (MatchIncrementMP.cpp::560)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP selected :1259 (MatchIncrementMP.cpp::561)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] total number of merged MP :173 (MatchIncrementMP.cpp::563)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] ******************************************************** (MatchIncrementMP.cpp::566)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:50:17.831][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] The number of refMPs set bad: 15 [1.002004008 %] (SummarizingFlow.cpp::279)
[2018-04-27 15:50:17.833][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4482-8132 processing batch: 4498 (MatchIncrementMP.cpp::600)
[2018-04-27 15:50:17.839][ForegroundDBUpdater][info][907] [SAM] MPnum: 1189/1232 [4%] Isolated Point: 43  | 0s (MatchIncrementMP.cpp::748)
[2018-04-27 15:50:17.856][ForegroundDBUpdater][info][907] [SAM] MPnum: 1051/1189 [12%] minCubicMatch: 	247[21%] mergedIntoPoint: 109[10%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.866][ForegroundDBUpdater][info][907] [SAM] MPnum: 1050/1051 [1%] rayCubicMatch: 	2[1%] mergedIntoPoint: 1[1%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.892][ForegroundDBUpdater][info][907] [SAM] ------------- SecRefID4482-8132 processing all INC batchs (MatchIncrementMP.cpp::643)
[2018-04-27 15:50:17.903][ForegroundDBUpdater][info][907] [SAM] MPnum: 1025/1050 [3%] minCubicMatch: 	50[5%] mergedIntoPoint: 25[3%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.913][ForegroundDBUpdater][info][907] [SAM] MPnum: 1025/1025 [0%] rayCubicMatch: 	0[0%] mergedIntoPoint: 0[0%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.921][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4482-8132 add supplementaryMP for batch: 4498 (MatchIncrementMP.cpp::1058)
[2018-04-27 15:50:17.921][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] use ILP-lpsolve-Pruner to select this amount of MPs with Parameter: 70 40 100 (MatchIncrementMP.cpp::1060)
[2018-04-27 15:50:17.923][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the 1025 MP to 100 with 816 MP which can not be pruned and with 110 as minimum observation number per KeyFrame (BasePruneMap.cpp::140)
[2018-04-27 15:50:17.925][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruner: Optimal solution of the ILP problem found. Objective= 21.0286943 (IlpPruneMap.cpp::148)
[2018-04-27 15:50:17.925][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the MP finished. Selected 981 (95.70731707%) MP. (BasePruneMap.cpp::158)
[2018-04-27 15:50:17.925][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning: There was at least one KF with only 114 MP observations. (BasePruneMap.cpp::164)
[2018-04-27 15:50:17.926][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve
95.71% of MP have been selected.
There are 0 KF which are not sufficiently covered with Landmark observations.
0 map points failed the initial number of 1 observers.
0 candidate map points alreayd have been bad.
0 map points failed since their confidence is too low.
# KeyFrame coverage result (total) (dependent data: ratio of covered KF)
[    96,    170): 7 [ 77.8%] ****************************************| dependent data avg: 1
[   170,    300): 2 [ 22.2%] ************                            | dependent data avg: 1
Min= 114 Max= 179 Average= 153
# KeyFrame coverage result (self)
[    55,     96): 9 [  100%] ****************************************
Min= 58 Max= 80 Average= 69.2
# KeyFrame coverage result (other)
[    55,     96): 7 [ 77.8%] ****************************************
[    96,    170): 2 [ 22.2%] ************
Min= 56 Max= 109 Average= 84
# pruned observations per KF
(  -Inf,      1): 2 [ 22.2%] ********************
[     1,      2): 0 [    0%] 
[     2,      3): 0 [    0%] 
[     3,      5): 1 [ 11.1%] **********
[     5,      8): 0 [    0%] 
[     8,     13): 2 [ 22.2%] ********************
[    13,     22): 4 [ 44.4%] ****************************************
[    22,     35): 0 [    0%] 
[    35,     58): 0 [    0%] 
[    58,     97): 0 [    0%] 
[    97,    160): 0 [    0%] 
[   160,   +Inf): 0 [    0%] 
Min= 0 Max= 18 Average= 9.78
# MapPoint observers
(  -Inf,      1):   0 [    0%] 
[     1,      2):   0 [    0%] 
[     2,      3): 490 [ 49.9%] ****************************************
[     3,      5): 338 [ 34.5%] ****************************
[     5,      8): 104 [ 10.6%] *********
[     8,     13):  41 [ 4.18%] ****
[    13,     22):   8 [0.815%] *
[    22,     35):   0 [    0%] 
[    35,     58):   0 [    0%] 
[    58,     97):   0 [    0%] 
[    97,    160):   0 [    0%] 
[   160,   +Inf):   0 [    0%] 
Min= 2 Max= 17 Average= 3.24
# MapPoint track observations
[     1,      2): 981 [  100%] ****************************************
Min= 1 Max= 1 Average= 1
 (PruneMap.cpp::228)
[2018-04-27 15:50:17.944][ForegroundDBUpdater][debug][907] [SAM] ****************************************************** (MatchIncrementMP.cpp::541)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP :981 (MatchIncrementMP.cpp::560)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP selected :981 (MatchIncrementMP.cpp::561)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] total number of merged MP :127 (MatchIncrementMP.cpp::563)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] ******************************************************** (MatchIncrementMP.cpp::566)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] str_id: matchIncrementMP  end: 57017946  start: 57017670  total:276(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129, total MP num: 1683, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129, total observation num: 13762, delete observation num: 0, left observation num: 13762 (ManageObservation.cpp::363)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132, total MP num: 1482, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132, total observation num: 10013, delete observation num: 0, left observation num: 10013 (ManageObservation.cpp::363)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] str_id: sparsifyObs  end: 57017946  start: 57017946  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is 1 (DeleteMovingMps.cpp::53)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is 1 (DeleteMovingMps.cpp::53)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] str_id: filterMovingMP  end: 57017946  start: 57017946  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] bEnableFCM is false, do not get into clustering process (SummarizingFlow.cpp::354)
[2018-04-27 15:50:17.962][ForegroundDBUpdater][debug][907] [SAM] 907 finish Task: type[1] (ThreadPool.h::228)
[2018-04-27 15:50:17.963][ForegroundDBUpdater][debug][907] [SAM] 907 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:17.963][ForegroundDBUpdater][debug][907] [SAM] 907 exit (ThreadPool.h::250)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][908] [SAM] 908 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][908] [SAM] 908 exit (ThreadPool.h::250)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][909] [SAM] 909 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][909] [SAM] 909 exit (ThreadPool.h::250)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][905] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] SummarizeTask Done:1 (SummarizingFlow.cpp::403)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] ### Module:Summarizing Ending ### (MergingManager.cpp::133)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][905] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] str_id: Summarizing  end: 57018433  start: 57017432  total:1001(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] ### Module:Merging Beginning ### (MergingManager.cpp::141)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] InterMergingTask begin: GraphTree size:1 (MergingFlow.cpp::285)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] 942 begin task: type[2] (ThreadPool.h::220)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] ref 1490154496225968129 has 3 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] neighbor Ref 1490154496225968132 has 3 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] 22 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:22 (InitSubGraph.cpp::182)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] orgAnchorKFs size:22, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:50:19.443][ForegroundDBUpdater][debug][942] [SAM] match pair size on anchor KF is: 954 (InitSubGraph.cpp::611)
[2018-04-27 15:50:19.567][ForegroundDBUpdater][info][942] [SAM] mnBestInliers_:954 inputPair:954 mnIterations_:2000 mRansacMaxIts_:2000 collinear:14 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:50:19.567][ForegroundDBUpdater][debug][942] [SAM] sim3 inlier number is: 954 (InitSubGraph.cpp::778)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] translation =[ -1.136868377e-13, 5.684341886e-14, -1.136868377e-13 ] (InitSubGraph.cpp::816)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] sumT =[ 0.0001525718961, 3.846686341e-05, 9.53274453e-06 ] (InitSubGraph.cpp::817)
[2018-04-27 15:50:19.572][ForegroundDBUpdater][debug][942] [SAM] ---------mps 3d median:0 mean:0.0001812596487 var:0.003421627032 (InitSubGraph.cpp::861)
[2018-04-27 15:50:19.572][ForegroundDBUpdater][debug][942] [SAM] ---------mps height median:0 mean:4.579236173e-05 var:0.000997210219 (InitSubGraph.cpp::862)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:22 (InitSubGraph.cpp::955)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:2.116999647e-09 Var:3.508070894e-09 inler 3d meanDist:0.0001812596487 Var:0.003421627032 (InitSubGraph.cpp::960)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] batchId:9248952813583597570 anchorKF height meanDist:1.704114022e-10 Var:1.539853348e-10 inler height meanDist:4.579236173e-05 Var:0.000997210219 (InitSubGraph.cpp::963)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] left anchor kfs size:22 (InitSubGraph.cpp::975)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] select anchor of ref, matchInliers:954 anchorKfs:22 (InitSubGraph.cpp::426)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCCC050D90, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCCC050AB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCCC050AB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCCC050D90, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCCC0025F0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCCC0020F0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCCC0020F0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCCC0025F0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] save Graph: , 0x20F5F10, SecID:4481, 1 (ServerVisualisation.cpp::160)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][info][942] [SAM] str_id: initializeSubGraph  end: 57019584  start: 57019434  total:150(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] FORCE MERGING MODE! (InitConnection.cpp::47)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 dis = 0.0001576348828 (InitConnection.cpp::406)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] edgeT = 0.0001525718961, 3.846686341e-05, 9.53274453e-06 (InitConnection.cpp::416)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] before translation Averaging: (InitConnection.cpp::295)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] dis = 0.0001576348828 (InitConnection.cpp::299)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] before translationAveraging: sumDis = 0.0001576348828 (InitConnection.cpp::301)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] transAveraging sec: 1490154494078484481 -&gt; 1490154494078484482 -&gt; 
 (InitConnection.cpp::331)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] before optimization (OptimizeInterDivision.cpp::192)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] edge number: 1 (OptimizeInterDivision.cpp::193)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] chi2 = 2.484875627e-08 (OptimizeInterDivision.cpp::200)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::205)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] after translation Averaging: (InitConnection.cpp::347)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 dis = 0.0001576348828 (InitConnection.cpp::406)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] edgeT = 0.0001525718961, 3.846686341e-05, 9.53274453e-06 (InitConnection.cpp::416)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] dis = 0.0001576348828 (InitConnection.cpp::354)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] after translationAveraging: sumDis = 0.0001576348828 (InitConnection.cpp::356)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] before InitConnection: Dist info:  (InitConnection.cpp::67)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 2.116999647e-09 varKFDis: 3.508070894e-09 meanMPDis: 0.0001812596487 varMPDis: 0.003421627032 (InitConnection.cpp::96)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][info][942] [SAM] connected section number is: 2 (InitConnection.cpp::103)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] before optimization (OptimizeInterDivision.cpp::336)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] edge number: 1 (OptimizeInterDivision.cpp::337)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] chi2 = 0 (OptimizeInterDivision.cpp::344)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::349)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][warning][942] [SAM] can not find optSim3 of sec1490154494078484481 (InitConnection.cpp::213)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][warning][942] [SAM] can not find optSim3 of sec1490154494078484482 (InitConnection.cpp::213)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM]  fix divisions: 1490154494078484482-&gt;1490154494078484481-&gt;
 (InitConnection.cpp::124)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] after InitConnection: Dist info:  (InitConnection.cpp::126)
[2018-04-27 15:50:19.625][ForegroundDBUpdater][debug][942] [SAM] 1490154494078484481-&gt;1490154494078484482: AnchorKF num:22 meanKFDis: 2.116999647e-09 varKFDis: 3.508070894e-09 inlierNum: 954 meanMPDis: 0.0001812596487 varMPDis: 0.003421627032 (InitConnection.cpp::156)
[2018-04-27 15:50:19.661][ForegroundDBUpdater][info][942] [SAM] str_id: InitConnection  end: 57019661  start: 57019584  total:77(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:19.729][ForegroundDBUpdater][info][942] [SAM] ***** for division:SecRefID4482-8132, before opt, reproject err is:
#used map points = 2463
#bad  map points = 0
#observations    = 13191
total error = 1.09e+04
  min error = 1.26e-05
  max error = 11.1
  avg error = 0.827
#observations with reprojection error in [0, 1) = 9242 (70.1%)
#observations with reprojection error in [1, 2) = 3035 (23%)
#observations with reprojection error in [2, 6) = 912 (6.91%)
#observations with reprojection error in [6,10) = 1 (0.00758%)
#observations with reprojection error &gt;= 10     = 1 (0.00758%) (MergingFlow.cpp::230)
[2018-04-27 15:50:19.777][ForegroundDBUpdater][info][942] [SAM] ***** for division:SecRefID4481-8129, before opt, reproject err is:
#used map points = 2942
#bad  map points = 0
#observations    = 19549
total error = 1.74e+04
  min error = 2.59e-05
  max error = 19.2
  avg error = 0.888
#observations with reprojection error in [0, 1) = 13065 (66.8%)
#observations with reprojection error in [1, 2) = 4842 (24.8%)
#observations with reprojection error in [2, 6) = 1626 (8.32%)
#observations with reprojection error in [6,10) = 9 (0.046%)
#observations with reprojection error &gt;= 10     = 7 (0.0358%) (MergingFlow.cpp::230)
[2018-04-27 15:50:19.778][ForegroundDBUpdater][debug][942] [SAM] batch id1 = 9248952813583597570 (OptimizeKeyFrame.cpp::265)
[2018-04-27 15:50:19.778][ForegroundDBUpdater][debug][942] [SAM] batch id2 = 9248952813583597570 (OptimizeKeyFrame.cpp::266)
[2018-04-27 15:50:19.778][ForegroundDBUpdater][debug][942] [SAM] before inter-division PGO: Dist info:  (OptimizeKeyFrame.cpp::51)
[2018-04-27 15:50:19.780][ForegroundDBUpdater][debug][942] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 2.116999647e-09 varKFDis: 3.508070894e-09 meanMPDis: 0.0001812596487 varMPDis: 0.003421627032 (OptimizeKeyFrame.cpp::72)
[2018-04-27 15:50:19.784][ForegroundDBUpdater][debug][942] [SAM] group anchorkfs num:22 AnchorKFPairs size:22 (OptimizeInterDivision.cpp::486)
[2018-04-27 15:50:19.784][ForegroundDBUpdater][debug][942] [SAM] ----inter division PGO init, Total Time : 0s (OptimizeInterDivision.cpp::1111)
[2018-04-27 15:50:19.785][ForegroundDBUpdater][debug][942] [SAM] ---------add kf vertex, Total Time : 0s (OptimizeInterDivision.cpp::1120)
[2018-04-27 15:50:19.827][ForegroundDBUpdater][debug][942] [SAM] before interSectionPGO, sum chi2 = 3.738936027e-15 (OptimizeInterDivision.cpp::1144)
[2018-04-27 15:50:19.827][ForegroundDBUpdater][debug][942] [SAM] there is no error, no need to do interSectionPGO (OptimizeInterDivision.cpp::1147)
[2018-04-27 15:50:19.861][ForegroundDBUpdater][info][942] [SAM] str_id: interDivisionPGO  end: 57019861  start: 57019661  total:200(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:19.894][ForegroundDBUpdater][info][942] [SAM] FORCE MERGING MODE! (OptimizeOverlap.cpp::66)
[2018-04-27 15:50:19.894][ForegroundDBUpdater][info][942] [SAM] optType=soft edge, value=2 (OptimizeOverlap.cpp::103)
[2018-04-27 15:50:19.914][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: before refBA is 0.5734225147, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: before refBA is 0.5810898332, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] getAnchorKFfAndInlierMpPairs (OptimizeOverlap.cpp::523)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] input setSec num:2 found overlaped edge num:1 (OptimizeOverlap.cpp::562)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] setAnchorKFPairs:22 setInlierMPPairs size:954 (OptimizeOverlap.cpp::563)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] input fixedOverlaps num:0 used fixedOverlaps num:0 (OptimizeOverlap.cpp::668)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] fixedKFs:2 fixedMps:0 in head and tail (OptimizeOverlap.cpp::742)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] Sec:4482---&gt;Sec:4481---&gt; (OptimizeOverlap.cpp::447)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] depth:0 inputeSize:2 outputSize:2 (OptimizeOverlap.cpp::462)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] visitedSec size:2 setSec size:2 setInlierMPPairs:954 (OptimizeOverlap.cpp::494)
[2018-04-27 15:50:19.947][ForegroundDBUpdater][info][942] [SAM] before inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:50:19.949][ForegroundDBUpdater][info][942] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:22 meanKFDis:2.116999647e-09 varKFDis:3.508070894e-09 InlierMpNum:954 meanMPDis:0.0001812596487 varMPDis:0.003421627032 (OptimizeOverlap.cpp::218)
[2018-04-27 15:50:19.949][ForegroundDBUpdater][debug][942] [SAM] global reference BA with fixed overlaps (OptimizeInterDivision.cpp::1191)
[2018-04-27 15:50:19.949][ForegroundDBUpdater][debug][942] [SAM] setAllSec:2 setAnchorKFPairs:22 setInlierMPPairs:954 fixedKFs:2 fixedMps:0 (OptimizeInterDivision.cpp::1192)
[2018-04-27 15:50:19.952][ForegroundDBUpdater][debug][942] [SAM] vpKFs size:79 (OptimizeInterDivision.cpp::1264)
[2018-04-27 15:50:19.954][ForegroundDBUpdater][debug][942] [SAM] vpMPs size:3165 (OptimizeInterDivision.cpp::1306)
[2018-04-27 15:50:19.954][ForegroundDBUpdater][debug][942] [SAM] ---------get kfs and mps, Totle Time : 0.004563s (OptimizeInterDivision.cpp::1315)
[2018-04-27 15:50:19.954][ForegroundDBUpdater][debug][942] [SAM] ---------add kf vertex, Totle Time : 9.9e-05s (OptimizeInterDivision.cpp::1355)
[2018-04-27 15:50:19.972][ForegroundDBUpdater][debug][942] [SAM] ---------add mps vertex and edge, Totle Time : 0.017851s (OptimizeInterDivision.cpp::1428)
[2018-04-27 15:50:19.982][ForegroundDBUpdater][debug][942] [SAM] ---------add inlier mp pair edge, Totle Time : 0.010138s (OptimizeInterDivision.cpp::1515)
[2018-04-27 15:50:19.982][ForegroundDBUpdater][debug][942] [SAM] ---------add anchor kf pair edge, Totle Time : 5.2e-05s (OptimizeInterDivision.cpp::1543)
[2018-04-27 15:50:19.983][ForegroundDBUpdater][debug][942] [SAM] before ref globalBA, sum chi2 = 12717.88422 edgeNum:24252 (OptimizeInterDivision.cpp::1572)
[2018-04-27 15:50:19.983][ForegroundDBUpdater][debug][942] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeInterDivision.cpp::1573)
[2018-04-27 15:50:20.255][ForegroundDBUpdater][debug][942] [SAM] after ref globalBA, sum chi2 = 12600.93521 edgeNum:24252 (OptimizeInterDivision.cpp::1602)
[2018-04-27 15:50:20.255][ForegroundDBUpdater][debug][942] [SAM] ---------ref globalBA optimize, Totle Time : 0.272973s (OptimizeInterDivision.cpp::1605)
[2018-04-27 15:50:20.257][ForegroundDBUpdater][debug][942] [SAM] ---------recove data, Totle Time : 0.002166s (OptimizeInterDivision.cpp::1642)
[2018-04-27 15:50:20.268][ForegroundDBUpdater][info][942] [SAM] after inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:50:20.270][ForegroundDBUpdater][info][942] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:22 meanKFDis:0.0003346243713 varKFDis:0.001515913879 InlierMpNum:954 meanMPDis:0.0001754666364 varMPDis:0.003173135635 (OptimizeOverlap.cpp::218)
[2018-04-27 15:50:20.287][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: after refBA is 0.5665913762, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:20.310][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: after refBA is 0.5795792653, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:20.312][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1482 total mps size = 2463
lateral Shift Mean = 1.4176, Variance  = 0.1817
longitudinal Shift Mean = 0.32061, Variance = 1.4169
altitude Shift Mean = 1.5259, Variance = 0.29317
XZ selfDirection Shift Mean = 0.19884, Variance = 0.15228
XYZ selfDirection Shift Mean = 0.36637, Variance = 0.21817
selfRotation Shift Mean  = 0.50008, Variance = 0.18041
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.312][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1482 total mps size = 2463
lateral Shift Mean = 1.4162, Variance  = 0.17825
longitudinal Shift Mean = 0.35385, Variance = 1.412
altitude Shift Mean = 1.5046, Variance = 0.30777
XZ selfDirection Shift Mean = 0.20078, Variance = 0.15098
XYZ selfDirection Shift Mean = 0.36978, Variance = 0.22126
selfRotation Shift Mean  = 0.56278, Variance = 0.19158
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.312][ForegroundDBUpdater][info][942] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484482-refId:1490154496225968132
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:-0.0014615  Variance:-0.0034508
change of longitudinal Shift Mean:0.033235  Variance:-0.0049089
change of altitude Shift Mean:-0.021281  Variance:0.014599
change of XZ selfDirection Shift Mean:0.0019346  Variance:-0.0012974
change of XYZ selfDirection Shift Mean:0.0034034  Variance:0.0030967
change of self Rotation Mean:0.062699  Variance:0.011164
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:50:20.316][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1683 total mps size = 2942
lateral Shift Mean = 0.9985, Variance  = 0.4841
longitudinal Shift Mean = 0.38758, Variance = 1.9081
altitude Shift Mean = 1.0811, Variance = 0.42215
XZ selfDirection Shift Mean = 0.24359, Variance = 0.19687
XYZ selfDirection Shift Mean = 0.38774, Variance = 0.24732
selfRotation Shift Mean  = 0.48486, Variance = 0.1773
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.316][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1683 total mps size = 2942
lateral Shift Mean = 1.0004, Variance  = 0.48338
longitudinal Shift Mean = 0.41488, Variance = 1.9062
altitude Shift Mean = 1.0648, Variance = 0.40999
XZ selfDirection Shift Mean = 0.24473, Variance = 0.19715
XYZ selfDirection Shift Mean = 0.39332, Variance = 0.24628
selfRotation Shift Mean  = 0.54502, Variance = 0.18866
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.316][ForegroundDBUpdater][info][942] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484481-refId:1490154496225968129
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:0.0019211  Variance:-0.00072705
change of longitudinal Shift Mean:0.027297  Variance:-0.0019166
change of altitude Shift Mean:-0.016313  Variance:-0.012156
change of XZ selfDirection Shift Mean:0.0011424  Variance:0.00028024
change of XYZ selfDirection Shift Mean:0.005578  Variance:-0.0010332
change of self Rotation Mean:0.060163  Variance:0.011359
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:50:20.319][ForegroundDBUpdater][info][942] [SAM] optimize overlap success (OptimizeOverlap.cpp::77)
[2018-04-27 15:50:20.353][ForegroundDBUpdater][info][942] [SAM] str_id: optimizeOverlap  end: 57020353  start: 57019861  total:492(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.353][ForegroundDBUpdater][info][942] [SAM] Add IntraMergingTask:2 (MergingFlow.cpp::172)
[2018-04-27 15:50:20.353][ForegroundDBUpdater][debug][942] [SAM] 942 finish Task: type[2] (ThreadPool.h::228)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][946] [SAM] 946 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][945] [SAM] 945 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][945] [SAM] Ref batch: 9248952813583597570, ref kf number: 38 (KmlVisualisation.cpp::339)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][946] [SAM] Ref batch: 9248952813583597570, ref kf number: 41 (KmlVisualisation.cpp::339)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][945] [SAM] Inc batch: 9248952833850474498, inc kf number: 31 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][946] [SAM] Inc batch: 9248952833850474498, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][946] [SAM] Inc batch: 9248952833850474499, inc kf number: 48 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][945] [SAM] Inc batch: 9248952833850474499, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][945] [SAM] Inc batch: 9248952833850474500, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][946] [SAM] Inc batch: 9248952833850474500, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][905] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][943] [SAM] 943 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][943] [SAM] 943 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][944] [SAM] 944 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][944] [SAM] 944 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][942] [SAM] 942 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][942] [SAM] 942 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][905] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][info][905] [SAM] InterMergingTask Done (MergingFlow.cpp::307)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][905] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][947] [SAM] 947 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][947] [SAM] 947 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][948] [SAM] 948 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][948] [SAM] 948 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.484][ForegroundDBUpdater][debug][945] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: before intraBA, is 0.8417444981, kf num:69 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.487][ForegroundDBUpdater][info][945] [SAM] vpKFs size:31 vpMPs size:2075 (OptimizeIntraDivision.cpp::87)
[2018-04-27 15:50:20.495][ForegroundDBUpdater][info][945] [SAM] fixed ref mps:1094 (OptimizeIntraDivision.cpp::192)
[2018-04-27 15:50:20.496][ForegroundDBUpdater][info][945] [SAM] before ba opt, sum chi2 = 12318.06571 (OptimizeIntraDivision.cpp::202)
[2018-04-27 15:50:20.496][ForegroundDBUpdater][info][945] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeIntraDivision.cpp::203)
[2018-04-27 15:50:20.544][ForegroundDBUpdater][debug][946] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: before intraBA, is 0.9200893089, kf num:89 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.549][ForegroundDBUpdater][info][946] [SAM] vpKFs size:48 vpMPs size:2539 (OptimizeIntraDivision.cpp::87)
[2018-04-27 15:50:20.562][ForegroundDBUpdater][info][946] [SAM] fixed ref mps:1280 (OptimizeIntraDivision.cpp::192)
[2018-04-27 15:50:20.563][ForegroundDBUpdater][info][946] [SAM] before ba opt, sum chi2 = 23958.20027 (OptimizeIntraDivision.cpp::202)
[2018-04-27 15:50:20.563][ForegroundDBUpdater][info][946] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeIntraDivision.cpp::203)
[2018-04-27 15:50:20.570][ForegroundDBUpdater][info][945] [SAM] after ba opt, sum chi2 = 10005.73384 (OptimizeIntraDivision.cpp::217)
[2018-04-27 15:50:20.575][ForegroundDBUpdater][info][945] [SAM] refKf batch size:1 incKf batch size:3 chi2ErrsBefore size:1 chi2ErrsAfter size:1 (UpdateDivision.cpp::151)
[2018-04-27 15:50:20.575][ForegroundDBUpdater][info][945] [SAM] ---intra global BA for curr divsion:SecRefID4482-8132 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:20.611][ForegroundDBUpdater][debug][945] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: after intraBA, is 0.7823410068, kf num:69 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.627][ForegroundDBUpdater][info][945] [SAM] str_id: updateDivision  end: 57020627  start: 57020354  total:273(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][info][945] [SAM] ***** for division:SecRefID4482-8132, after opt, reproject err is:
#used map points = 2463
#bad  map points = 0
#observations    = 13191
total error = 1.03e+04
  min error = 1.26e-05
  max error = 7.39
  avg error = 0.782
#observations with reprojection error in [0, 1) = 9509 (72.1%)
#observations with reprojection error in [1, 2) = 2903 (22%)
#observations with reprojection error in [2, 6) = 778 (5.9%)
#observations with reprojection error in [6,10) = 1 (0.00758%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::64)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][debug][945] [SAM] 945 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][debug][945] [SAM] 945 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][debug][945] [SAM] 945 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.708][ForegroundDBUpdater][info][946] [SAM] after ba opt, sum chi2 = 19954.27002 (OptimizeIntraDivision.cpp::217)
[2018-04-27 15:50:20.716][ForegroundDBUpdater][info][946] [SAM] refKf batch size:1 incKf batch size:3 chi2ErrsBefore size:1 chi2ErrsAfter size:1 (UpdateDivision.cpp::151)
[2018-04-27 15:50:20.717][ForegroundDBUpdater][info][946] [SAM] ---intra global BA for curr divsion:SecRefID4481-8129 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:20.770][ForegroundDBUpdater][debug][946] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: after intraBA, is 0.8709120968, kf num:89 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.790][ForegroundDBUpdater][info][946] [SAM] str_id: updateDivision  end: 57020790  start: 57020354  total:436(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][946] [SAM] ***** for division:SecRefID4481-8129, after opt, reproject err is:
#used map points = 2942
#bad  map points = 0
#observations    = 19549
total error = 1.7e+04
  min error = 2.59e-05
  max error = 13.3
  avg error = 0.871
#observations with reprojection error in [0, 1) = 13148 (67.3%)
#observations with reprojection error in [1, 2) = 4836 (24.7%)
#observations with reprojection error in [2, 6) = 1558 (7.97%)
#observations with reprojection error in [6,10) = 5 (0.0256%)
#observations with reprojection error &gt;= 10     = 2 (0.0102%) (MergingFlow.cpp::64)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][946] [SAM] 946 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][946] [SAM] 946 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][946] [SAM] 946 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][905] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] IntraMergingTask Done:2 (MergingFlow.cpp::313)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] MergingFlow Done (MergingFlow.cpp::315)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][905] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] ### Module:Merging Ending ### (MergingManager.cpp::146)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][905] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] str_id: Merging  end: 57020838  start: 57018433  total:2405(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] ### Module:fillStatus Beginning ### (MergingManager.cpp::154)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCD004F070, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCD004ED40, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCD004ED40, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCD004F070, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCD004E860, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCD0000E00, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCD0000E00, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCD004E860, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x20F5F10, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x20F3540, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x20F3540, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x20F5F10, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] ### Module:fillStatus Ending ### (MergingManager.cpp::191)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] str_id: fillStatus  end: 57020847  start: 57020838  total:9(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] debug information: 1490154494078484481-&gt;1490154494078484482: orgRefAnchorKF num:22 AnchorKF num:22 inlierNum: 954
 afterPre meanKFDis: 2.117e-09 varKFDis: 3.50807e-09 meanMPDis: 0.00018126 varMPDis: 0.00342163
 afterPgo meanKFDis: -1       varKFDis: -1       meanMPDis: -1       varMPDis: -1      
 afterOpt meanKFDis: 0.000334624 varKFDis: 0.00151591 meanMPDis: 0.000175467 varMPDis: 0.00317314 (MergingManager.cpp::252)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerOptimizerImp.cpp::132)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] SecRefID4481-8129 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:20.850][ForegroundDBUpdater][info][905] [SAM] SecRefID4481-8129 renew ref confidence:15.87300014 (RenewMap.cpp::216)
[2018-04-27 15:50:20.850][ForegroundDBUpdater][info][905] [SAM] SecRefID4482-8132 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SAM] SecRefID4482-8132 renew ref confidence:16.09059906 (RenewMap.cpp::216)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SAM] ### Module:renewGlobal Ending ### (AlgoServerOptimizerImp.cpp::139)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SAM] ### Module:mergingFlow Ending ### (AlgoServerOptimizerImp.cpp::161)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SYS] start to write backend DB (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:230)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SYS] manual mode(true) : beginTransaction ! generate TransactionID manually! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:234)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:20.861][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:20.861][ForegroundDBUpdater][debug][905] [SYS] BackendData TransactionID: 5 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:50:20.864][ForegroundDBUpdater][info][905] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:50:20.941][ForegroundDBUpdater][debug][905] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:50:20.941][ForegroundDBUpdater][debug][905] [SAM] Div:1490154494078484481  save overlaps:79 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:20.996][ForegroundDBUpdater][debug][905] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:50:20.997][ForegroundDBUpdater][debug][905] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] geoDivision count: 79 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] Updated division :1490154494078484481, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] Updated division :1490154494078484482, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:21.006][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.026][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.026][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.035][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.062][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] Division :1490154494078484481, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] Division :1490154494078484482, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] updated reference version:1524734488488 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision: 1490154494078484481 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 referenceID: 1490154496225968129 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 confidence: 15.87300014 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] updated reference version:1524734488488 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision: 1490154494078484482 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 referenceID: 1490154496225968132 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:21.084][ForegroundDBUpdater][info][905] [SYS] 	 confidence: 16.09059906 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:21.084][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:21.084][ForegroundDBUpdater][info][905] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:50:21.085][ForegroundDBUpdater][info][905] [SAM] str_id: toCacheDB  end: 57021085  start: 57020864  total:221(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:21.085][ForegroundDBUpdater][info][905] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:249)
[2018-04-27 15:50:21.086][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.123][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.123][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [COM] {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [SYS] end ForegroundDBUpdater run. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:277)
[2018-04-27 15:50:21.131][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:50:21.131][ForegroundDBUpdater][info][905] [SYS] foregroundDBUpdater return ok, value:0, fwRet: 0 (foregroundDBUpdater.cpp:main:82)
[2018-04-27 15:50:21.131][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: main (foregroundDBUpdater.cpp::59)</msg>
<status status="PASS" endtime="20180427 15:50:20.567" starttime="20180427 15:50:20.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.568" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:20.568" starttime="20180427 15:50:20.567"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:20.571" level="INFO">${rStdout} = [2018-04-27 15:50:16.987][foregroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SYS] Log level: 0 (foregr...</msg>
<status status="PASS" endtime="20180427 15:50:20.571" starttime="20180427 15:50:20.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:20.572" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:20.572" starttime="20180427 15:50:20.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.573" level="INFO">[2018-04-27 15:50:16.987][foregroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: main (foregroundDBUpdater.cpp::59)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SYS] Log level: 0 (foregroundDBUpdaterExecute.cpp:getForegroundDBUpdaterInput:237)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "Version": "1524734488488",
    "DBStamp": "1524734320645",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "5"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] module command: /opt/ygomi/roadDB/bin/foregroundDBUpdater  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput/foregroudDBUpdater-1490154494078484481-1524734320645.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json  --pcfg  /opt/ygomi/roadDB/etc/config  --model  normal  --manual  --ol  /home/roaddb/autotest/output/ForegroundDBUpdater   (otherFuns.h::410)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SYS] BackendDB Version: 104 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:118)
[2018-04-27 15:50:16.987][ForegroundDBUpdater][info][905] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug/server_2018-04-27_15-50-16_905 (DebugInfoPath.cpp::58)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] server init success. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:129)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] update reference is: 1524734488488 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:145)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] geoDivision id in severInput json are:  (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:149)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484481 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484482 (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:153)
[2018-04-27 15:50:16.988][ForegroundDBUpdater][info][905] [SYS] -------------preparing backendData Transfer------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:162)
[2018-04-27 15:50:16.992][ForegroundDBUpdater][debug][905] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:50:16.993][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.001][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.001][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.008][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.008][ForegroundDBUpdater][info][905] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:50:17.008][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] -------------getting GeoDivision from backendDb------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:187)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][warning][905] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:50:17.017][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.031][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:50:17.032][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.053][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.120][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.133][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][debug][905] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:50:17.134][ForegroundDBUpdater][debug][905] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][debug][905] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][debug][905] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:50:17.135][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:50:17.232][ForegroundDBUpdater][debug][905] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:50:17.232][ForegroundDBUpdater][debug][905] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:50:17.232][ForegroundDBUpdater][debug][905] [SAM] Division:1490154494078484481read overlap:192 (ServerDbHelper.cpp::1186)
[2018-04-27 15:50:17.233][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.233][ForegroundDBUpdater][info][905] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:50:17.234][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:50:17.247][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.269][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.322][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][debug][905] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:50:17.334][ForegroundDBUpdater][debug][905] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 division status: 1 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:17.335][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][debug][905] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:50:17.336][ForegroundDBUpdater][info][905] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:50:17.415][ForegroundDBUpdater][debug][905] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:50:17.415][ForegroundDBUpdater][debug][905] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][debug][905] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:50:17.416][ForegroundDBUpdater][info][905] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][info][905] [SAM] restore overlap:192 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][debug][905] [SAM] SecRefID4481-8130 have 29 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][debug][905] [SAM] SecRefID4481-8131 have 28 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][debug][905] [SAM] SecRefID4481-8129 have 132 anchorKF pairs TO SecRefID4482::8132 with conf: 12.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:50:17.431][ForegroundDBUpdater][info][905] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] str_id: fromCacheDB  end: 57017432  start: 57017017  total:415(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SYS] -------------updating division data------------- (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:220)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:mergingFlow Beginning ### (AlgoServerOptimizerImp.cpp::147)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:BuildDivisionGraph Beginning ### (MergingManager.cpp::76)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] addEdge: new map (ServerDirectedGraph.cpp::579)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] create new tree:1 type:0 (ServerDirectedGraph.cpp::526)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:BuildDivisionGraph Ending ### (MergingManager.cpp::78)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] str_id: BuildDivisionGraph  end: 57017432  start: 57017432  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:OptimizedJudge Beginning ### (MergingManager.cpp::87)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] input domain with 2 divisions: , SecRefID4481-8129, SecRefID4482-8132 (OptimizationJudgment.cpp::58)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] min num of divisions with inc snippets in the 1st condition: 0 domain size:2 (OptimizationJudgment.cpp::90)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] meet the 1st condition: num of inc snippet 2 &gt; 0 (OptimizationJudgment.cpp::116)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:OptimizedJudge Ending ### (MergingManager.cpp::120)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] str_id: OptimizationJudgement  end: 57017432  start: 57017432  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] ### Module:Summarizing Beginning ### (MergingManager.cpp::128)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][905] [SAM] SummarizeTask begin: GraphTree size:1 (SummarizingFlow.cpp::394)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][905] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][debug][907] [SAM] 907 begin task: type[1] (ThreadPool.h::220)
[2018-04-27 15:50:17.432][ForegroundDBUpdater][info][907] [SAM] create a domain qa instance, including 2 division: 1490154494078484481-1490154494078484482- (SummarizingFlow.cpp::100)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129 have orgRefMPs number: 1708 (SummarizingFlow.cpp::150)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132 have orgRefMPs number: 1497 (SummarizingFlow.cpp::150)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][info][907] [SAM] str_id: reserveInfoFormatchIncreMP  end: 57017433  start: 57017432  total:1(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] ref 1490154496225968129 has 3 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] neighbor Ref 1490154496225968132 has 3 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] 132 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:132 (InitSubGraph.cpp::182)
[2018-04-27 15:50:17.433][ForegroundDBUpdater][debug][907] [SAM] orgAnchorKFs size:132, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:50:17.441][ForegroundDBUpdater][debug][907] [SAM] match pair size on anchor KF is: 975 (InitSubGraph.cpp::611)
[2018-04-27 15:50:17.552][ForegroundDBUpdater][info][907] [SAM] mnBestInliers_:975 inputPair:975 mnIterations_:2000 mRansacMaxIts_:2000 collinear:20 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:50:17.552][ForegroundDBUpdater][debug][907] [SAM] sim3 inlier number is: 975 (InitSubGraph.cpp::778)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] translation =[ -1.136868377e-13, 5.684341886e-14, -2.273736754e-13 ] (InitSubGraph.cpp::816)
[2018-04-27 15:50:17.555][ForegroundDBUpdater][debug][907] [SAM] sumT =[ 0.0001492857322, 3.763834635e-05, 9.327423878e-06 ] (InitSubGraph.cpp::817)
[2018-04-27 15:50:17.556][ForegroundDBUpdater][debug][907] [SAM] ---------mps 3d median:0 mean:0.0001773555947 var:0.003384680448 (InitSubGraph.cpp::861)
[2018-04-27 15:50:17.556][ForegroundDBUpdater][debug][907] [SAM] ---------mps height median:0 mean:4.48060647e-05 var:0.0009864349745 (InitSubGraph.cpp::862)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:22 (InitSubGraph.cpp::955)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:2.116999647e-09 Var:3.508070894e-09 inler 3d meanDist:0.0001773555947 Var:0.003384680448 (InitSubGraph.cpp::960)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] batchId:9248952813583597570 anchorKF height meanDist:1.704114022e-10 Var:1.539853348e-10 inler height meanDist:4.48060647e-05 Var:0.0009864349745 (InitSubGraph.cpp::963)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] left anchor kfs size:22 (InitSubGraph.cpp::975)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:50:17.560][ForegroundDBUpdater][debug][907] [SAM] select anchor of ref, matchInliers:975 anchorKfs:22 (InitSubGraph.cpp::426)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][debug][907] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][info][907] [SAM] str_id: InitSubGraph  end: 57017569  start: 57017433  total:136(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.569][ForegroundDBUpdater][info][907] [SAM] [SelectData] folder created  (MapTreeSummarizer.cpp::749)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129]average kf distance: 6.875162226, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] cluster done: -0.00119687,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484481 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132]average kf distance: 7.225532264, while the grid size is3 (MapTreeSummarizer.cpp::82)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] cluster done: 0.0423072,  (MapTreeSummarizer.cpp::179)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] DivisionJudger initialized in: 1490154494078484482 (MapTreeSummarizer.cpp::185)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] vertexs initialized (MapTreeSummarizer.cpp::778)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] 1 edges between 2 vertexs (MapTreeSummarizer.cpp::871)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [OG:4481-4482] anchor on ref, simple skip (MapTreeSummarizer.cpp::633)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] edge processed (MapTreeSummarizer.cpp::785)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] select 9248952833850474498 which fills 41 blanks (MapTreeSummarizer.cpp::541)
[2018-04-27 15:50:17.570][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] 1/3 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:50:17.577][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] greedy fill thresh: 20 (MapTreeSummarizer.cpp::515)
[2018-04-27 15:50:17.577][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] select 9248952833850474499 which fills 41 blanks (MapTreeSummarizer.cpp::541)
[2018-04-27 15:50:17.577][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] 1/3 inc batches selected in total (MapTreeSummarizer.cpp::248)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4482:8132] QA installed, nCoverage: 0.8064516129 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [DJ:4481:8129] QA installed, nCoverage: 0.8526315789 (MapTreeSummarizer.cpp::297)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][debug][907] [SAM] [SelectData] [MTS: 0001] summarize done (MapTreeSummarizer.cpp::798)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][info][907] [SAM] str_id: clusterLane  end: 57017586  start: 57017569  total:17(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.586][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:50:17.629][ForegroundDBUpdater][debug][907] [SAM] 
SecRefID4481-8129 OrgRef info: nKF: 41 nAKF: L2-R20 KFDistMean: 7.05 IncKFDistToSparse: 8.81
SecRefID4481-8129   4499 info: nKF: 68 nAKF: L3-R33 KFDistMean: 4.06 nAllSparseKF: 35 nSparseAKF: L0-R18 --- nSetBadAllKF: 20 nSetBadAKF: 0
 (SparseIncKFs.cpp::136)
[2018-04-27 15:50:17.629][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132 START SparseIncKF (SummarizingFlow.cpp::195)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][debug][907] [SAM] 
SecRefID4482-8132 OrgRef info: nKF: 38 nAKF: L16-R6 KFDistMean: 7.42 IncKFDistToSparse: 9.28
SecRefID4482-8132   4498 info: nKF: 67 nAKF: L33-R6 KFDistMean: 4.08 nAllSparseKF: 36 nSparseAKF: L18-R0 --- nSetBadAllKF: 36 nSetBadAKF: 18
 (SparseIncKFs.cpp::136)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] empty overlap (ServerOverlap.cpp::267)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] str_id: sparsifyKF  end: 57017670  start: 57017586  total:84(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][debug][907] [SAM] SecRefID4481-8129 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][debug][907] [SAM] SecRefID4482-8132 empty inc, skip PruneMap (SummarizingFlow.cpp::232)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] str_id: pickReferenceMP  end: 57017670  start: 57017670  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:50:17.670][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] The number of refMPs set bad: 25 [1.463700234 %] (SummarizingFlow.cpp::279)
[2018-04-27 15:50:17.674][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4481-8129 processing batch: 4499 (MatchIncrementMP.cpp::600)
[2018-04-27 15:50:17.682][ForegroundDBUpdater][info][907] [SAM] MPnum: 1680/1706 [2%] Isolated Point: 26  | 0s (MatchIncrementMP.cpp::748)
[2018-04-27 15:50:17.707][ForegroundDBUpdater][info][907] [SAM] MPnum: 1480/1680 [12%] minCubicMatch: 	360[22%] mergedIntoPoint: 160[10%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.721][ForegroundDBUpdater][info][907] [SAM] MPnum: 1473/1480 [1%] rayCubicMatch: 	14[1%] mergedIntoPoint: 7[1%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.753][ForegroundDBUpdater][info][907] [SAM] ------------- SecRefID4481-8129 processing all INC batchs (MatchIncrementMP.cpp::643)
[2018-04-27 15:50:17.772][ForegroundDBUpdater][info][907] [SAM] MPnum: 1457/1473 [2%] minCubicMatch: 	32[3%] mergedIntoPoint: 16[2%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.785][ForegroundDBUpdater][info][907] [SAM] MPnum: 1456/1457 [1%] rayCubicMatch: 	2[1%] mergedIntoPoint: 1[1%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.795][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4481-8129 add supplementaryMP for batch: 4499 (MatchIncrementMP.cpp::1058)
[2018-04-27 15:50:17.795][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] use ILP-lpsolve-Pruner to select this amount of MPs with Parameter: 70 40 100 (MatchIncrementMP.cpp::1060)
[2018-04-27 15:50:17.798][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the 1456 MP to 100 with 1128 MP which can not be pruned and with 110 as minimum observation number per KeyFrame (BasePruneMap.cpp::140)
[2018-04-27 15:50:17.802][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruner: Optimal solution of the ILP problem found. Objective= 12.71464957 (IlpPruneMap.cpp::148)
[2018-04-27 15:50:17.803][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the MP finished. Selected 1259 (86.46978022%) MP. (BasePruneMap.cpp::158)
[2018-04-27 15:50:17.803][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning: There was at least one KF with only 165 MP observations. (BasePruneMap.cpp::164)
[2018-04-27 15:50:17.805][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve
86.47% of MP have been selected.
There are 0 KF which are not sufficiently covered with Landmark observations.
0 map points failed the initial number of 1 observers.
0 candidate map points alreayd have been bad.
0 map points failed since their confidence is too low.
# KeyFrame coverage result (total) (dependent data: ratio of covered KF)
[    96,    170): 2 [ 22.2%] ************                            | dependent data avg: 1
[   170,    300): 7 [ 77.8%] ****************************************| dependent data avg: 1
Min= 164 Max= 222 Average= 191
# KeyFrame coverage result (self)
[    55,     96): 9 [  100%] ****************************************
Min= 70 Max= 76 Average= 71
# KeyFrame coverage result (other)
[    55,     96): 1 [ 11.1%] *****
[    96,    170): 8 [ 88.9%] ****************************************
Min= 94 Max= 152 Average= 120
# pruned observations per KF
(  -Inf,      1): 0 [    0%] 
[     1,      2): 1 [ 11.1%] **********
[     2,      3): 0 [    0%] 
[     3,      5): 0 [    0%] 
[     5,      8): 0 [    0%] 
[     8,     13): 0 [    0%] 
[    13,     22): 0 [    0%] 
[    22,     35): 1 [ 11.1%] **********
[    35,     58): 4 [ 44.4%] ****************************************
[    58,     97): 3 [ 33.3%] ******************************
[    97,    160): 0 [    0%] 
[   160,   +Inf): 0 [    0%] 
Min= 1 Max= 73 Average= 45.6
# MapPoint observers
(  -Inf,      1):    0 [    0%] 
[     1,      2):    0 [    0%] 
[     2,      3):  113 [ 8.98%] *******
[     3,      5):  702 [ 55.8%] ****************************************
[     5,      8):  308 [ 24.5%] ******************
[     8,     13):  111 [ 8.82%] *******
[    13,     22):   23 [ 1.83%] **
[    22,     35):    2 [0.159%] *
[    35,     58):    0 [    0%] 
[    58,     97):    0 [    0%] 
[    97,    160):    0 [    0%] 
[   160,   +Inf):    0 [    0%] 
Min= 2 Max= 23 Average= 4.6
# MapPoint track observations
[     1,      2): 1259 [  100%] ****************************************
Min= 1 Max= 1 Average= 1
 (PruneMap.cpp::228)
[2018-04-27 15:50:17.828][ForegroundDBUpdater][debug][907] [SAM] ****************************************************** (MatchIncrementMP.cpp::541)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP :1259 (MatchIncrementMP.cpp::560)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP selected :1259 (MatchIncrementMP.cpp::561)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] total number of merged MP :173 (MatchIncrementMP.cpp::563)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][debug][907] [SAM] ******************************************************** (MatchIncrementMP.cpp::566)
[2018-04-27 15:50:17.830][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::261)
[2018-04-27 15:50:17.831][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] The number of refMPs set bad: 15 [1.002004008 %] (SummarizingFlow.cpp::279)
[2018-04-27 15:50:17.833][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4482-8132 processing batch: 4498 (MatchIncrementMP.cpp::600)
[2018-04-27 15:50:17.839][ForegroundDBUpdater][info][907] [SAM] MPnum: 1189/1232 [4%] Isolated Point: 43  | 0s (MatchIncrementMP.cpp::748)
[2018-04-27 15:50:17.856][ForegroundDBUpdater][info][907] [SAM] MPnum: 1051/1189 [12%] minCubicMatch: 	247[21%] mergedIntoPoint: 109[10%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.866][ForegroundDBUpdater][info][907] [SAM] MPnum: 1050/1051 [1%] rayCubicMatch: 	2[1%] mergedIntoPoint: 1[1%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.892][ForegroundDBUpdater][info][907] [SAM] ------------- SecRefID4482-8132 processing all INC batchs (MatchIncrementMP.cpp::643)
[2018-04-27 15:50:17.903][ForegroundDBUpdater][info][907] [SAM] MPnum: 1025/1050 [3%] minCubicMatch: 	50[5%] mergedIntoPoint: 25[3%]  | 0s (MatchIncrementMP.cpp::790)
[2018-04-27 15:50:17.913][ForegroundDBUpdater][info][907] [SAM] MPnum: 1025/1025 [0%] rayCubicMatch: 	0[0%] mergedIntoPoint: 0[0%]  | 0s (MatchIncrementMP.cpp::862)
[2018-04-27 15:50:17.921][ForegroundDBUpdater][info][907] [SAM] --------------- SecRefID4482-8132 add supplementaryMP for batch: 4498 (MatchIncrementMP.cpp::1058)
[2018-04-27 15:50:17.921][ForegroundDBUpdater][info][907] [SAM] [IncMps supplement] use ILP-lpsolve-Pruner to select this amount of MPs with Parameter: 70 40 100 (MatchIncrementMP.cpp::1060)
[2018-04-27 15:50:17.923][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the 1025 MP to 100 with 816 MP which can not be pruned and with 110 as minimum observation number per KeyFrame (BasePruneMap.cpp::140)
[2018-04-27 15:50:17.925][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruner: Optimal solution of the ILP problem found. Objective= 21.0286943 (IlpPruneMap.cpp::148)
[2018-04-27 15:50:17.925][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning of the MP finished. Selected 981 (95.70731707%) MP. (BasePruneMap.cpp::158)
[2018-04-27 15:50:17.925][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve-Pruning: There was at least one KF with only 114 MP observations. (BasePruneMap.cpp::164)
[2018-04-27 15:50:17.926][ForegroundDBUpdater][info][907] [SAM] ILP-lpsolve
95.71% of MP have been selected.
There are 0 KF which are not sufficiently covered with Landmark observations.
0 map points failed the initial number of 1 observers.
0 candidate map points alreayd have been bad.
0 map points failed since their confidence is too low.
# KeyFrame coverage result (total) (dependent data: ratio of covered KF)
[    96,    170): 7 [ 77.8%] ****************************************| dependent data avg: 1
[   170,    300): 2 [ 22.2%] ************                            | dependent data avg: 1
Min= 114 Max= 179 Average= 153
# KeyFrame coverage result (self)
[    55,     96): 9 [  100%] ****************************************
Min= 58 Max= 80 Average= 69.2
# KeyFrame coverage result (other)
[    55,     96): 7 [ 77.8%] ****************************************
[    96,    170): 2 [ 22.2%] ************
Min= 56 Max= 109 Average= 84
# pruned observations per KF
(  -Inf,      1): 2 [ 22.2%] ********************
[     1,      2): 0 [    0%] 
[     2,      3): 0 [    0%] 
[     3,      5): 1 [ 11.1%] **********
[     5,      8): 0 [    0%] 
[     8,     13): 2 [ 22.2%] ********************
[    13,     22): 4 [ 44.4%] ****************************************
[    22,     35): 0 [    0%] 
[    35,     58): 0 [    0%] 
[    58,     97): 0 [    0%] 
[    97,    160): 0 [    0%] 
[   160,   +Inf): 0 [    0%] 
Min= 0 Max= 18 Average= 9.78
# MapPoint observers
(  -Inf,      1):   0 [    0%] 
[     1,      2):   0 [    0%] 
[     2,      3): 490 [ 49.9%] ****************************************
[     3,      5): 338 [ 34.5%] ****************************
[     5,      8): 104 [ 10.6%] *********
[     8,     13):  41 [ 4.18%] ****
[    13,     22):   8 [0.815%] *
[    22,     35):   0 [    0%] 
[    35,     58):   0 [    0%] 
[    58,     97):   0 [    0%] 
[    97,    160):   0 [    0%] 
[   160,   +Inf):   0 [    0%] 
Min= 2 Max= 17 Average= 3.24
# MapPoint track observations
[     1,      2): 981 [  100%] ****************************************
Min= 1 Max= 1 Average= 1
 (PruneMap.cpp::228)
[2018-04-27 15:50:17.944][ForegroundDBUpdater][debug][907] [SAM] ****************************************************** (MatchIncrementMP.cpp::541)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP :981 (MatchIncrementMP.cpp::560)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] total number of inc MP selected :981 (MatchIncrementMP.cpp::561)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] total number of merged MP :127 (MatchIncrementMP.cpp::563)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] ******************************************************** (MatchIncrementMP.cpp::566)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] str_id: matchIncrementMP  end: 57017946  start: 57017670  total:276(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129, total MP num: 1683, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129, total observation num: 13762, delete observation num: 0, left observation num: 13762 (ManageObservation.cpp::363)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4481-8129, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ============================ start selectIncMP ============================= (SummarizingFlow.cpp::297)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] ManageObservation reserve observer number is 64 (ManageObservation.cpp::311)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132, total MP num: 1482, 0 MPs have more than 64 observations (ManageObservation.cpp::362)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132, total observation num: 10013, delete observation num: 0, left observation num: 10013 (ManageObservation.cpp::363)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] SecRefID4482-8132, 0 KFs set bad cause having no mappoint (ManageObservation.cpp::365)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] str_id: sparsifyObs  end: 57017946  start: 57017946  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is 1 (DeleteMovingMps.cpp::53)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] ++ start selectIncMP ++ (SummarizingFlow.cpp::326)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is 1 (DeleteMovingMps.cpp::53)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] [Delete Moving Mps] The OptTimes is less than 2, do not get into the delete process! (DeleteMovingMps.cpp::128)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][info][907] [SAM] str_id: filterMovingMP  end: 57017946  start: 57017946  total:0(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:17.946][ForegroundDBUpdater][debug][907] [SAM] bEnableFCM is false, do not get into clustering process (SummarizingFlow.cpp::354)
[2018-04-27 15:50:17.962][ForegroundDBUpdater][debug][907] [SAM] 907 finish Task: type[1] (ThreadPool.h::228)
[2018-04-27 15:50:17.963][ForegroundDBUpdater][debug][907] [SAM] 907 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:17.963][ForegroundDBUpdater][debug][907] [SAM] 907 exit (ThreadPool.h::250)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][908] [SAM] 908 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][908] [SAM] 908 exit (ThreadPool.h::250)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][909] [SAM] 909 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][909] [SAM] 909 exit (ThreadPool.h::250)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][905] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] SummarizeTask Done:1 (SummarizingFlow.cpp::403)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] ### Module:Summarizing Ending ### (MergingManager.cpp::133)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][debug][905] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] str_id: Summarizing  end: 57018433  start: 57017432  total:1001(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] ### Module:Merging Beginning ### (MergingManager.cpp::141)
[2018-04-27 15:50:18.433][ForegroundDBUpdater][info][905] [SAM] InterMergingTask begin: GraphTree size:1 (MergingFlow.cpp::285)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] 942 begin task: type[2] (ThreadPool.h::220)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] ref 1490154496225968129 has 3 Inc data (InitSubGraph.cpp::349)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] neighbor Ref 1490154496225968132 has 3 Inc data (InitSubGraph.cpp::351)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] 22 Anchor KF pair found (InitSubGraph.cpp::365)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] -------- select anchor kfs for sec:1490154494078484481-1490154496225968129 and sec:1490154494078484482-1490154496225968132, org num:22 (InitSubGraph.cpp::182)
[2018-04-27 15:50:19.434][ForegroundDBUpdater][debug][942] [SAM] orgAnchorKFs size:22, orgRef1 KFNum:41, orgRef2 KFNum:38 (InitSubGraph.cpp::408)
[2018-04-27 15:50:19.443][ForegroundDBUpdater][debug][942] [SAM] match pair size on anchor KF is: 954 (InitSubGraph.cpp::611)
[2018-04-27 15:50:19.567][ForegroundDBUpdater][info][942] [SAM] mnBestInliers_:954 inputPair:954 mnIterations_:2000 mRansacMaxIts_:2000 collinear:14 repeatCnt:0 (ServerSim3Solution.cpp::300)
[2018-04-27 15:50:19.567][ForegroundDBUpdater][debug][942] [SAM] sim3 inlier number is: 954 (InitSubGraph.cpp::778)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] scale = 1 (InitSubGraph.cpp::811)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] rotation =[ 1, 0, 0 (InitSubGraph.cpp::812)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM]             0, 1, 0 (InitSubGraph.cpp::813)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM]             0, 0, 1 ] (InitSubGraph.cpp::814)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] translation =[ -1.136868377e-13, 5.684341886e-14, -1.136868377e-13 ] (InitSubGraph.cpp::816)
[2018-04-27 15:50:19.571][ForegroundDBUpdater][debug][942] [SAM] sumT =[ 0.0001525718961, 3.846686341e-05, 9.53274453e-06 ] (InitSubGraph.cpp::817)
[2018-04-27 15:50:19.572][ForegroundDBUpdater][debug][942] [SAM] ---------mps 3d median:0 mean:0.0001812596487 var:0.003421627032 (InitSubGraph.cpp::861)
[2018-04-27 15:50:19.572][ForegroundDBUpdater][debug][942] [SAM] ---------mps height median:0 mean:4.579236173e-05 var:0.000997210219 (InitSubGraph.cpp::862)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] check anchor pairs, fewMpCnt:0 largeDistCnt:0 orgCnt:22 (InitSubGraph.cpp::955)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] batchId:9248952813583597570 anchorKF 3d meanDist:2.116999647e-09 Var:3.508070894e-09 inler 3d meanDist:0.0001812596487 Var:0.003421627032 (InitSubGraph.cpp::960)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] batchId:9248952813583597570 anchorKF height meanDist:1.704114022e-10 Var:1.539853348e-10 inler height meanDist:4.579236173e-05 Var:0.000997210219 (InitSubGraph.cpp::963)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] left anchor kfs size:22 (InitSubGraph.cpp::975)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] find ref anchor kfs, don't need inc anchor kfs anymore (InitSubGraph.cpp::425)
[2018-04-27 15:50:19.574][ForegroundDBUpdater][debug][942] [SAM] select anchor of ref, matchInliers:954 anchorKfs:22 (InitSubGraph.cpp::426)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] set edge info between sec: 1490154494078484481 and sec: 1490154494078484482 successful! (InitSubGraph.cpp::81)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] Begin to setsim3vertice (InitSubGraph.cpp::88)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCCC050D90, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCCC050AB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCCC050AB0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCCC050D90, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] create new sub tree:1 subtree number:1 type:1 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCCC0025F0, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCCC0020F0, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCCC0020F0, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCCC0025F0, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 2 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] addEdge: 1490154494078484481, 1490154494078484482 1 (ServerDirectedGraph.cpp::553)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] create new sub tree:1 subtree number:1 type:2 (ServerDirectedGraph.cpp::538)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][debug][942] [SAM] save Graph: , 0x20F5F10, SecID:4481, 1 (ServerVisualisation.cpp::160)
[2018-04-27 15:50:19.584][ForegroundDBUpdater][info][942] [SAM] str_id: initializeSubGraph  end: 57019584  start: 57019434  total:150(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] FORCE MERGING MODE! (InitConnection.cpp::47)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 dis = 0.0001576348828 (InitConnection.cpp::406)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] edgeT = 0.0001525718961, 3.846686341e-05, 9.53274453e-06 (InitConnection.cpp::416)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] before translation Averaging: (InitConnection.cpp::295)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] dis = 0.0001576348828 (InitConnection.cpp::299)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] before translationAveraging: sumDis = 0.0001576348828 (InitConnection.cpp::301)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] transAveraging sec: 1490154494078484481 -&gt; 1490154494078484482 -&gt; 
 (InitConnection.cpp::331)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] before optimization (OptimizeInterDivision.cpp::192)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] edge number: 1 (OptimizeInterDivision.cpp::193)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] chi2 = 2.484875627e-08 (OptimizeInterDivision.cpp::200)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::205)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] after translation Averaging: (InitConnection.cpp::347)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 between sec 1490154494078484481 and sec 1490154494078484482 (InitConnection.cpp::404)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] verify vertex sim3 dis = 0.0001576348828 (InitConnection.cpp::406)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] leftT = 0, 0, 0 (InitConnection.cpp::408)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] rightT = 0, 0, 0 (InitConnection.cpp::412)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] edgeT = 0.0001525718961, 3.846686341e-05, 9.53274453e-06 (InitConnection.cpp::416)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] dis = 0.0001576348828 (InitConnection.cpp::354)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][info][942] [SAM] after translationAveraging: sumDis = 0.0001576348828 (InitConnection.cpp::356)
[2018-04-27 15:50:19.621][ForegroundDBUpdater][debug][942] [SAM] before InitConnection: Dist info:  (InitConnection.cpp::67)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 2.116999647e-09 varKFDis: 3.508070894e-09 meanMPDis: 0.0001812596487 varMPDis: 0.003421627032 (InitConnection.cpp::96)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][info][942] [SAM] connected section number is: 2 (InitConnection.cpp::103)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] before optimization (OptimizeInterDivision.cpp::336)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] edge number: 1 (OptimizeInterDivision.cpp::337)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] chi2 = 0 (OptimizeInterDivision.cpp::344)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] there is no error between neighbors, no optimization (OptimizeInterDivision.cpp::349)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][warning][942] [SAM] can not find optSim3 of sec1490154494078484481 (InitConnection.cpp::213)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][warning][942] [SAM] can not find optSim3 of sec1490154494078484482 (InitConnection.cpp::213)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM]  fix divisions: 1490154494078484482-&gt;1490154494078484481-&gt;
 (InitConnection.cpp::124)
[2018-04-27 15:50:19.623][ForegroundDBUpdater][debug][942] [SAM] after InitConnection: Dist info:  (InitConnection.cpp::126)
[2018-04-27 15:50:19.625][ForegroundDBUpdater][debug][942] [SAM] 1490154494078484481-&gt;1490154494078484482: AnchorKF num:22 meanKFDis: 2.116999647e-09 varKFDis: 3.508070894e-09 inlierNum: 954 meanMPDis: 0.0001812596487 varMPDis: 0.003421627032 (InitConnection.cpp::156)
[2018-04-27 15:50:19.661][ForegroundDBUpdater][info][942] [SAM] str_id: InitConnection  end: 57019661  start: 57019584  total:77(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:19.729][ForegroundDBUpdater][info][942] [SAM] ***** for division:SecRefID4482-8132, before opt, reproject err is:
#used map points = 2463
#bad  map points = 0
#observations    = 13191
total error = 1.09e+04
  min error = 1.26e-05
  max error = 11.1
  avg error = 0.827
#observations with reprojection error in [0, 1) = 9242 (70.1%)
#observations with reprojection error in [1, 2) = 3035 (23%)
#observations with reprojection error in [2, 6) = 912 (6.91%)
#observations with reprojection error in [6,10) = 1 (0.00758%)
#observations with reprojection error &gt;= 10     = 1 (0.00758%) (MergingFlow.cpp::230)
[2018-04-27 15:50:19.777][ForegroundDBUpdater][info][942] [SAM] ***** for division:SecRefID4481-8129, before opt, reproject err is:
#used map points = 2942
#bad  map points = 0
#observations    = 19549
total error = 1.74e+04
  min error = 2.59e-05
  max error = 19.2
  avg error = 0.888
#observations with reprojection error in [0, 1) = 13065 (66.8%)
#observations with reprojection error in [1, 2) = 4842 (24.8%)
#observations with reprojection error in [2, 6) = 1626 (8.32%)
#observations with reprojection error in [6,10) = 9 (0.046%)
#observations with reprojection error &gt;= 10     = 7 (0.0358%) (MergingFlow.cpp::230)
[2018-04-27 15:50:19.778][ForegroundDBUpdater][debug][942] [SAM] batch id1 = 9248952813583597570 (OptimizeKeyFrame.cpp::265)
[2018-04-27 15:50:19.778][ForegroundDBUpdater][debug][942] [SAM] batch id2 = 9248952813583597570 (OptimizeKeyFrame.cpp::266)
[2018-04-27 15:50:19.778][ForegroundDBUpdater][debug][942] [SAM] before inter-division PGO: Dist info:  (OptimizeKeyFrame.cpp::51)
[2018-04-27 15:50:19.780][ForegroundDBUpdater][debug][942] [SAM] 1490154494078484481-&gt;1490154494078484482 meanKFDis: 2.116999647e-09 varKFDis: 3.508070894e-09 meanMPDis: 0.0001812596487 varMPDis: 0.003421627032 (OptimizeKeyFrame.cpp::72)
[2018-04-27 15:50:19.784][ForegroundDBUpdater][debug][942] [SAM] group anchorkfs num:22 AnchorKFPairs size:22 (OptimizeInterDivision.cpp::486)
[2018-04-27 15:50:19.784][ForegroundDBUpdater][debug][942] [SAM] ----inter division PGO init, Total Time : 0s (OptimizeInterDivision.cpp::1111)
[2018-04-27 15:50:19.785][ForegroundDBUpdater][debug][942] [SAM] ---------add kf vertex, Total Time : 0s (OptimizeInterDivision.cpp::1120)
[2018-04-27 15:50:19.827][ForegroundDBUpdater][debug][942] [SAM] before interSectionPGO, sum chi2 = 3.738936027e-15 (OptimizeInterDivision.cpp::1144)
[2018-04-27 15:50:19.827][ForegroundDBUpdater][debug][942] [SAM] there is no error, no need to do interSectionPGO (OptimizeInterDivision.cpp::1147)
[2018-04-27 15:50:19.861][ForegroundDBUpdater][info][942] [SAM] str_id: interDivisionPGO  end: 57019861  start: 57019661  total:200(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:19.894][ForegroundDBUpdater][info][942] [SAM] FORCE MERGING MODE! (OptimizeOverlap.cpp::66)
[2018-04-27 15:50:19.894][ForegroundDBUpdater][info][942] [SAM] optType=soft edge, value=2 (OptimizeOverlap.cpp::103)
[2018-04-27 15:50:19.914][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: before refBA is 0.5734225147, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: before refBA is 0.5810898332, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] getAnchorKFfAndInlierMpPairs (OptimizeOverlap.cpp::523)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] input setSec num:2 found overlaped edge num:1 (OptimizeOverlap.cpp::562)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] setAnchorKFPairs:22 setInlierMPPairs size:954 (OptimizeOverlap.cpp::563)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] input fixedOverlaps num:0 used fixedOverlaps num:0 (OptimizeOverlap.cpp::668)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] fixedKFs:2 fixedMps:0 in head and tail (OptimizeOverlap.cpp::742)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] Sec:4482---&gt;Sec:4481---&gt; (OptimizeOverlap.cpp::447)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] depth:0 inputeSize:2 outputSize:2 (OptimizeOverlap.cpp::462)
[2018-04-27 15:50:19.938][ForegroundDBUpdater][info][942] [SAM] visitedSec size:2 setSec size:2 setInlierMPPairs:954 (OptimizeOverlap.cpp::494)
[2018-04-27 15:50:19.947][ForegroundDBUpdater][info][942] [SAM] before inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:50:19.949][ForegroundDBUpdater][info][942] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:22 meanKFDis:2.116999647e-09 varKFDis:3.508070894e-09 InlierMpNum:954 meanMPDis:0.0001812596487 varMPDis:0.003421627032 (OptimizeOverlap.cpp::218)
[2018-04-27 15:50:19.949][ForegroundDBUpdater][debug][942] [SAM] global reference BA with fixed overlaps (OptimizeInterDivision.cpp::1191)
[2018-04-27 15:50:19.949][ForegroundDBUpdater][debug][942] [SAM] setAllSec:2 setAnchorKFPairs:22 setInlierMPPairs:954 fixedKFs:2 fixedMps:0 (OptimizeInterDivision.cpp::1192)
[2018-04-27 15:50:19.952][ForegroundDBUpdater][debug][942] [SAM] vpKFs size:79 (OptimizeInterDivision.cpp::1264)
[2018-04-27 15:50:19.954][ForegroundDBUpdater][debug][942] [SAM] vpMPs size:3165 (OptimizeInterDivision.cpp::1306)
[2018-04-27 15:50:19.954][ForegroundDBUpdater][debug][942] [SAM] ---------get kfs and mps, Totle Time : 0.004563s (OptimizeInterDivision.cpp::1315)
[2018-04-27 15:50:19.954][ForegroundDBUpdater][debug][942] [SAM] ---------add kf vertex, Totle Time : 9.9e-05s (OptimizeInterDivision.cpp::1355)
[2018-04-27 15:50:19.972][ForegroundDBUpdater][debug][942] [SAM] ---------add mps vertex and edge, Totle Time : 0.017851s (OptimizeInterDivision.cpp::1428)
[2018-04-27 15:50:19.982][ForegroundDBUpdater][debug][942] [SAM] ---------add inlier mp pair edge, Totle Time : 0.010138s (OptimizeInterDivision.cpp::1515)
[2018-04-27 15:50:19.982][ForegroundDBUpdater][debug][942] [SAM] ---------add anchor kf pair edge, Totle Time : 5.2e-05s (OptimizeInterDivision.cpp::1543)
[2018-04-27 15:50:19.983][ForegroundDBUpdater][debug][942] [SAM] before ref globalBA, sum chi2 = 12717.88422 edgeNum:24252 (OptimizeInterDivision.cpp::1572)
[2018-04-27 15:50:19.983][ForegroundDBUpdater][debug][942] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeInterDivision.cpp::1573)
[2018-04-27 15:50:20.255][ForegroundDBUpdater][debug][942] [SAM] after ref globalBA, sum chi2 = 12600.93521 edgeNum:24252 (OptimizeInterDivision.cpp::1602)
[2018-04-27 15:50:20.255][ForegroundDBUpdater][debug][942] [SAM] ---------ref globalBA optimize, Totle Time : 0.272973s (OptimizeInterDivision.cpp::1605)
[2018-04-27 15:50:20.257][ForegroundDBUpdater][debug][942] [SAM] ---------recove data, Totle Time : 0.002166s (OptimizeInterDivision.cpp::1642)
[2018-04-27 15:50:20.268][ForegroundDBUpdater][info][942] [SAM] after inter-opt BA, Dist info: (OptimizeOverlap.cpp::194)
[2018-04-27 15:50:20.270][ForegroundDBUpdater][info][942] [SAM] SecRefID4481-8129-&gt;SecRefID4482-8132: AnchorKfnum:22 meanKFDis:0.0003346243713 varKFDis:0.001515913879 InlierMpNum:954 meanMPDis:0.0001754666364 varMPDis:0.003173135635 (OptimizeOverlap.cpp::218)
[2018-04-27 15:50:20.287][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4482-8132 in status: after refBA is 0.5665913762, kf num:38 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:20.310][ForegroundDBUpdater][debug][942] [SAM] for original ref, ave square reprojectErr of SecRefID4481-8129 in status: after refBA is 0.5795792653, kf num:41 (OptimizeOverlap.cpp::430)
[2018-04-27 15:50:20.312][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1482 total mps size = 2463
lateral Shift Mean = 1.4176, Variance  = 0.1817
longitudinal Shift Mean = 0.32061, Variance = 1.4169
altitude Shift Mean = 1.5259, Variance = 0.29317
XZ selfDirection Shift Mean = 0.19884, Variance = 0.15228
XYZ selfDirection Shift Mean = 0.36637, Variance = 0.21817
selfRotation Shift Mean  = 0.50008, Variance = 0.18041
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.312][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484482-refId:1490154496225968132
org ref kfs size = 38 org ref mps size = 1482 total mps size = 2463
lateral Shift Mean = 1.4162, Variance  = 0.17825
longitudinal Shift Mean = 0.35385, Variance = 1.412
altitude Shift Mean = 1.5046, Variance = 0.30777
XZ selfDirection Shift Mean = 0.20078, Variance = 0.15098
XYZ selfDirection Shift Mean = 0.36978, Variance = 0.22126
selfRotation Shift Mean  = 0.56278, Variance = 0.19158
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.312][ForegroundDBUpdater][info][942] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484482-refId:1490154496225968132
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:-0.0014615  Variance:-0.0034508
change of longitudinal Shift Mean:0.033235  Variance:-0.0049089
change of altitude Shift Mean:-0.021281  Variance:0.014599
change of XZ selfDirection Shift Mean:0.0019346  Variance:-0.0012974
change of XYZ selfDirection Shift Mean:0.0034034  Variance:0.0030967
change of self Rotation Mean:0.062699  Variance:0.011164
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:50:20.316][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1683 total mps size = 2942
lateral Shift Mean = 0.9985, Variance  = 0.4841
longitudinal Shift Mean = 0.38758, Variance = 1.9081
altitude Shift Mean = 1.0811, Variance = 0.42215
XZ selfDirection Shift Mean = 0.24359, Variance = 0.19687
XYZ selfDirection Shift Mean = 0.38774, Variance = 0.24732
selfRotation Shift Mean  = 0.48486, Variance = 0.1773
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.316][ForegroundDBUpdater][info][942] [SAM] ------------------------show ref trajectory info------------------------
current ref secId:1490154494078484481-refId:1490154496225968129
org ref kfs size = 41 org ref mps size = 1683 total mps size = 2942
lateral Shift Mean = 1.0004, Variance  = 0.48338
longitudinal Shift Mean = 0.41488, Variance = 1.9062
altitude Shift Mean = 1.0648, Variance = 0.40999
XZ selfDirection Shift Mean = 0.24473, Variance = 0.19715
XYZ selfDirection Shift Mean = 0.39332, Variance = 0.24628
selfRotation Shift Mean  = 0.54502, Variance = 0.18866
invalid kf Pos Num = 0
invalid kf Pos Per = 0%
isQualityOK =yes
 (TrajectoryInfo.cpp::601)
[2018-04-27 15:50:20.316][ForegroundDBUpdater][info][942] [SAM] ***************** changed info of ref trajectory ****************
changed ref secId:1490154494078484481-refId:1490154496225968129
change of org ref kf size:0 mps size:0
change of total mps size:0
change of lateral Shift Mean:0.0019211  Variance:-0.00072705
change of longitudinal Shift Mean:0.027297  Variance:-0.0019166
change of altitude Shift Mean:-0.016313  Variance:-0.012156
change of XZ selfDirection Shift Mean:0.0011424  Variance:0.00028024
change of XYZ selfDirection Shift Mean:0.005578  Variance:-0.0010332
change of self Rotation Mean:0.060163  Variance:0.011359
change of invalid Pos Num:0
invalid Pos Per:0%
quality get worse:no
 (TrajectoryInfo.cpp::665)
[2018-04-27 15:50:20.319][ForegroundDBUpdater][info][942] [SAM] optimize overlap success (OptimizeOverlap.cpp::77)
[2018-04-27 15:50:20.353][ForegroundDBUpdater][info][942] [SAM] str_id: optimizeOverlap  end: 57020353  start: 57019861  total:492(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.353][ForegroundDBUpdater][info][942] [SAM] Add IntraMergingTask:2 (MergingFlow.cpp::172)
[2018-04-27 15:50:20.353][ForegroundDBUpdater][debug][942] [SAM] 942 finish Task: type[2] (ThreadPool.h::228)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][946] [SAM] 946 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][945] [SAM] 945 begin task: type[3] (ThreadPool.h::220)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][945] [SAM] Ref batch: 9248952813583597570, ref kf number: 38 (KmlVisualisation.cpp::339)
[2018-04-27 15:50:20.354][ForegroundDBUpdater][debug][946] [SAM] Ref batch: 9248952813583597570, ref kf number: 41 (KmlVisualisation.cpp::339)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][945] [SAM] Inc batch: 9248952833850474498, inc kf number: 31 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][946] [SAM] Inc batch: 9248952833850474498, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][946] [SAM] Inc batch: 9248952833850474499, inc kf number: 48 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][945] [SAM] Inc batch: 9248952833850474499, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][945] [SAM] Inc batch: 9248952833850474500, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.355][ForegroundDBUpdater][debug][946] [SAM] Inc batch: 9248952833850474500, inc kf number: 0 (KmlVisualisation.cpp::368)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][905] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][943] [SAM] 943 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][943] [SAM] 943 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][944] [SAM] 944 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][944] [SAM] 944 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][942] [SAM] 942 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][942] [SAM] 942 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][905] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][info][905] [SAM] InterMergingTask Done (MergingFlow.cpp::307)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][905] [SAM] notify_all exit (ThreadPool.h::131)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][947] [SAM] 947 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][947] [SAM] 947 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][948] [SAM] 948 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.434][ForegroundDBUpdater][debug][948] [SAM] 948 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.484][ForegroundDBUpdater][debug][945] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: before intraBA, is 0.8417444981, kf num:69 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.487][ForegroundDBUpdater][info][945] [SAM] vpKFs size:31 vpMPs size:2075 (OptimizeIntraDivision.cpp::87)
[2018-04-27 15:50:20.495][ForegroundDBUpdater][info][945] [SAM] fixed ref mps:1094 (OptimizeIntraDivision.cpp::192)
[2018-04-27 15:50:20.496][ForegroundDBUpdater][info][945] [SAM] before ba opt, sum chi2 = 12318.06571 (OptimizeIntraDivision.cpp::202)
[2018-04-27 15:50:20.496][ForegroundDBUpdater][info][945] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeIntraDivision.cpp::203)
[2018-04-27 15:50:20.544][ForegroundDBUpdater][debug][946] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: before intraBA, is 0.9200893089, kf num:89 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.549][ForegroundDBUpdater][info][946] [SAM] vpKFs size:48 vpMPs size:2539 (OptimizeIntraDivision.cpp::87)
[2018-04-27 15:50:20.562][ForegroundDBUpdater][info][946] [SAM] fixed ref mps:1280 (OptimizeIntraDivision.cpp::192)
[2018-04-27 15:50:20.563][ForegroundDBUpdater][info][946] [SAM] before ba opt, sum chi2 = 23958.20027 (OptimizeIntraDivision.cpp::202)
[2018-04-27 15:50:20.563][ForegroundDBUpdater][info][946] [SAM] ------------------------------------ba ch2i---------------------------------------- (OptimizeIntraDivision.cpp::203)
[2018-04-27 15:50:20.570][ForegroundDBUpdater][info][945] [SAM] after ba opt, sum chi2 = 10005.73384 (OptimizeIntraDivision.cpp::217)
[2018-04-27 15:50:20.575][ForegroundDBUpdater][info][945] [SAM] refKf batch size:1 incKf batch size:3 chi2ErrsBefore size:1 chi2ErrsAfter size:1 (UpdateDivision.cpp::151)
[2018-04-27 15:50:20.575][ForegroundDBUpdater][info][945] [SAM] ---intra global BA for curr divsion:SecRefID4482-8132 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:20.611][ForegroundDBUpdater][debug][945] [SAM] for whole division, ave square reprojectErr of SecRefID4482-8132 in status: after intraBA, is 0.7823410068, kf num:69 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.627][ForegroundDBUpdater][info][945] [SAM] str_id: updateDivision  end: 57020627  start: 57020354  total:273(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][info][945] [SAM] ***** for division:SecRefID4482-8132, after opt, reproject err is:
#used map points = 2463
#bad  map points = 0
#observations    = 13191
total error = 1.03e+04
  min error = 1.26e-05
  max error = 7.39
  avg error = 0.782
#observations with reprojection error in [0, 1) = 9509 (72.1%)
#observations with reprojection error in [1, 2) = 2903 (22%)
#observations with reprojection error in [2, 6) = 778 (5.9%)
#observations with reprojection error in [6,10) = 1 (0.00758%)
#observations with reprojection error &gt;= 10     = 0 (0%) (MergingFlow.cpp::64)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][debug][945] [SAM] 945 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][debug][945] [SAM] 945 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.659][ForegroundDBUpdater][debug][945] [SAM] 945 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.708][ForegroundDBUpdater][info][946] [SAM] after ba opt, sum chi2 = 19954.27002 (OptimizeIntraDivision.cpp::217)
[2018-04-27 15:50:20.716][ForegroundDBUpdater][info][946] [SAM] refKf batch size:1 incKf batch size:3 chi2ErrsBefore size:1 chi2ErrsAfter size:1 (UpdateDivision.cpp::151)
[2018-04-27 15:50:20.717][ForegroundDBUpdater][info][946] [SAM] ---intra global BA for curr divsion:SecRefID4481-8129 Total Time : 0s (UpdateDivision.cpp::153)
[2018-04-27 15:50:20.770][ForegroundDBUpdater][debug][946] [SAM] for whole division, ave square reprojectErr of SecRefID4481-8129 in status: after intraBA, is 0.8709120968, kf num:89 (UpdateDivision.cpp::245)
[2018-04-27 15:50:20.790][ForegroundDBUpdater][info][946] [SAM] str_id: updateDivision  end: 57020790  start: 57020354  total:436(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][946] [SAM] ***** for division:SecRefID4481-8129, after opt, reproject err is:
#used map points = 2942
#bad  map points = 0
#observations    = 19549
total error = 1.7e+04
  min error = 2.59e-05
  max error = 13.3
  avg error = 0.871
#observations with reprojection error in [0, 1) = 13148 (67.3%)
#observations with reprojection error in [1, 2) = 4836 (24.7%)
#observations with reprojection error in [2, 6) = 1558 (7.97%)
#observations with reprojection error in [6,10) = 5 (0.0256%)
#observations with reprojection error &gt;= 10     = 2 (0.0102%) (MergingFlow.cpp::64)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][946] [SAM] 946 finish Task: type[3] (ThreadPool.h::228)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][946] [SAM] 946 begin task: type[0] (ThreadPool.h::220)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][946] [SAM] 946 exit (ThreadPool.h::250)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][905] [SAM] all task done (ThreadPool.h::136)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] IntraMergingTask Done:2 (MergingFlow.cpp::313)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] MergingFlow Done (MergingFlow.cpp::315)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][905] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] ### Module:Merging Ending ### (MergingManager.cpp::146)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][debug][905] [SAM] left thread:0 (ThreadPool.h::189)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] str_id: Merging  end: 57020838  start: 57018433  total:2405(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.838][ForegroundDBUpdater][info][905] [SAM] ### Module:fillStatus Beginning ### (MergingManager.cpp::154)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCD004F070, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCD004ED40, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCD004ED40, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCD004F070, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x7EFCD004E860, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x7EFCD0000E00, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x7EFCD0000E00, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x7EFCD004E860, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.846][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484481, pHeader:0x20F5F10, pSec:SecID:4481 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (trace):1490154494078484482, pHeader:0x20F3540, pSec:SecID:4482 (ServerDirectedGraph.cpp::768)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484482, pHeader:0x20F3540, pSec:SecID:4482 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][debug][905] [SAM] clear sec ID (delete):1490154494078484481, pHeader:0x20F5F10, pSec:SecID:4481 (ServerDirectedGraph.cpp::784)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] ### Module:fillStatus Ending ### (MergingManager.cpp::191)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] str_id: fillStatus  end: 57020847  start: 57020838  total:9(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] debug information: 1490154494078484481-&gt;1490154494078484482: orgRefAnchorKF num:22 AnchorKF num:22 inlierNum: 954
 afterPre meanKFDis: 2.117e-09 varKFDis: 3.50807e-09 meanMPDis: 0.00018126 varMPDis: 0.00342163
 afterPgo meanKFDis: -1       varKFDis: -1       meanMPDis: -1       varMPDis: -1      
 afterOpt meanKFDis: 0.000334624 varKFDis: 0.00151591 meanMPDis: 0.000175467 varMPDis: 0.00317314 (MergingManager.cpp::252)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] ### Module:renewGlobal Beginning ### (AlgoServerOptimizerImp.cpp::132)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] need update:2 (RenewMap.cpp::121)
[2018-04-27 15:50:20.847][ForegroundDBUpdater][info][905] [SAM] SecRefID4481-8129 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:20.850][ForegroundDBUpdater][info][905] [SAM] SecRefID4481-8129 renew ref confidence:15.87300014 (RenewMap.cpp::216)
[2018-04-27 15:50:20.850][ForegroundDBUpdater][info][905] [SAM] SecRefID4482-8132 updateReference (RenewMap.cpp::165)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SAM] SecRefID4482-8132 renew ref confidence:16.09059906 (RenewMap.cpp::216)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SAM] ### Module:renewGlobal Ending ### (AlgoServerOptimizerImp.cpp::139)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SAM] ### Module:mergingFlow Ending ### (AlgoServerOptimizerImp.cpp::161)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SYS] start to write backend DB (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:230)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SYS] manual mode(true) : beginTransaction ! generate TransactionID manually! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:234)
[2018-04-27 15:50:20.853][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:20.861][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:20.861][ForegroundDBUpdater][debug][905] [SYS] BackendData TransactionID: 5 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:50:20.864][ForegroundDBUpdater][info][905] [SAM] ### Module:toCacheDB Beginning ### (DatabaseManager.cpp::126)
[2018-04-27 15:50:20.941][ForegroundDBUpdater][debug][905] [SAM] Write division:1490154494078484481right_nebor:1490154494078484482 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:50:20.941][ForegroundDBUpdater][debug][905] [SAM] Div:1490154494078484481  save overlaps:79 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:20.996][ForegroundDBUpdater][debug][905] [SAM] Write division:1490154494078484482left_nebor:1490154494078484481 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:50:20.997][ForegroundDBUpdater][debug][905] [SAM] Div:1490154494078484482  save overlaps:0 (ServerDbHelper.cpp::680)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] ==========BEGIN TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:410)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] set divisions to backend Data, division count:2 (BackendDataTransfer.cpp:setDetailDivisions:411)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.002][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 1 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.003][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] Generate ID for division: 1490154494078484481 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] Generate ID for division: 1490154494078484482 (BackendDataTransfer.cpp:updateDetailDivisionsDBID:1358)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][info][905] [SYS] geoDivision count: 79 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968130, 1490154496225968133) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968131, 1490154496225968134) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.004][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] geoDivision - (1490154494078484481, 1490154494078484482) (BackendDataTransfer.cpp:updateDBIDInDivision:1127)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] reference - (1490154496225968129, 1490154496225968132) (BackendDataTransfer.cpp:updateDBIDInDivision:1151)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDA: 1490154495152226305 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateDBIDInDetailDivision:1295)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDA: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] nodeIDB: 1490154495152226307 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] CHECK_CONDITION_E: 2 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] add divisions to backend DB, division count:0 (BackendDataTransfer.cpp:addDetailDivisions:605)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] 0 divisions has been written to backendDB (BackendDataTransfer.cpp:addDetailDivisions:642)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] There is no division for saving! (BackendDARestful.cpp:addDivisions:756)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] There is no node for saving! (BackendDARestful.cpp:addNodes:1526)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: addDetailDivisions (BackendDataTransfer.cpp::598)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][debug][905] [SYS] ENTER FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] update divisions to backend DB, division count: 2 (BackendDataTransfer.cpp:updateDetailDivisions:524)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] Updated division :1490154494078484481, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] Updated division :1490154494078484482, optmize status:0 (BackendDataTransfer.cpp:updateDetailDivisions:544)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] =============update ref============= (BackendDataTransfer.cpp:updateDetailDivisions:559)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 1490154496225968129 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:21.005][ForegroundDBUpdater][info][905] [SYS] 1490154496225968132 (BackendDataTransfer.cpp:updateDetailDivisions:563)
[2018-04-27 15:50:21.006][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.026][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.026][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.035][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.062][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] There is no reference to delete! (BackendDARestful.cpp:deleteReferences:1349)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: updateDetailDivisions (BackendDataTransfer.cpp::515)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] ==========END TO WRITE DIVISIONS PROCESS========== (BackendDataTransfer.cpp:setDetailDivisions:506)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: setDetailDivisions (BackendDataTransfer.cpp::406)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] list dbDivision details (BackendDTAdapter.cpp:setDivisions:108)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:setDivisions:109)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] Division :1490154494078484481, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] Division :1490154494078484482, optmize status:0 (BackendDTAdapter.cpp:setDivisions:115)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] ##########END########## (BackendDTAdapter.cpp:setDivisions:127)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] updated reference version:1524734488488 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision: 1490154494078484481 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 referenceID: 1490154496225968129 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 confidence: 15.87300014 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] updated reference version:1524734488488 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:261)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 geoDivision: 1490154494078484482 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:262)
[2018-04-27 15:50:21.083][ForegroundDBUpdater][info][905] [SYS] 	 referenceID: 1490154496225968132 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:263)
[2018-04-27 15:50:21.084][ForegroundDBUpdater][info][905] [SYS] 	 confidence: 16.09059906 (BackendDTAdapter.cpp:generateUpdatedRefsInfo:264)
[2018-04-27 15:50:21.084][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: setDivisions (BackendDTAdapter.cpp::97)
[2018-04-27 15:50:21.084][ForegroundDBUpdater][info][905] [SAM] ### Module:toCacheDB Ending ### (DatabaseManager.cpp::195)
[2018-04-27 15:50:21.085][ForegroundDBUpdater][info][905] [SAM] str_id: toCacheDB  end: 57021085  start: 57020864  total:221(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:50:21.085][ForegroundDBUpdater][info][905] [SYS] manual mode(true) : endTransaction ! (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:249)
[2018-04-27 15:50:21.086][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.123][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.123][ForegroundDBUpdater][info][905] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [COM] {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:21.129][ForegroundDBUpdater][info][905] [SYS] end ForegroundDBUpdater run. (rdbForegroundDBUpdater.cpp:rdbForegroundDBUpdater:277)
[2018-04-27 15:50:21.131][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: rdbForegroundDBUpdater (rdbForegroundDBUpdater.cpp::113)
[2018-04-27 15:50:21.131][ForegroundDBUpdater][info][905] [SYS] foregroundDBUpdater return ok, value:0, fwRet: 0 (foregroundDBUpdater.cpp:main:82)
[2018-04-27 15:50:21.131][ForegroundDBUpdater][debug][905] [SYS] LEAVE FUNCTION: main (foregroundDBUpdater.cpp::59)</msg>
<status status="PASS" endtime="20180427 15:50:20.578" starttime="20180427 15:50:20.572"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.579" starttime="20180427 15:50:16.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:20.580" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:20.580" starttime="20180427 15:50:20.579"></status>
</kw>
<kw name="Check Confidence" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json</arg>
</arguments>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:20.583" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json']</msg>
<status status="PASS" endtime="20180427 15:50:20.583" starttime="20180427 15:50:20.582"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:20.585" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:50:20.585" starttime="20180427 15:50:20.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.587" starttime="20180427 15:50:20.587"></status>
</kw>
<msg timestamp="20180427 15:50:20.587" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json</msg>
<status status="PASS" endtime="20180427 15:50:20.587" starttime="20180427 15:50:20.585"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:20.588" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json'.</msg>
<msg timestamp="20180427 15:50:20.612" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:20.613" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<msg timestamp="20180427 15:50:20.613" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:20.613" starttime="20180427 15:50:20.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.614" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:50:20.614" starttime="20180427 15:50:20.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.615" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:20.615" starttime="20180427 15:50:20.614"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:20.616" level="INFO">${rStdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:50:20.616" starttime="20180427 15:50:20.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:20.617" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:20.617" starttime="20180427 15:50:20.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.618" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:50:20.618" starttime="20180427 15:50:20.617"></status>
</kw>
<msg timestamp="20180427 15:50:20.618" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:50:20.618" starttime="20180427 15:50:20.581"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Confidence</arg>
</arguments>
<assign>
<var>${lines}</var>
</assign>
<msg timestamp="20180427 15:50:20.619" level="INFO">2 out of 16 lines matched</msg>
<msg timestamp="20180427 15:50:20.619" level="INFO">${lines} =             "Confidence": "15.873000",
            "Confidence": "16.090599",</msg>
<status status="PASS" endtime="20180427 15:50:20.620" starttime="20180427 15:50:20.619"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lines}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${lines}</var>
</assign>
<msg timestamp="20180427 15:50:20.620" level="INFO">${lines} = [u'            "Confidence": "15.873000",', u'            "Confidence": "16.090599",']</msg>
<status status="PASS" endtime="20180427 15:50:20.621" starttime="20180427 15:50:20.620"></status>
</kw>
<kw type="for" name="${line} IN [ @{lines} ]">
<kw type="foritem" name="${line} =             &quot;Confidence&quot;: &quot;15.873000&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:50:20.622" level="INFO">${words} = [u'"Confidence":', u'"15.873000",']</msg>
<status status="PASS" endtime="20180427 15:50:20.622" starttime="20180427 15:50:20.621"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${confidence}</var>
</assign>
<msg timestamp="20180427 15:50:20.623" level="INFO">${confidence} = [u'', u'15.873000', u',']</msg>
<status status="PASS" endtime="20180427 15:50:20.623" starttime="20180427 15:50:20.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${confidence}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.624" level="INFO">[u'', u'15.873000', u',']</msg>
<status status="PASS" endtime="20180427 15:50:20.624" starttime="20180427 15:50:20.623"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${confidence[1]}&gt;1</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.625" starttime="20180427 15:50:20.624"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.625" starttime="20180427 15:50:20.621"></status>
</kw>
<kw type="foritem" name="${line} =             &quot;Confidence&quot;: &quot;16.090599&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:50:20.626" level="INFO">${words} = [u'"Confidence":', u'"16.090599",']</msg>
<status status="PASS" endtime="20180427 15:50:20.626" starttime="20180427 15:50:20.625"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${confidence}</var>
</assign>
<msg timestamp="20180427 15:50:20.627" level="INFO">${confidence} = [u'', u'16.090599', u',']</msg>
<status status="PASS" endtime="20180427 15:50:20.627" starttime="20180427 15:50:20.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${confidence}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.628" level="INFO">[u'', u'16.090599', u',']</msg>
<status status="PASS" endtime="20180427 15:50:20.628" starttime="20180427 15:50:20.627"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${confidence[1]}&gt;1</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.629" starttime="20180427 15:50:20.628"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.629" starttime="20180427 15:50:20.625"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.629" starttime="20180427 15:50:20.621"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.629" starttime="20180427 15:50:20.580"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json</arg>
<arg>"DivisionID"</arg>
<arg>${sForegroudDbUpdaterDivisionlist1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:50:20.631" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:50:20.631" starttime="20180427 15:50:20.630"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:20.632" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json']</msg>
<status status="PASS" endtime="20180427 15:50:20.632" starttime="20180427 15:50:20.632"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:20.633" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:50:20.633" starttime="20180427 15:50:20.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.634" starttime="20180427 15:50:20.634"></status>
</kw>
<msg timestamp="20180427 15:50:20.634" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json</msg>
<status status="PASS" endtime="20180427 15:50:20.634" starttime="20180427 15:50:20.633"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:20.635" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json'.</msg>
<msg timestamp="20180427 15:50:20.673" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:20.674" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<msg timestamp="20180427 15:50:20.674" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:20.674" starttime="20180427 15:50:20.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.674" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:50:20.675" starttime="20180427 15:50:20.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.675" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:20.675" starttime="20180427 15:50:20.675"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:20.676" level="INFO">${rStdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:50:20.676" starttime="20180427 15:50:20.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:20.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:20.677" starttime="20180427 15:50:20.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.678" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:50:20.678" starttime="20180427 15:50:20.677"></status>
</kw>
<msg timestamp="20180427 15:50:20.678" level="INFO">${std_out} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:50:20.678" starttime="20180427 15:50:20.631"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:50:20.679" level="INFO">2 out of 16 lines matched</msg>
<msg timestamp="20180427 15:50:20.679" level="INFO">${division} =             "DivisionID": "1490154494078484481",
            "DivisionID": "1490154494078484482",</msg>
<status status="PASS" endtime="20180427 15:50:20.679" starttime="20180427 15:50:20.678"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:50:20.680" level="INFO">${key} = [u'            "DivisionID": "1490154494078484481",', u'            "DivisionID": "1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:50:20.680" starttime="20180427 15:50:20.679"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484481&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:50:20.681" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484481",']</msg>
<status status="PASS" endtime="20180427 15:50:20.681" starttime="20180427 15:50:20.681"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:50:20.683" level="INFO">${division} = [u'', u'1490154494078484481', u',']</msg>
<status status="PASS" endtime="20180427 15:50:20.683" starttime="20180427 15:50:20.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.684" level="INFO">1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:50:20.684" starttime="20180427 15:50:20.683"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.685" starttime="20180427 15:50:20.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.685" level="INFO">[u'1490154494078484481']</msg>
<status status="PASS" endtime="20180427 15:50:20.685" starttime="20180427 15:50:20.685"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.686" starttime="20180427 15:50:20.680"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;DivisionID&quot;: &quot;1490154494078484482&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:50:20.686" level="INFO">${divisions} = [u'"DivisionID":', u'"1490154494078484482",']</msg>
<status status="PASS" endtime="20180427 15:50:20.686" starttime="20180427 15:50:20.686"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:50:20.687" level="INFO">${division} = [u'', u'1490154494078484482', u',']</msg>
<status status="PASS" endtime="20180427 15:50:20.687" starttime="20180427 15:50:20.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.688" level="INFO">1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:50:20.688" starttime="20180427 15:50:20.688"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.689" starttime="20180427 15:50:20.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.690" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:50:20.690" starttime="20180427 15:50:20.689"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.690" starttime="20180427 15:50:20.686"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.690" starttime="20180427 15:50:20.680"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.691" starttime="20180427 15:50:20.690"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.691" starttime="20180427 15:50:20.629"></status>
</kw>
<kw name="Check Division Length Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json</arg>
<arg>"ReferenceID"</arg>
<arg>${sForegroudDbUpdaterReference1}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${divisionlists}</var>
</assign>
<msg timestamp="20180427 15:50:20.693" level="INFO">${divisionlists} = []</msg>
<status status="PASS" endtime="20180427 15:50:20.693" starttime="20180427 15:50:20.692"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:20.694" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json']</msg>
<status status="PASS" endtime="20180427 15:50:20.694" starttime="20180427 15:50:20.693"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:20.695" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:50:20.695" starttime="20180427 15:50:20.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.696" starttime="20180427 15:50:20.696"></status>
</kw>
<msg timestamp="20180427 15:50:20.697" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json</msg>
<status status="PASS" endtime="20180427 15:50:20.697" starttime="20180427 15:50:20.695"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:20.697" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult/result-1490160678831390721-1520581325104.json'.</msg>
<msg timestamp="20180427 15:50:20.735" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:20.736" level="INFO">${stdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<msg timestamp="20180427 15:50:20.736" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:20.736" starttime="20180427 15:50:20.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.738" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:50:20.738" starttime="20180427 15:50:20.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.739" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:20.739" starttime="20180427 15:50:20.738"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:20.741" level="INFO">${rStdout} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:50:20.741" starttime="20180427 15:50:20.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:20.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:20.742" starttime="20180427 15:50:20.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.743" level="INFO">{
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968129"
        },
        {
            "Confidence": "16.090599",
            "DivisionID": "1490154494078484482",
            "RefVersion": "1524734488488",
            "ReferenceID": "1490154496225968132"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:50:20.743" starttime="20180427 15:50:20.743"></status>
</kw>
<msg timestamp="20180427 15:50:20.744" level="INFO">${std_out} = {
    "DivisionVersionList": [
        {
            "Confidence": "15.873000",
            "DivisionID": "1490154494078484481",
            "RefVersion": "1524734488488",
            "ReferenceID": "...</msg>
<status status="PASS" endtime="20180427 15:50:20.744" starttime="20180427 15:50:20.693"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:50:20.745" level="INFO">2 out of 16 lines matched</msg>
<msg timestamp="20180427 15:50:20.746" level="INFO">${division} =             "ReferenceID": "1490154496225968129"
            "ReferenceID": "1490154496225968132"</msg>
<status status="PASS" endtime="20180427 15:50:20.746" starttime="20180427 15:50:20.745"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${division}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:50:20.747" level="INFO">${key} = [u'            "ReferenceID": "1490154496225968129"', u'            "ReferenceID": "1490154496225968132"']</msg>
<status status="PASS" endtime="20180427 15:50:20.747" starttime="20180427 15:50:20.746"></status>
</kw>
<kw type="for" name="${divisionForm} IN [ @{key} ]">
<kw type="foritem" name="${divisionForm} =             &quot;ReferenceID&quot;: &quot;1490154496225968129&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:50:20.749" level="INFO">${divisions} = [u'"ReferenceID":', u'"1490154496225968129"']</msg>
<status status="PASS" endtime="20180427 15:50:20.750" starttime="20180427 15:50:20.749"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:50:20.751" level="INFO">${division} = [u'', u'1490154496225968129', u'']</msg>
<status status="PASS" endtime="20180427 15:50:20.751" starttime="20180427 15:50:20.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.752" level="INFO">1490154496225968129</msg>
<status status="PASS" endtime="20180427 15:50:20.753" starttime="20180427 15:50:20.752"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.754" starttime="20180427 15:50:20.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.755" level="INFO">[u'1490154496225968129']</msg>
<status status="PASS" endtime="20180427 15:50:20.756" starttime="20180427 15:50:20.754"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.756" starttime="20180427 15:50:20.748"></status>
</kw>
<kw type="foritem" name="${divisionForm} =             &quot;ReferenceID&quot;: &quot;1490154496225968132&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisionForm}</arg>
</arguments>
<assign>
<var>${divisions}</var>
</assign>
<msg timestamp="20180427 15:50:20.757" level="INFO">${divisions} = [u'"ReferenceID":', u'"1490154496225968132"']</msg>
<status status="PASS" endtime="20180427 15:50:20.758" starttime="20180427 15:50:20.757"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${divisions[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${division}</var>
</assign>
<msg timestamp="20180427 15:50:20.759" level="INFO">${division} = [u'', u'1490154496225968132', u'']</msg>
<status status="PASS" endtime="20180427 15:50:20.759" starttime="20180427 15:50:20.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${division[1]}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.760" level="INFO">1490154496225968132</msg>
<status status="PASS" endtime="20180427 15:50:20.760" starttime="20180427 15:50:20.759"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${divisionlists}</arg>
<arg>${division[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.762" starttime="20180427 15:50:20.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${divisionlists}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.762" level="INFO">[u'1490154496225968129', u'1490154496225968132']</msg>
<status status="PASS" endtime="20180427 15:50:20.762" starttime="20180427 15:50:20.762"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.762" starttime="20180427 15:50:20.756"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.763" starttime="20180427 15:50:20.748"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${pForegroundDBMerger}</arg>
<arg>${divisionlists}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.763" starttime="20180427 15:50:20.763"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:20.764" starttime="20180427 15:50:20.691"></status>
</kw>
<doc>| Description | test normal foregroundDBUpdater of align snippet |
| Input | 1.DB |
| | 2.input json |
| | 3.snippet |
| | 4.reference |
| Execute | call the command line to process foregroundDBUpdater |
| Expect result | 1.output json |
| | 2.in output json, divisionlist and referencelist |
| | 3.confidence |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:50:20.764" critical="yes" starttime="20180427 15:50:00.001"></status>
</test>
<doc>| Description | test normal foregroundDBUpdater of slam/align snippet |
| Input | 1.DB |
| | 2.input json |
| | 3.snippet |
| | 4.reference |
| Execute | call the command line to process foregroundDBUpdater |
| Expect result | 1.output json |
| | 2.in output json, divisionlist and referencelist |
| | 3.confidence |</doc>
<status status="PASS" endtime="20180427 15:50:20.765" starttime="20180427 15:49:41.659"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System/LogicInfoExtract.txt" id="s1-s3-s3" name="LogicInfoExtract">
<test id="s1-s3-s3-t1" name="LogicInfoExtract">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.777" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:50:20.777" starttime="20180427 15:50:20.777"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:50:20.780" starttime="20180427 15:50:20.778"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:20.781" starttime="20180427 15:50:20.780"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:50:20.781" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:50:22.240" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:50:00 CST 2018

  System load:  3.43               Processes:           303
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:50:01 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:50:22.241" starttime="20180427 15:50:20.781"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:22.241" starttime="20180427 15:50:20.776"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:22.244" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:22.244" starttime="20180427 15:50:22.243"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:22.245" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:22.246" starttime="20180427 15:50:22.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:22.246" starttime="20180427 15:50:22.246"></status>
</kw>
<msg timestamp="20180427 15:50:22.246" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:22.247" starttime="20180427 15:50:22.246"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:22.247" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:22.270" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:22.271" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:22.271" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:22.271" starttime="20180427 15:50:22.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.272" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:22.272" starttime="20180427 15:50:22.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.273" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:22.273" starttime="20180427 15:50:22.272"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:22.274" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:22.274" starttime="20180427 15:50:22.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:22.275" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:22.275" starttime="20180427 15:50:22.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.276" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:22.276" starttime="20180427 15:50:22.276"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:22.277" starttime="20180427 15:50:22.242"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:22.279" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:50:22.279" starttime="20180427 15:50:22.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:22.281" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:22.281" starttime="20180427 15:50:22.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:22.283" starttime="20180427 15:50:22.283"></status>
</kw>
<msg timestamp="20180427 15:50:22.284" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:50:22.284" starttime="20180427 15:50:22.281"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:22.285" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:50:22.330" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:22.331" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:22.331" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:22.331" starttime="20180427 15:50:22.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.333" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:22.333" starttime="20180427 15:50:22.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.334" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:22.334" starttime="20180427 15:50:22.333"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:22.335" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:22.335" starttime="20180427 15:50:22.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:22.336" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:22.337" starttime="20180427 15:50:22.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.338" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:22.338" starttime="20180427 15:50:22.337"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:22.339" starttime="20180427 15:50:22.277"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:22.342" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:22.342" starttime="20180427 15:50:22.341"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:22.344" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:22.344" starttime="20180427 15:50:22.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:22.346" starttime="20180427 15:50:22.346"></status>
</kw>
<msg timestamp="20180427 15:50:22.346" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:22.347" starttime="20180427 15:50:22.344"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:22.348" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:22.393" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:22.394" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:22.394" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:22.394" starttime="20180427 15:50:22.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.395" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:22.395" starttime="20180427 15:50:22.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.396" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:22.397" starttime="20180427 15:50:22.396"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:22.398" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:22.398" starttime="20180427 15:50:22.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:22.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:22.399" starttime="20180427 15:50:22.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:22.400" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:22.401" starttime="20180427 15:50:22.400"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:22.401" starttime="20180427 15:50:22.339"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:50:22.402" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:50:22.479" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:50:22.480" starttime="20180427 15:50:22.402"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:22.484" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:50:22.484" starttime="20180427 15:50:22.482"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:22.485" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:50:22.485" starttime="20180427 15:50:22.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:22.488" starttime="20180427 15:50:22.487"></status>
</kw>
<msg timestamp="20180427 15:50:22.488" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:50:22.488" starttime="20180427 15:50:22.486"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:22.490" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:50:33.078" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:33.079" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:50:33.079" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:33.079" starttime="20180427 15:50:22.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:33.080" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 2079
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:50:33.081" starttime="20180427 15:50:33.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:33.082" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:33.082" starttime="20180427 15:50:33.081"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:33.084" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:50:33.084" starttime="20180427 15:50:33.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:33.085" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:33.085" starttime="20180427 15:50:33.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:33.086" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 2079
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:50:33.086" starttime="20180427 15:50:33.085"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:33.087" starttime="20180427 15:50:22.481"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:33.087" starttime="20180427 15:50:22.480"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:33.090" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:50:33.090" starttime="20180427 15:50:33.089"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:33.091" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:50:33.091" starttime="20180427 15:50:33.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:33.094" starttime="20180427 15:50:33.093"></status>
</kw>
<msg timestamp="20180427 15:50:33.094" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:50:33.094" starttime="20180427 15:50:33.092"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:33.095" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:50:33.142" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:33.143" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:50:33.143" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:33.143" starttime="20180427 15:50:33.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:33.144" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:50:33.145" starttime="20180427 15:50:33.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:33.146" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:33.146" starttime="20180427 15:50:33.145"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:33.147" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:50:33.147" starttime="20180427 15:50:33.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:33.148" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:33.148" starttime="20180427 15:50:33.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:33.149" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:50:33.150" starttime="20180427 15:50:33.149"></status>
</kw>
<msg timestamp="20180427 15:50:33.150" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:50:33.151" starttime="20180427 15:50:33.088"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:33.152" starttime="20180427 15:50:33.151"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:33.152" starttime="20180427 15:50:20.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:33.153" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:33.153" starttime="20180427 15:50:33.153"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/LogicInfoExtractor/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/LogicInfoExtractor/dbbak.sql</arg>
<arg>cp ${sfilefortest}/LogicInfoExtractor/1524735376941-2.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:50:33.157" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:50:33.186" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.187" starttime="20180427 15:50:33.156"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:50:33.189" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:50:33.234" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.234" starttime="20180427 15:50:33.188"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:50:33.236" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:50:33.280" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.281" starttime="20180427 15:50:33.235"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:50:33.282" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:50:33.327" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.328" starttime="20180427 15:50:33.281"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:50:33.329" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:50:33.374" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.375" starttime="20180427 15:50:33.328"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:50:33.376" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:50:33.453" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.454" starttime="20180427 15:50:33.375"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:50:33.456" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:50:33.501" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.501" starttime="20180427 15:50:33.455"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:50:33.502" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:50:33.547" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.547" starttime="20180427 15:50:33.501"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:50:33.548" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:50:33.594" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.594" starttime="20180427 15:50:33.548"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:50:33.596" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:50:33.642" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.642" starttime="20180427 15:50:33.595"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:50:33.643" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:50:33.688" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.689" starttime="20180427 15:50:33.643"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:50:33.690" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:50:33.767" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.768" starttime="20180427 15:50:33.689"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:50:33.769" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:50:33.814" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.815" starttime="20180427 15:50:33.768"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:50:33.816" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:50:33.861" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:50:33.862" starttime="20180427 15:50:33.815"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:33.865" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/LogicInfoExtractor/WorkflowManager/*', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/']</msg>
<status status="PASS" endtime="20180427 15:50:33.865" starttime="20180427 15:50:33.864"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:33.866" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:50:33.866" starttime="20180427 15:50:33.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:33.869" starttime="20180427 15:50:33.868"></status>
</kw>
<msg timestamp="20180427 15:50:33.869" level="INFO">${cmd} = cp -r ~/autotest/filefortest/LogicInfoExtractor/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</msg>
<status status="PASS" endtime="20180427 15:50:33.869" starttime="20180427 15:50:33.867"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:33.871" level="INFO">Executing command 'cp -r ~/autotest/filefortest/LogicInfoExtractor/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/'.</msg>
<msg timestamp="20180427 15:50:33.998" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:33.998" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:33.999" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:33.999" starttime="20180427 15:50:33.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:34.000" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:34.000" starttime="20180427 15:50:33.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:34.002" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:34.002" starttime="20180427 15:50:34.001"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:34.004" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:34.004" starttime="20180427 15:50:34.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:34.005" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:34.005" starttime="20180427 15:50:34.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:34.006" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:34.007" starttime="20180427 15:50:34.006"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:34.007" starttime="20180427 15:50:33.862"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:34.007" starttime="20180427 15:50:33.155"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:34.010" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/LogicInfoExtractor/dbbak.sql'.</msg>
<msg timestamp="20180427 15:50:35.737" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:35.738" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:35.738" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:35.739" starttime="20180427 15:50:34.009"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:35.740" starttime="20180427 15:50:35.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:35.741" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:35.741" starttime="20180427 15:50:35.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:35.742" starttime="20180427 15:50:35.741"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:35.743" starttime="20180427 15:50:34.008"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:35.745" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/LogicInfoExtractor/1524735376941-2.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/']</msg>
<status status="PASS" endtime="20180427 15:50:35.745" starttime="20180427 15:50:35.744"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:35.747" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:50:35.747" starttime="20180427 15:50:35.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:35.750" starttime="20180427 15:50:35.749"></status>
</kw>
<msg timestamp="20180427 15:50:35.750" level="INFO">${cmd} = cp ~/autotest/filefortest/LogicInfoExtractor/1524735376941-2.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/</msg>
<status status="PASS" endtime="20180427 15:50:35.750" starttime="20180427 15:50:35.747"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:35.751" level="INFO">Executing command 'cp ~/autotest/filefortest/LogicInfoExtractor/1524735376941-2.json /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/'.</msg>
<msg timestamp="20180427 15:50:35.796" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:35.797" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:35.797" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:35.797" starttime="20180427 15:50:35.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:35.798" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:35.799" starttime="20180427 15:50:35.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:35.800" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:35.800" starttime="20180427 15:50:35.799"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:35.801" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:35.801" starttime="20180427 15:50:35.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:35.802" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:35.802" starttime="20180427 15:50:35.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:35.803" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:35.804" starttime="20180427 15:50:35.803"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:35.804" starttime="20180427 15:50:35.743"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:35.804" starttime="20180427 15:50:33.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:35.805" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:35.806" starttime="20180427 15:50:35.805"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/logicInfoExtractor \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/1524735376941-2.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2 \ --manual \ --ol ${sOutput}/LogicInfoExtractor</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:35.808" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/logicInfoExtractor', u'', u'--ijson', u'', u'/opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/1524735376941-2.json', u'', u'--d', u'', u'/...</msg>
<status status="PASS" endtime="20180427 15:50:35.809" starttime="20180427 15:50:35.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:35.810" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/logicInfoExtractor</msg>
<status status="PASS" endtime="20180427 15:50:35.810" starttime="20180427 15:50:35.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:35.812" starttime="20180427 15:50:35.812"></status>
</kw>
<msg timestamp="20180427 15:50:35.813" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/logicInfoExtractor  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/1524735376941-2.json  --d  /opt/ygomi/roadDB/work_path/Workflow...</msg>
<status status="PASS" endtime="20180427 15:50:35.813" starttime="20180427 15:50:35.810"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:35.814" level="INFO">Executing command '/opt/ygomi/roadDB/bin/logicInfoExtractor  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/1524735376941-2.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2  --manual  --ol ~/autotest/output/LogicInfoExtractor'.</msg>
<msg timestamp="20180427 15:50:36.408" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:36.410" level="INFO">${stdout} = [2018-04-27 15:50:36.508][LogicInfoExtractor][debug][3359] [SYS] ENTER FUNCTION: main (logicInfoExtractor.cpp::52)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] module command: /opt/...</msg>
<msg timestamp="20180427 15:50:36.410" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:36.410" starttime="20180427 15:50:35.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.412" level="INFO">[2018-04-27 15:50:36.508][LogicInfoExtractor][debug][3359] [SYS] ENTER FUNCTION: main (logicInfoExtractor.cpp::52)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] module command: /opt/ygomi/roadDB/bin/logicInfoExtractor  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/1524735376941-2.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2  --manual  --ol  /home/roaddb/autotest/output/LogicInfoExtractor   (otherFuns.h::410)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] {
    "DivisionList": [
        "1490154494078484482",
        "1490154494078484481"
    ],
    "BackendDBStamp": "1524805573379",
    "LandmarkDBStamp": "1524806988482",
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426105014_2017-08-04_T_16-19-26.337_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104905_2017-07-31_T_19-18-48.508_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104936_2017-08-04_T_15-50-15.183_GMT_01.rtv_rt.out00_sdor.out"
        }
    ],
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:36.508][LogicInfoExtractor][warning][3359] [SYS] input configJson file not exist or not readable: rgConfig.json, now default config is used(all turn on) (logicInfoExtractorExcute.cpp:getLogicInfoExtractorInput:345)
input rgConfig file : rgConfig.json does not exist 
Usage: logicInfoExtractor --ijson ./logicInfoExtractor.json --ol server.log --d /debugdir
    Options:
        --ijson               Json formatted file, with input files list
        --iconfig             Config formatted file, with input files list(default: "rgConfig.json")
        --ol                  Output log file, print to stdout if not set
        --dbg                 Algorithm debug information or data folder(default: "cache_debug")
        --manual              manual mode. optional, default disable transaction.
        --api                 Print api version
        --version,-V          Print software version
        --level               Log level (default: 0 TRACE)
        --help                Print help information

[2018-04-27 15:50:36.508][LogicInfoExtractor][debug][3359] [SYS] ENTER FUNCTION: rdbLogicInfoExtractor (rdbLogicInfoExtractor.cpp::46)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] Log level: 0 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:55)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] start server LogicInfoExtractor. (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:56)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [COM] {
    "DivisionList": [
        "1490154494078484482",
        "1490154494078484481"
    ],
    "BackendDBStamp": "1524805573379",
    "LandmarkDBStamp": "1524806988482",
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426105014_2017-08-04_T_16-19-26.337_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104905_2017-07-31_T_19-18-48.508_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104936_2017-08-04_T_15-50-15.183_GMT_01.rtv_rt.out00_sdor.out"
        }
    ],
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] LogicDB Version: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:62)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] MasterDB Version: 1 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:63)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] ==========parsing snippets divisions and transfering gps========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:71)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] parsing snippet file name:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426105014_2017-08-04_T_16-19-26.337_GMT_01.rtv_rt.out00_sdor.out (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:85)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions num is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:86)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:87)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:88)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:95)
[2018-04-27 15:50:36.509][LogicExtractor][debug][3359] [SYS] first snippet ref-segId is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:100)
[2018-04-27 15:50:36.510][LogicExtractor][debug][3359] [SYS] transfering snippet files gps to segId: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:104)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] parsing snippet file name:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426104905_2017-07-31_T_19-18-48.508_GMT_01.rtv_rt.out00_sdor.out (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:85)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions num is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:86)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:87)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:88)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:95)
[2018-04-27 15:50:36.511][LogicExtractor][debug][3359] [SYS] transfering snippet files gps to segId: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:104)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] parsing snippet file name:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426104936_2017-08-04_T_15-50-15.183_GMT_01.rtv_rt.out00_sdor.out (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:85)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions num is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:86)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:87)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:88)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:95)
[2018-04-27 15:50:36.513][LogicExtractor][debug][3359] [SYS] transfering snippet files gps to segId: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:104)
[2018-04-27 15:50:36.513][LogicExtractor][info][3359] [SYS] ==========preparing backendData transfer========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:119)
[2018-04-27 15:50:36.516][LogicExtractor][debug][3359] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:50:36.517][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.525][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.525][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.530][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.530][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:50:36.536][LogicExtractor][debug][3359] [SYS] initialized backendData Transfer by mannual mode, genereate transaction id selfly,ref-seg is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:131)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] wait to get geoDivisions size is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:234)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] ids:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:235)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:237)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] 	 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:240)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] 	 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:240)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:242)
[2018-04-27 15:50:36.536][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::735)
[2018-04-27 15:50:36.536][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.552][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:50:36.553][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] geo division list: (BackendDataTransfer.cpp:getGeoDivisions:772)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] geoDivision count : 2 (otherFuns.cpp:print:381)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (otherFuns.cpp:print:382)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:385)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:386)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:387)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDA: 1490154495152226305 (otherFuns.cpp:print:388)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDB: 1490154495152226306 (otherFuns.cpp:print:389)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:385)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:386)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:387)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDA: 1490154495152226306 (otherFuns.cpp:print:388)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDB: 1490154495152226307 (otherFuns.cpp:print:389)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] ##########END########## (otherFuns.cpp:print:392)
[2018-04-27 15:50:36.566][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::735)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] ==========preparing landMarkData transfer========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:254)
[2018-04-27 15:50:36.567][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] landmark data version id is : 1524806988482 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] initialized landMarkData Transfer by normal mode, using framework transcation id: 2,ref-seg is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:263)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] ==========preparing logicData transfer========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:276)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: buildDataAccess (LogicDAFactory.cpp::44)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: buildDARestful (LogicDAFactory.cpp::81)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] build logicDARestful now! (LogicDAFactory.cpp:buildDARestful:82)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: buildDARestful (LogicDAFactory.cpp::81)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.581][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: buildDataAccess (LogicDAFactory.cpp::44)
[2018-04-27 15:50:36.581][LogicExtractor][debug][3359] [SYS] initialized logicData Transfer by normal mode, using framework transcation id: 2,ref-seg is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:291)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ==========making RoadLogicImp struct========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:302)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ==========start processing T2' process========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:305)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ==========getting LogicDivisions and isolate Nodes from LandMarkDb========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:309)
[2018-04-27 15:50:36.581][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivNodes (RoadLogicImp.cpp::295)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] input geoDivision id size is : 2 (LandMarkDARestful.cpp:getLogicDivByGeoDiv:579)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ids: (LandMarkDARestful.cpp:getLogicDivByGeoDiv:580)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:581)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] 	geoDivision 1490154494078484481 (LandMarkDARestful.cpp:operator():583)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] 	geoDivision 1490154494078484482 (LandMarkDARestful.cpp:operator():583)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:584)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] the size of related logicDivision ids is : 2 (LandMarkDARestful.cpp:getLogicDivByGeoDiv:605)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ids: (LandMarkDARestful.cpp:getLogicDivByGeoDiv:606)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:607)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():609)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():609)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:610)
[2018-04-27 15:50:36.592][LogicExtractor][warning][3359] [SYS] no related isloate node found! (LandMarkDARestful.cpp:getLogicDivByGeoDiv:628)
[2018-04-27 15:50:36.592][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] input logicDivisions size is 2 (LandMarkDataTransfer.cpp:getLogicDivisions:115)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisions:116)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisions:117)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:getLogicDivisions:120)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:getLogicDivisions:120)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisions:122)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.605][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] get logicDivision's logicnode info (LandMarkDARestful.cpp:getLogicDivDetail:214)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] logicDivision id : 1490154494078484481 (LandMarkDARestful.cpp:getLogicDivDetail:217)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] logicNode ids size is: 2 (LandMarkDARestful.cpp:getLogicNodeDetail:294)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] ids :  (LandMarkDARestful.cpp:getLogicNodeDetail:295)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicNodeDetail:296)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] 	1490154495152226305 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] 	1490154495152226306 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicNodeDetail:299)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] logicDivision id : 1490154494078484482 (LandMarkDARestful.cpp:getLogicDivDetail:217)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] logicNode ids size is: 2 (LandMarkDARestful.cpp:getLogicNodeDetail:294)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] ids :  (LandMarkDARestful.cpp:getLogicNodeDetail:295)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicNodeDetail:296)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] 	1490154495152226306 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] 	1490154495152226307 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicNodeDetail:299)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] all get logicDivision(input &amp; exist) size is: 2 (LandMarkDataTransfer.cpp:getLogicDivisions:140)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ids: (LandMarkDataTransfer.cpp:getLogicDivisions:141)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisions:142)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisions:147)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] transfering logicDivision to ref-seg : 346953630 (LandMarkDataTransfer.cpp:getLogicDivisions:150)
[2018-04-27 15:50:36.630][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDataTransfer.cpp:getIsolateNodes:168)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] input node id size is: 0 (LandMarkDataTransfer.cpp:getIsolateNodes:170)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ids:  (LandMarkDataTransfer.cpp:getIsolateNodes:171)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getIsolateNodes:172)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getIsolateNodes:177)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.630][LogicExtractor][warning][3359] [SYS] input vecLogicNode Id size is 0! (LandMarkDARestful.cpp:getLogicNodeDetail:285)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] landmarkDataAccess get isolate nodes size is: 0 (LandMarkDataTransfer.cpp:getIsolateNodes:188)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] node id:  (LandMarkDataTransfer.cpp:getIsolateNodes:189)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getIsolateNodes:190)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getIsolateNodes:195)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get landMark DataTransfer logicDivision list size is: 2 (RoadLogicImp.cpp:getLogicDivNodes:324)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ids: (RoadLogicImp.cpp:getLogicDivNodes:325)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getLogicDivNodes:326)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (RoadLogicImp.cpp:getLogicDivNodes:330)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (RoadLogicImp.cpp:getLogicDivNodes:330)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getLogicDivNodes:332)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get landMark DataTransfer logicNode list size is: 0 (RoadLogicImp.cpp:getLogicDivNodes:334)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ids: (RoadLogicImp.cpp:getLogicDivNodes:335)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getLogicDivNodes:336)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getLogicDivNodes:342)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivNodes (RoadLogicImp.cpp::295)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] logicDivison from landmarkdb size is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:321)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS]  ids: (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:323)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:324)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] 	 logicDivsion 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:327)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] 	 logicDivsion 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:327)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:329)
[2018-04-27 15:50:36.631][LogicExtractor][warning][3359] [SYS] get isolateNodes from landmarkdb are empty! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:351)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ==========making LandmarkMergeSystem struct========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:354)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SDOR] Current base debug path: /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2 (LandmarkMergeSystem.cpp::126)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ==========algorithm start merging paintLines process========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:364)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; paint line size = 6 (RoadObjectSeparator.cpp::202)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; paint line size = 6 (RoadObjectSeparator.cpp::202)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; paint line size = 5 (RoadObjectSeparator.cpp::202)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SDOR] Input geometry divisions: 2, logic divisions: 2, reported snippet: 3, reported lanes: 3, reported logic points: 3 (PaintMerging.cpp::1586)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Parse Input Begin&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.632][LogicExtractor][debug][3359] [SDOR] Reference id : 346953630 (SdorDumper.cpp::814)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR] Input geometry division ids: (PaintMerging.cpp::2887)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     1490154494078484481 (PaintMerging.cpp::2890)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     1490154494078484482 (PaintMerging.cpp::2890)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR] Input logic division ids: (PaintMerging.cpp::2893)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     logic div: 1490154494078484481, geo div: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2904)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     logic div: 1490154494078484482, geo div: 1490154494078484482 (PaintMerging.cpp::2904)
[2018-04-27 15:50:36.637][LogicExtractor][debug][3359] [SDOR] Constructed trajectory size = 2, kdtrees size = 2 (PaintMerging.cpp::2913)
[2018-04-27 15:50:36.637][LogicExtractor][debug][3359] [SDOR] ---- Snippet: 0 / 3, reported line count: 6 (PaintMerging.cpp::2180)
[2018-04-27 15:50:36.638][LogicExtractor][debug][3359] [SDOR]      Snippet reported lane count: 0, 9 (PaintMerging.cpp::2219)
[2018-04-27 15:50:36.638][LogicExtractor][warning][3359] [SDOR] Line -2 not found in geometry. (ExtractLandmark.cpp::140)
[2018-04-27 15:50:36.639][LogicExtractor][debug][3359] [SDOR] Remove line ratio 4/6 (PaintMerging.cpp::2342)
[2018-04-27 15:50:36.639][LogicExtractor][trace][3359] [SDOR]     current group line cnt: 2 (PaintMerging.cpp::2351)
[2018-04-27 15:50:36.639][LogicExtractor][debug][3359] [SDOR] ---- Snippet: 1 / 3, reported line count: 6 (PaintMerging.cpp::2180)
[2018-04-27 15:50:36.640][LogicExtractor][debug][3359] [SDOR]      Snippet reported lane count: 1, 10 (PaintMerging.cpp::2219)
[2018-04-27 15:50:36.640][LogicExtractor][warning][3359] [SDOR] Line -2 not found in geometry. (ExtractLandmark.cpp::140)
[2018-04-27 15:50:36.641][LogicExtractor][debug][3359] [SDOR] Remove line ratio 4/6 (PaintMerging.cpp::2342)
[2018-04-27 15:50:36.641][LogicExtractor][trace][3359] [SDOR]     current group line cnt: 2 (PaintMerging.cpp::2351)
[2018-04-27 15:50:36.641][LogicExtractor][debug][3359] [SDOR] ---- Snippet: 2 / 3, reported line count: 5 (PaintMerging.cpp::2180)
[2018-04-27 15:50:36.641][LogicExtractor][debug][3359] [SDOR]      Snippet reported lane count: 2, 7 (PaintMerging.cpp::2219)
[2018-04-27 15:50:36.642][LogicExtractor][warning][3359] [SDOR] Line -2 not found in geometry. (ExtractLandmark.cpp::140)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR] Remove line ratio 3/5 (PaintMerging.cpp::2342)
[2018-04-27 15:50:36.643][LogicExtractor][trace][3359] [SDOR]     current group line cnt: 2 (PaintMerging.cpp::2351)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; reportGroupLines size: 3 (PaintMerging.cpp::3028)
[2018-04-27 15:50:36.643][LogicExtractor][trace][3359] [SDOR] parse report group lines: 0 / 3, reported groups: 0 ...  (PaintMerging.cpp::3032)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR] After select ramp paths:  (PaintMerging.cpp::3099)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (PaintMerging.cpp::3111)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR]     path count: 1 (PaintMerging.cpp::3115)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR]     group 0 reportLines count: 2 (PaintMerging.cpp::3200)
[2018-04-27 15:50:36.644][LogicExtractor][trace][3359] [SDOR] parse report group lines: 1 / 3, reported groups: 1 ...  (PaintMerging.cpp::3032)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] After select ramp paths:  (PaintMerging.cpp::3099)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (PaintMerging.cpp::3111)
[2018-04-27 15:50:36.644][LogicExtractor][debug][3359] [SDOR]     path count: 1 (PaintMerging.cpp::3115)
[2018-04-27 15:50:36.644][LogicExtractor][debug][3359] [SDOR]     group 1 reportLines count: 2 (PaintMerging.cpp::3200)
[2018-04-27 15:50:36.644][LogicExtractor][trace][3359] [SDOR] parse report group lines: 2 / 3, reported groups: 2 ...  (PaintMerging.cpp::3032)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] After select ramp paths:  (PaintMerging.cpp::3099)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (PaintMerging.cpp::3111)
[2018-04-27 15:50:36.644][LogicExtractor][debug][3359] [SDOR]     path count: 1 (PaintMerging.cpp::3115)
[2018-04-27 15:50:36.645][LogicExtractor][debug][3359] [SDOR]     group 2 reportLines count: 2 (PaintMerging.cpp::3200)
[2018-04-27 15:50:36.645][LogicExtractor][info][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Parse Input End&gt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.645][LogicExtractor][info][3359] [SDOR] ********************************Paint Merging Begin******************************** (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.645][LogicExtractor][info][3359] [SDOR] Original report group count: 3 (PaintMerging.cpp::1690)
[2018-04-27 15:50:36.645][LogicExtractor][trace][3359] [SDOR] processing group = 0 / 3, lineIndex = 0 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.645][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.647][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.653][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 996 (NURBS.h::5043)
[2018-04-27 15:50:36.655][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 547, 547, 995,  (NURBS.h::5190)
[2018-04-27 15:50:36.655][LogicExtractor][trace][3359] [SDOR] processing group = 0 / 3, lineIndex = 1 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.655][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.657][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.663][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 964 (NURBS.h::5043)
[2018-04-27 15:50:36.665][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 515, 515, 963,  (NURBS.h::5190)
[2018-04-27 15:50:36.665][LogicExtractor][info][3359] [SDOR] removed ratio:0/2 (PaintMerging.cpp::2100)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] end pairs: count=7 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=0 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 1: s=2, e=3 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 2: s=6, e=7 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 3: s=10, e=11 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 4: s=15, e=16 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 5: s=17, e=90 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 6: s=90, e=166 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] end pairs: count=14 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=2 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 1: s=14, e=17 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 2: s=27, e=30 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 3: s=39, e=43 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 4: s=50, e=53 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 5: s=60, e=63 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 6: s=76, e=79 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 7: s=89, e=92 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 8: s=102, e=106 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 9: s=115, e=118 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 10: s=127, e=131 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 11: s=139, e=142 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 12: s=151, e=154 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 13: s=160, e=160 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.676][LogicExtractor][trace][3359] [SDOR] processing group = 1 / 3, lineIndex = 0 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.676][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.678][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.685][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 996 (NURBS.h::5043)
[2018-04-27 15:50:36.687][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 547, 547, 995,  (NURBS.h::5190)
[2018-04-27 15:50:36.687][LogicExtractor][trace][3359] [SDOR] processing group = 1 / 3, lineIndex = 1 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.687][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.689][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.696][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 963 (NURBS.h::5043)
[2018-04-27 15:50:36.698][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 514, 514, 962,  (NURBS.h::5190)
[2018-04-27 15:50:36.698][LogicExtractor][info][3359] [SDOR] removed ratio:0/2 (PaintMerging.cpp::2100)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] end pairs: count=7 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=0 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 1: s=2, e=3 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 2: s=6, e=7 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 3: s=10, e=12 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 4: s=14, e=15 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 5: s=17, e=90 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 6: s=90, e=166 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] end pairs: count=14 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=2 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 1: s=14, e=17 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 2: s=27, e=30 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 3: s=38, e=42 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 4: s=50, e=53 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 5: s=60, e=63 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 6: s=76, e=79 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 7: s=89, e=92 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 8: s=102, e=106 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 9: s=115, e=118 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 10: s=127, e=131 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 11: s=139, e=142 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 12: s=151, e=154 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 13: s=160, e=160 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.709][LogicExtractor][trace][3359] [SDOR] processing group = 2 / 3, lineIndex = 0 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.709][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.712][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.720][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 999 (NURBS.h::5043)
[2018-04-27 15:50:36.722][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 549, 549, 998,  (NURBS.h::5190)
[2018-04-27 15:50:36.722][LogicExtractor][trace][3359] [SDOR] processing group = 2 / 3, lineIndex = 1 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.722][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.724][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.732][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 963 (NURBS.h::5043)
[2018-04-27 15:50:36.734][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 514, 514, 962,  (NURBS.h::5190)
[2018-04-27 15:50:36.734][LogicExtractor][info][3359] [SDOR] removed ratio:0/2 (PaintMerging.cpp::2100)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] end pairs: count=7 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=0 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 1: s=3, e=4 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 2: s=7, e=8 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 3: s=10, e=11 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 4: s=14, e=15 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 5: s=17, e=90 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 6: s=90, e=166 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] end pairs: count=14 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=2 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 1: s=14, e=17 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 2: s=27, e=30 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 3: s=38, e=41 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 4: s=50, e=53 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 5: s=60, e=63 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 6: s=76, e=79 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 7: s=89, e=92 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 8: s=102, e=106 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 9: s=115, e=118 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 10: s=127, e=131 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 11: s=139, e=142 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 12: s=151, e=154 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 13: s=160, e=160 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] *********************************Paint Merging end********************************* (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] ++++++++++++++++++++++++++++++++++++++++Traffic Sign Merge Begin++++++++++++++++++++++++++++++++++++++++ (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] Input traffic sign snippet cnt: 0 (TrafficSignMerging.cpp::142)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] ++++++++++++++++++++++++++++++++++++++++ Traffic Sign Merge End++++++++++++++++++++++++++++++++++++++++ (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] ----------------------------------------Sort Data Begin---------------------------------------- (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.746][LogicExtractor][debug][3359] [SDOR] sectionNum: 2 (SortSectionData.cpp::233)
[2018-04-27 15:50:36.747][LogicExtractor][debug][3359] [SDOR] In progress: 0 / 2, Section ID: 1490154494078484481 (SortSectionData.cpp::237)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] Selected reference line id: 0 (SortSectionData.cpp::273)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] distance and overlap index with reference line: (CurveDistance.cpp::349)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] Line 0:dist=-6.294015475e-05,overlap idx=(0,1028) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] Line 1:dist=3.591360569,overlap idx=(0,1028) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] valid num=2 (CurveDistance.cpp::357)
[2018-04-27 15:50:36.750][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 0, distance: -6.294015475e-05, mid overlap idx with trajectory: 776 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.750][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 1, distance: 3.591360569, mid overlap idx with trajectory: 716 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.751][LogicExtractor][trace][3359] [SDOR]     Schema {schemaType: 22, lineType: 2 3 3 3 2 5 5, lineGroup: [ [ 0 1 2 3 4 ] [ 5 6 ]  ]} (SortSectionData.cpp::342)
[2018-04-27 15:50:36.752][LogicExtractor][trace][3359] [SDOR]     Updated reference line id: 0 (SortSectionData.cpp::383)
[2018-04-27 15:50:36.753][LogicExtractor][debug][3359] [SDOR] In progress: 1 / 2, Section ID: 1490154494078484482 (SortSectionData.cpp::237)
[2018-04-27 15:50:36.754][LogicExtractor][debug][3359] [SDOR] Selected reference line id: 1 (SortSectionData.cpp::273)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] distance and overlap index with reference line: (CurveDistance.cpp::349)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] Line 0:dist=-3.61218977,overlap idx=(0,899) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] Line 1:dist=6.509969535e-05,overlap idx=(0,899) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] valid num=2 (CurveDistance.cpp::357)
[2018-04-27 15:50:36.756][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 0, distance: -3.61218977, mid overlap idx with trajectory: 449 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.756][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 1, distance: 6.509969535e-05, mid overlap idx with trajectory: 449 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.757][LogicExtractor][trace][3359] [SDOR]     Schema {schemaType: 1, lineType: 2 3 3 3 2, lineGroup: [ [ 0 1 2 3 4 ]  ]} (SortSectionData.cpp::342)
[2018-04-27 15:50:36.758][LogicExtractor][trace][3359] [SDOR]     Updated reference line id: 1 (SortSectionData.cpp::383)
[2018-04-27 15:50:36.759][LogicExtractor][info][3359] [SDOR] ---------------------------------------- Sort Data End ---------------------------------------- (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.759][LogicExtractor][info][3359] [SDOR] =================================Paint Refinement Begin================================= (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.759][LogicExtractor][info][3359] [SDOR] Paint refinement configuration: restore paint type: true, fix paint gap length: false, paint strip length: 4, gap length: 10, tweak paint: true, reference segment ID: 346953630, debug directory: /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2/PaintRefiner/2018-04-27_15-50-36/, valid: true (PaintRefiner.cpp::815)
[2018-04-27 15:50:36.759][LogicExtractor][debug][3359] [SDOR] Division 1490154494078484482 line index in schema larger than paint count: lineIdxInSchema=2, paintCnt=2 (PaintRefiner.cpp::526)
[2018-04-27 15:50:36.759][LogicExtractor][debug][3359] [SDOR] Division 1490154494078484482 line index in schema larger than paint count: lineIdxInSchema=3, paintCnt=2 (PaintRefiner.cpp::526)
[2018-04-27 15:50:36.759][LogicExtractor][debug][3359] [SDOR] Division 1490154494078484482 line index in schema larger than paint count: lineIdxInSchema=4, paintCnt=2 (PaintRefiner.cpp::526)
[2018-04-27 15:50:36.762][LogicExtractor][info][3359] [SDOR] Following divisions are free of refining: [] (PaintRefiner.cpp::846)
[2018-04-27 15:50:36.762][LogicExtractor][info][3359] [SDOR] [Refine within Section] Start to process 1 / 2 (PaintRefiner.cpp::864)
[2018-04-27 15:50:36.763][LogicExtractor][debug][3359] [SDOR] Handling paints of division 1490154494078484481... (PaintRefiner.cpp::925)
[2018-04-27 15:50:36.764][LogicExtractor][info][3359] [SDOR] 2 paints have been sampled. (PaintRefiner.cpp::958)
[2018-04-27 15:50:36.764][LogicExtractor][info][3359] [SDOR] Schema: {type: F_1_DIV_R, lineTypes: [2, 3, 3, 3, 2, 5, 5, ], lineGroups: [[0, 1, 2, 3, 4, ], [5, 6, ], ]} (PaintRefiner.cpp::1544)
[2018-04-27 15:50:36.764][LogicExtractor][warning][3359] [SDOR] CANNOT refine paints by schema due to inconsistent paint size. Available paint: 2, paint in schema: 7 (PaintRefiner.cpp::1555)
[2018-04-27 15:50:36.764][LogicExtractor][info][3359] [SDOR] Group size: 2. Succeeded groups: [] (PaintRefiner.cpp::1009)
[2018-04-27 15:50:36.767][LogicExtractor][debug][3359] [SDOR] Lane widths: [3.59136, ] (PaintRefiner.cpp::1053)
[2018-04-27 15:50:36.769][LogicExtractor][debug][3359] [SDOR] Paint ratios of division 1490154494078484481: {[0.307019, 0.497916, ], [0.433399, 0.999999, ]} (PaintRefiner.cpp::1079)
[2018-04-27 15:50:36.769][LogicExtractor][info][3359] [SDOR] [Refine within Section] Start to process 2 / 2 (PaintRefiner.cpp::864)
[2018-04-27 15:50:36.769][LogicExtractor][debug][3359] [SDOR] Handling paints of division 1490154494078484482... (PaintRefiner.cpp::925)
[2018-04-27 15:50:36.770][LogicExtractor][info][3359] [SDOR] 2 paints have been sampled. (PaintRefiner.cpp::958)
[2018-04-27 15:50:36.771][LogicExtractor][info][3359] [SDOR] Paints are generated by reference 1 (PaintRefiner.cpp::1442)
[2018-04-27 15:50:36.774][LogicExtractor][debug][3359] [SDOR] Lane widths: [3.61224, ] (PaintRefiner.cpp::1053)
[2018-04-27 15:50:36.775][LogicExtractor][debug][3359] [SDOR] Paint ratios of division 1490154494078484482: {[0.430457, 1, ], [0.483745, 1, ]} (PaintRefiner.cpp::1079)
[2018-04-27 15:50:36.777][LogicExtractor][debug][3359] [SDOR] Smoothing section process: 1 / 2, current section: 1490154494078484481 (PaintRefiner.cpp::4631)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] Current section: 1490154494078484481 (PaintRefiner.cpp::4853)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] 1 Neighbour sections: (PaintRefiner.cpp::4854)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR]     1490154494078484482 (PaintRefiner.cpp::4858)
[2018-04-27 15:50:36.778][LogicExtractor][debug][3359] [SDOR] MatchRelation of dash or solid score is empty! Start to find the best match by distance. (PaintRefiner.cpp::4538)
[2018-04-27 15:50:36.778][LogicExtractor][trace][3359] [SDOR] Map division each line info:  (PaintRefiner.cpp::5062)
[2018-04-27 15:50:36.778][LogicExtractor][trace][3359] [SDOR]     (index1, index2, sqrDist, bOverlap): (0:  (0, 0.00723526, 0) (1, 12.8453, 1) (PaintRefiner.cpp::5073)
[2018-04-27 15:50:36.778][LogicExtractor][trace][3359] [SDOR]     (index1, index2, sqrDist, bOverlap): (1:  (1, 0, 0) (0, 13.0484, 1) (PaintRefiner.cpp::5073)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] Final best match: [{0, 0}, {1, 1}, ] and minMeanSqrDist is: 0.003617631271 (PaintRefiner.cpp::4253)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] maxSqrDist: 0.007235262543 (PaintRefiner.cpp::3144)
[2018-04-27 15:50:36.782][LogicExtractor][trace][3359] [SDOR] Smoothed line end after segment: [671.564, 188.807, 788.291], [568.819, 190.429, 784.562]; [568.819, 190.429, 784.562], [479.051, 191.381, 781.734] (PaintRefiner.cpp::3333)
[2018-04-27 15:50:36.782][LogicExtractor][info][3359] [SDOR] maxSqrDist: 0 (PaintRefiner.cpp::3144)
[2018-04-27 15:50:36.784][LogicExtractor][trace][3359] [SDOR] Smoothed line end after segment: [678.499, 188.714, 792.101], [568.728, 190.438, 788.161]; [568.728, 190.438, 788.161], [478.94, 191.381, 785.345] (PaintRefiner.cpp::3333)
[2018-04-27 15:50:36.784][LogicExtractor][trace][3359] [SDOR] Unmatched line index of section: [] (PaintRefiner.cpp::4357)
[2018-04-27 15:50:36.784][LogicExtractor][trace][3359] [SDOR] Unmatched line index of section: [] (PaintRefiner.cpp::4357)
[2018-04-27 15:50:36.784][LogicExtractor][debug][3359] [SDOR] Smoothing section process: 2 / 2, current section: 1490154494078484482 (PaintRefiner.cpp::4631)
[2018-04-27 15:50:36.784][LogicExtractor][warning][3359] [SDOR] No neighbors for section 1490154494078484482 to smooth with. (PaintRefiner.cpp::4830)
[2018-04-27 15:50:36.786][LogicExtractor][info][3359] [SDOR] ==================================Paint Refinement end================================== (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.786][LogicExtractor][info][3359] [COM] 
Module LandmarkMergeSystem, total time(ms): 155
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    PaintMerging::merge:                            115       1       115.000  74.19%
    PaintRefiner::refine:                            27       1        27.000  17.42%
    SortSectionData::sort:                           13       1        13.000   8.39%
    TrafficSignMerging::merge:                        0       1         0.000   0.00%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module NURBS, total time(ms): 41
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    checkFitData:                                     0      24         0.000   0.00%
    fitCurve:                                         3      24         0.125   1.94%
    generateCurve:                                   18     406         0.044  11.61%
    getDPresult:                                      1      24         0.042   0.65%
    outSample:                                       15     511         0.029   9.68%
    sampleAndEnd:                                     1      24         0.042   0.65%
    segmentInAssortedSecEx:                           2      11         0.182   1.29%
    segmentInRedundantSec:                            1       8         0.125   0.65%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module RlowessSmoother, total time(ms): 5
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    smooth:                                           5       2         2.500   3.23%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module PaintMerging, total time(ms): 111
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    TackleOneReportLine:                             67       6        11.167  43.23%
    getDivTrajectory:                                 4       1         4.000   2.58%
    getHistoryPoints:                                19       6         3.167  12.26%
    groupData:                                        3       6         0.500   1.94%
    isSameGroupLines:                                 1      24         0.042   0.65%
    mergeLines:                                      17       6         2.833  10.97%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module PaintRefiner, total time(ms): 55
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    calcPaintStripRatio:                              1       4         0.250   0.65%
    findBestMatchWithDist:                            0       1         0.000   0.00%
    findClosestPoint:                                 0      82         0.000   0.00%
    findLeftFork:                                     0       2         0.000   0.00%
    generatePaint:                                    1       2         0.500   0.65%
    getAllPaintsAttributes:                           1       2         0.500   0.65%
    refineBetweenSections:                           11       1        11.000   7.10%
    refinePaintsBySchema:                             0       1         0.000   0.00%
    refineWithinSection:                             13       2         6.500   8.39%
    refitNurbs:                                       2       2         1.000   1.29%
    restoreAllPaintsAttribute:                        1       1         1.000   0.65%
    slicePaintsByType:                                0       2         0.000   0.00%
    smooth:                                           7       2         3.500   4.52%
    smoothMatchedLines:                               6       1         6.000   3.87%
    smoothTwoLines:                                   6       2         3.000   3.87%
    smoothTwoSections:                                6       1         6.000   3.87%
    smoothUnMatchedLines:                             0       1         0.000   0.00%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][debug][3359] [SYS] manual mode(true) : beginTransaction ! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:375)
[2018-04-27 15:50:36.787][LogicExtractor][debug][3359] [SYS] generate TransactionID manually! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:376)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.794][LogicExtractor][debug][3359] [SYS] TransactionID: 3 (LandMarkDARestful.cpp:beginTransaction:1186)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ==========start save LogicDivisons in landmarkDb========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:389)
[2018-04-27 15:50:36.794][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: saveLogicDivisions (RoadLogicImp.cpp::350)
[2018-04-27 15:50:36.794][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putLogicDivisions (LandMarkDataTransfer.cpp::319)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] wait to put splogicDivisions size:2 (LandMarkDataTransfer.cpp:putLogicDivisions:323)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ids: (LandMarkDataTransfer.cpp:putLogicDivisions:324)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:putLogicDivisions:325)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:putLogicDivisions:328)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:putLogicDivisions:328)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:putLogicDivisions:330)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] input logicDivision size is: 2 (LandMarkDARestful.cpp:putLogicDivImp:883)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] ids:  (LandMarkDARestful.cpp:putLogicDivImp:884)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:putLogicDivImp:885)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():887)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():887)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:putLogicDivImp:888)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.818][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.818][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putLogicDivisions (LandMarkDataTransfer.cpp::319)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] save landMark DataTransfer logicDiv list: (RoadLogicImp.cpp:saveLogicDivisions:364)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: saveLogicDivisions (RoadLogicImp.cpp::350)
[2018-04-27 15:50:36.837][LogicExtractor][warning][3359] [SYS] alg put 0 logicDivisions to landmarkDb! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:415)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ==========start processing T3 process========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:419)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] alg processing extract logic info (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:433)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getRefSegID (RoadLogicImp.cpp::87)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getRefSegID (RoadLogicImp.cpp::87)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getDivisionRelationMap (RoadLogicImp.cpp::34)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] get Passed and corresppond Affected logicDivId from landmarkDb (RoadLogicImp.cpp:getDivisionRelationMap:37)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] geoDivision ids size is : 2 (LandMarkDARestful.cpp:getDivConnection:653)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ids: (LandMarkDARestful.cpp:getDivConnection:654)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getDivConnection:655)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():657)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():657)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getDivConnection:658)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] the map of passed and afffected logicDivision size is: 2 (LandMarkDARestful.cpp:getDivConnection:677)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] map content is:  (LandMarkDARestful.cpp:getDivConnection:678)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getDivConnection:679)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed logicDivision id : 1490154494078484481 (LandMarkDARestful.cpp:getDivConnection:682)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 affected logicDivision id :  (LandMarkDARestful.cpp:getDivConnection:683)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 		 logicDivision1490154494078484482,  (LandMarkDARestful.cpp:operator():685)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed logicDivision id : 1490154494078484482 (LandMarkDARestful.cpp:getDivConnection:682)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 affected logicDivision id :  (LandMarkDARestful.cpp:getDivConnection:683)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 		 logicDivision1490154494078484481,  (LandMarkDARestful.cpp:operator():685)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getDivConnection:687)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed&amp;affected relations size is: 2 (RoadLogicImp.cpp:getDivisionRelationMap:67)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] map contents are: (RoadLogicImp.cpp:getDivisionRelationMap:68)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getDivisionRelationMap:69)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed div id: 1490154494078484481 (RoadLogicImp.cpp:getDivisionRelationMap:73)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 ---&gt; affected div id: 1490154494078484482 (RoadLogicImp.cpp:getDivisionRelationMap:76)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed div id: 1490154494078484482 (RoadLogicImp.cpp:getDivisionRelationMap:73)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 ---&gt; affected div id: 1490154494078484481 (RoadLogicImp.cpp:getDivisionRelationMap:76)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getDivisionRelationMap:79)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getDivisionRelationMap (RoadLogicImp.cpp::34)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivisions (RoadLogicImp.cpp::94)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] all get logicDivision(input &amp; exist) size is: 2 (LandMarkDataTransfer.cpp:getLogicDivisions:140)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ids: (LandMarkDataTransfer.cpp:getLogicDivisions:141)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisions:142)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisions:147)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] transfering logicDivision to ref-seg : 346953630 (LandMarkDataTransfer.cpp:getLogicDivisions:150)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] LandMark logicDivisions size is: 2 (RoadLogicImp.cpp:getLogicDivisions:104)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ids: (RoadLogicImp.cpp:getLogicDivisions:105)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getLogicDivisions:106)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (RoadLogicImp.cpp:getLogicDivisions:110)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (RoadLogicImp.cpp:getLogicDivisions:110)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getLogicDivisions:112)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivisions (RoadLogicImp.cpp::94)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLaneConnection (RoadLogicImp.cpp::120)
[2018-04-27 15:50:36.851][LogicExtractor][warning][3359] [SYS] getLaneConnection input 0 affected logicDivision ids! (RoadLogicImp.cpp:getLaneConnection:134)
[2018-04-27 15:50:36.851][LogicExtractor][warning][3359] [SYS] affected divisions list is empty! (LogicDataTransfer.cpp:getLaneConnection:97)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] list get affected laneConnection map (RoadLogicImp.cpp:getLaneConnection:145)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLaneConnection (RoadLogicImp.cpp::120)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR] section id:1490154494078484481 (LogicInfoExtractor.cpp::140)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 0 truncate type:2, start pt(0,0,0), end pt(568.8186035,784.5625,190.4287872) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 1 truncate type:2, start pt(0,0,0), end pt(568.7283325,788.1610718,190.438385) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR] section id:1490154494078484482 (LogicInfoExtractor.cpp::140)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 0 truncate type:1, start pt(568.8186035,784.5625,190.4287872), end pt(0,0,0) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 1 truncate type:1, start pt(568.7283325,788.1610718,190.438385), end pt(0,0,0) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.853][LogicExtractor][trace][3359] [SDOR] Updated section count: 2 (LogicInfoExtractor.cpp::187)
[2018-04-27 15:50:36.853][LogicExtractor][trace][3359] [SDOR]   1490154494078484481 (LogicInfoExtractor.cpp::190)
[2018-04-27 15:50:36.853][LogicExtractor][trace][3359] [SDOR]   1490154494078484482 (LogicInfoExtractor.cpp::190)
[2018-04-27 15:50:36.854][LogicExtractor][debug][3359] [SDOR] section 1490154494078484481, get 2 lines, sorted line count 2, discard line count 0 (LogicInfoExtractor.cpp::1704)
[2018-04-27 15:50:36.854][LogicExtractor][debug][3359] [SDOR] section 1490154494078484482, get 2 lines, sorted line count 2, discard line count 0 (LogicInfoExtractor.cpp::1704)
[2018-04-27 15:50:36.856][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putRoads (RoadLogicImp.cpp::165)
[2018-04-27 15:50:36.857][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putRoads (LogicDataTransfer.cpp::304)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] Alg put Road Division(duplicated) size is: 2 (LogicDataTransfer.cpp:putRoads:315)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ids:  (LogicDataTransfer.cpp:putRoads:316)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:putRoads:317)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (LogicDataTransfer.cpp:putRoads:320)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (LogicDataTransfer.cpp:putRoads:320)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:putRoads:323)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] LogicDataAccess put road logicDivision size is: 2 (LogicDataTransfer.cpp:putRoads:346)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ids: (LogicDataTransfer.cpp:putRoads:349)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:putRoads:350)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (LogicDataTransfer.cpp:putRoads:353)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (LogicDataTransfer.cpp:putRoads:353)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:putRoads:355)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] start getting segments affected by the road  (LogicDataTransfer.cpp:getAffectedSegID:224)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] road dbID : 1490154494078484481 (LogicDataTransfer.cpp:getAffectedSegID:287)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 passed Segments size are: 1 (LogicDataTransfer.cpp:getAffectedSegID:288)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 segIds are :  (LogicDataTransfer.cpp:getAffectedSegID:290)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:getAffectedSegID:292)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 		 Segment ID : 346953630 (LogicDataTransfer.cpp:getAffectedSegID:295)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:getAffectedSegID:297)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] start getting segments affected by the road  (LogicDataTransfer.cpp:getAffectedSegID:224)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] road dbID : 1490154494078484482 (LogicDataTransfer.cpp:getAffectedSegID:287)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 passed Segments size are: 1 (LogicDataTransfer.cpp:getAffectedSegID:288)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 segIds are :  (LogicDataTransfer.cpp:getAffectedSegID:290)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:getAffectedSegID:292)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 		 Segment ID : 346953630 (LogicDataTransfer.cpp:getAffectedSegID:295)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:getAffectedSegID:297)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] logicDataAccess start putting roads (LogicDataTransfer.cpp:putRoads:410)
[2018-04-27 15:50:36.857][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putRoads (LogicDARestful.cpp::725)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] LogicDARestful::putRoads roads vector size is 2 (LogicDARestful.cpp:putRoads:742)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] start to put Roads table,size is : 1 (LogicDARestful.cpp:putRoads:791)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] finish to put road table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:809)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] start to put lane table in LogicData ,size is 1 (LogicDARestful.cpp:putRoads:811)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] finish to put lane table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:842)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] LogicDARestful::buildLaneConnectionMap finish (LogicDARestful.cpp:buildLaneConnectionMap:348)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] start to put laneConnection table in LogicData, size is 1 (LogicDARestful.cpp:putRoads:846)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] finish to put laneConnection table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:877)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] finish to put line table in LogicData ,size is 1 (LogicDARestful.cpp:putRoads:879)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.891][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.891][LogicExtractor][info][3359] [SYS] finish to put line table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:910)
[2018-04-27 15:50:36.891][LogicExtractor][info][3359] [SYS] start to put curve table in LogicData, size is 1 (LogicDARestful.cpp:putRoads:912)
[2018-04-27 15:50:36.892][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.904][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.904][LogicExtractor][info][3359] [SYS] finish to put curve table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:943)
[2018-04-27 15:50:36.905][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putRoads (LogicDARestful.cpp::725)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] logicDataAccess start putting trafficSigns (LogicDataTransfer.cpp:putRoads:418)
[2018-04-27 15:50:36.905][LogicExtractor][warning][3359] [SYS] putTrafficSigns : input mapTrafficSigns size is 0 (LogicDARestful.cpp:putTrafficSigns:969)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] LogicDataTransfer put TrafficSigns success! (LogicDataTransfer.cpp:putTrafficSigns:503)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] logicDataAccess start putting roadsNodes (LogicDataTransfer.cpp:putRoads:426)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] landmark data version id is : 1524806988482 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] logicNode ids size is: 3 (LandMarkDARestful.cpp:getLogicNodeDetail:294)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] ids :  (LandMarkDARestful.cpp:getLogicNodeDetail:295)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicNodeDetail:296)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] 	1490154495152226305 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] 	1490154495152226306 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] 	1490154495152226307 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicNodeDetail:299)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.921][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.922][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.932][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putRoads (LogicDataTransfer.cpp::304)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] alg putRoads size is: 2 (RoadLogicImp.cpp:putRoads:220)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] id:  (RoadLogicImp.cpp:putRoads:221)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:putRoads:222)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] road id: 1490154494078484481 (RoadLogicImp.cpp:putRoads:225)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 lane id: 1490154494078484481_0 (RoadLogicImp.cpp:putRoads:229)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484481_0 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_0_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_0_1 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484481_1 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_1_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_1_1 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484481_100 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_100_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] road id: 1490154494078484482 (RoadLogicImp.cpp:putRoads:225)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 lane id: 1490154494078484482_0 (RoadLogicImp.cpp:putRoads:229)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484482_0 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_0_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_0_1 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484482_1 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_1_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484482_100 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_100_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:putRoads:251)
[2018-04-27 15:50:36.932][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putRoads (RoadLogicImp.cpp::165)
[2018-04-27 15:50:36.932][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putExternLaneConnection (RoadLogicImp.cpp::259)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] Alg put LaneConnection size is: 2 (LogicDataTransfer.cpp:putExternLaneConnection:555)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] LaneConnection division is:  (LogicDataTransfer.cpp:putExternLaneConnection:556)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:putExternLaneConnection:558)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (LogicDataTransfer.cpp:putExternLaneConnection:561)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (LogicDataTransfer.cpp:putExternLaneConnection:561)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:putExternLaneConnection:564)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] put LaneConnection division: (LogicDataTransfer.cpp:putExternLaneConnection:592)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] LogicDARestful::putLaneConnection success! (LogicDARestful.cpp:putExternLaneConnection:206)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] LogicDataTransfer put LaneConnections success! (LogicDataTransfer.cpp:putExternLaneConnection:641)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] list put affected laneConnection map size is: 2 (RoadLogicImp.cpp:putExternLaneConnection:270)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] list laneConnection map content (RoadLogicImp.cpp:putExternLaneConnection:271)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:putExternLaneConnection:272)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 	 divId: 1490154494078484481 (RoadLogicImp.cpp:putExternLaneConnection:276)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 		 src divid: 1490154494078484481,src index: 0, dst divid: 1490154494078484482,dst index: 0, relation: 1 (RoadLogicImp.cpp:putExternLaneConnection:279)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 	 divId: 1490154494078484482 (RoadLogicImp.cpp:putExternLaneConnection:276)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 		 src divid: 1490154494078484482,src index: 0, dst divid: 1490154494078484481,dst index: 0, relation: 0 (RoadLogicImp.cpp:putExternLaneConnection:279)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:putExternLaneConnection:286)
[2018-04-27 15:50:36.943][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putExternLaneConnection (RoadLogicImp.cpp::259)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] manual mode(true) : endTransaction ! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:439)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.977][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.977][LogicExtractor][info][3359] [SYS] End running of rdbLogicInfoExtractor. (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:454)
[2018-04-27 15:50:36.978][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: rdbLogicInfoExtractor (rdbLogicInfoExtractor.cpp::46)
[2018-04-27 15:50:36.978][LogicExtractor][info][3359] [SYS] LogicInfoExtractor return ok, value:0, fwRet: 0 (logicInfoExtractor.cpp:main:78)
[2018-04-27 15:50:36.978][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: main (logicInfoExtractor.cpp::52)</msg>
<status status="PASS" endtime="20180427 15:50:36.416" starttime="20180427 15:50:36.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.417" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:36.417" starttime="20180427 15:50:36.416"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:36.419" level="INFO">${rStdout} = [2018-04-27 15:50:36.508][LogicInfoExtractor][debug][3359] [SYS] ENTER FUNCTION: main (logicInfoExtractor.cpp::52)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] module command: /opt/...</msg>
<status status="PASS" endtime="20180427 15:50:36.419" starttime="20180427 15:50:36.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:36.420" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:36.420" starttime="20180427 15:50:36.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.422" level="INFO">[2018-04-27 15:50:36.508][LogicInfoExtractor][debug][3359] [SYS] ENTER FUNCTION: main (logicInfoExtractor.cpp::52)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] module command: /opt/ygomi/roadDB/bin/logicInfoExtractor  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson/1524735376941-2.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2  --manual  --ol  /home/roaddb/autotest/output/LogicInfoExtractor   (otherFuns.h::410)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:36.508][LogicInfoExtractor][info][3359] [COM] {
    "DivisionList": [
        "1490154494078484482",
        "1490154494078484481"
    ],
    "BackendDBStamp": "1524805573379",
    "LandmarkDBStamp": "1524806988482",
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426105014_2017-08-04_T_16-19-26.337_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104905_2017-07-31_T_19-18-48.508_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104936_2017-08-04_T_15-50-15.183_GMT_01.rtv_rt.out00_sdor.out"
        }
    ],
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:36.508][LogicInfoExtractor][warning][3359] [SYS] input configJson file not exist or not readable: rgConfig.json, now default config is used(all turn on) (logicInfoExtractorExcute.cpp:getLogicInfoExtractorInput:345)
input rgConfig file : rgConfig.json does not exist 
Usage: logicInfoExtractor --ijson ./logicInfoExtractor.json --ol server.log --d /debugdir
    Options:
        --ijson               Json formatted file, with input files list
        --iconfig             Config formatted file, with input files list(default: "rgConfig.json")
        --ol                  Output log file, print to stdout if not set
        --dbg                 Algorithm debug information or data folder(default: "cache_debug")
        --manual              manual mode. optional, default disable transaction.
        --api                 Print api version
        --version,-V          Print software version
        --level               Log level (default: 0 TRACE)
        --help                Print help information

[2018-04-27 15:50:36.508][LogicInfoExtractor][debug][3359] [SYS] ENTER FUNCTION: rdbLogicInfoExtractor (rdbLogicInfoExtractor.cpp::46)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] Log level: 0 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:55)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] start server LogicInfoExtractor. (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:56)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [COM] {
    "DivisionList": [
        "1490154494078484482",
        "1490154494078484481"
    ],
    "BackendDBStamp": "1524805573379",
    "LandmarkDBStamp": "1524806988482",
    "ReportData": [
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426105014_2017-08-04_T_16-19-26.337_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104905_2017-07-31_T_19-18-48.508_GMT_01.rtv_rt.out00_sdor.out"
        },
        {
            "snippet": "\/opt\/ygomi\/roadDB\/file_storage\/WorkflowManager\/unzip\/intergration-system-server1_20180426104936_2017-08-04_T_15-50-15.183_GMT_01.rtv_rt.out00_sdor.out"
        }
    ],
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] LogicDB Version: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:62)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] MasterDB Version: 1 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:63)
[2018-04-27 15:50:36.508][LogicExtractor][info][3359] [SYS] ==========parsing snippets divisions and transfering gps========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:71)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] parsing snippet file name:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426105014_2017-08-04_T_16-19-26.337_GMT_01.rtv_rt.out00_sdor.out (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:85)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions num is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:86)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:87)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:88)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.509][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:95)
[2018-04-27 15:50:36.509][LogicExtractor][debug][3359] [SYS] first snippet ref-segId is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:100)
[2018-04-27 15:50:36.510][LogicExtractor][debug][3359] [SYS] transfering snippet files gps to segId: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:104)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] parsing snippet file name:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426104905_2017-07-31_T_19-18-48.508_GMT_01.rtv_rt.out00_sdor.out (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:85)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions num is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:86)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:87)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:88)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.511][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:95)
[2018-04-27 15:50:36.511][LogicExtractor][debug][3359] [SYS] transfering snippet files gps to segId: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:104)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] parsing snippet file name:/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/intergration-system-server1_20180426104936_2017-08-04_T_15-50-15.183_GMT_01.rtv_rt.out00_sdor.out (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:85)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions num is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:86)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 	 passed geoDivisions:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:87)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:88)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] 		 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:93)
[2018-04-27 15:50:36.512][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:95)
[2018-04-27 15:50:36.513][LogicExtractor][debug][3359] [SYS] transfering snippet files gps to segId: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:104)
[2018-04-27 15:50:36.513][LogicExtractor][info][3359] [SYS] ==========preparing backendData transfer========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:119)
[2018-04-27 15:50:36.516][LogicExtractor][debug][3359] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:50:36.517][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.525][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.525][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.530][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.530][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:50:36.536][LogicExtractor][debug][3359] [SYS] initialized backendData Transfer by mannual mode, genereate transaction id selfly,ref-seg is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:131)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] wait to get geoDivisions size is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:234)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] ids:  (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:235)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:237)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] 	 geoDivision 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:240)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] 	 geoDivision 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:240)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:242)
[2018-04-27 15:50:36.536][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::735)
[2018-04-27 15:50:36.536][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:36.536][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.552][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:50:36.553][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:36.553][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] geo division list: (BackendDataTransfer.cpp:getGeoDivisions:772)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] geoDivision count : 2 (otherFuns.cpp:print:381)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (otherFuns.cpp:print:382)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:385)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:386)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:387)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDA: 1490154495152226305 (otherFuns.cpp:print:388)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDB: 1490154495152226306 (otherFuns.cpp:print:389)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:385)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:386)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:387)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDA: 1490154495152226306 (otherFuns.cpp:print:388)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] 	 geoDivision node IDB: 1490154495152226307 (otherFuns.cpp:print:389)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] ##########END########## (otherFuns.cpp:print:392)
[2018-04-27 15:50:36.566][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::735)
[2018-04-27 15:50:36.566][LogicExtractor][info][3359] [SYS] ==========preparing landMarkData transfer========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:254)
[2018-04-27 15:50:36.567][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] landmark data version id is : 1524806988482 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] initialized landMarkData Transfer by normal mode, using framework transcation id: 2,ref-seg is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:263)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] ==========preparing logicData transfer========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:276)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: buildDataAccess (LogicDAFactory.cpp::44)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: buildDARestful (LogicDAFactory.cpp::81)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] build logicDARestful now! (LogicDAFactory.cpp:buildDARestful:82)
[2018-04-27 15:50:36.574][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: buildDARestful (LogicDAFactory.cpp::81)
[2018-04-27 15:50:36.574][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.581][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: buildDataAccess (LogicDAFactory.cpp::44)
[2018-04-27 15:50:36.581][LogicExtractor][debug][3359] [SYS] initialized logicData Transfer by normal mode, using framework transcation id: 2,ref-seg is: 346953630 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:291)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ==========making RoadLogicImp struct========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:302)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ==========start processing T2' process========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:305)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ==========getting LogicDivisions and isolate Nodes from LandMarkDb========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:309)
[2018-04-27 15:50:36.581][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivNodes (RoadLogicImp.cpp::295)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] input geoDivision id size is : 2 (LandMarkDARestful.cpp:getLogicDivByGeoDiv:579)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ids: (LandMarkDARestful.cpp:getLogicDivByGeoDiv:580)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:581)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] 	geoDivision 1490154494078484481 (LandMarkDARestful.cpp:operator():583)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] 	geoDivision 1490154494078484482 (LandMarkDARestful.cpp:operator():583)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:584)
[2018-04-27 15:50:36.581][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] the size of related logicDivision ids is : 2 (LandMarkDARestful.cpp:getLogicDivByGeoDiv:605)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ids: (LandMarkDARestful.cpp:getLogicDivByGeoDiv:606)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:607)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():609)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():609)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicDivByGeoDiv:610)
[2018-04-27 15:50:36.592][LogicExtractor][warning][3359] [SYS] no related isloate node found! (LandMarkDARestful.cpp:getLogicDivByGeoDiv:628)
[2018-04-27 15:50:36.592][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] input logicDivisions size is 2 (LandMarkDataTransfer.cpp:getLogicDivisions:115)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisions:116)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisions:117)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:getLogicDivisions:120)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:getLogicDivisions:120)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisions:122)
[2018-04-27 15:50:36.592][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.605][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] get logicDivision's logicnode info (LandMarkDARestful.cpp:getLogicDivDetail:214)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] logicDivision id : 1490154494078484481 (LandMarkDARestful.cpp:getLogicDivDetail:217)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] logicNode ids size is: 2 (LandMarkDARestful.cpp:getLogicNodeDetail:294)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] ids :  (LandMarkDARestful.cpp:getLogicNodeDetail:295)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicNodeDetail:296)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] 	1490154495152226305 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] 	1490154495152226306 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicNodeDetail:299)
[2018-04-27 15:50:36.606][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] logicDivision id : 1490154494078484482 (LandMarkDARestful.cpp:getLogicDivDetail:217)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] logicNode ids size is: 2 (LandMarkDARestful.cpp:getLogicNodeDetail:294)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] ids :  (LandMarkDARestful.cpp:getLogicNodeDetail:295)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicNodeDetail:296)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] 	1490154495152226306 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] 	1490154495152226307 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicNodeDetail:299)
[2018-04-27 15:50:36.618][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] all get logicDivision(input &amp; exist) size is: 2 (LandMarkDataTransfer.cpp:getLogicDivisions:140)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ids: (LandMarkDataTransfer.cpp:getLogicDivisions:141)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisions:142)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisions:147)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] transfering logicDivision to ref-seg : 346953630 (LandMarkDataTransfer.cpp:getLogicDivisions:150)
[2018-04-27 15:50:36.630][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDataTransfer.cpp:getIsolateNodes:168)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] input node id size is: 0 (LandMarkDataTransfer.cpp:getIsolateNodes:170)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ids:  (LandMarkDataTransfer.cpp:getIsolateNodes:171)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getIsolateNodes:172)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getIsolateNodes:177)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.630][LogicExtractor][warning][3359] [SYS] input vecLogicNode Id size is 0! (LandMarkDARestful.cpp:getLogicNodeDetail:285)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] landmarkDataAccess get isolate nodes size is: 0 (LandMarkDataTransfer.cpp:getIsolateNodes:188)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] node id:  (LandMarkDataTransfer.cpp:getIsolateNodes:189)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getIsolateNodes:190)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getIsolateNodes:195)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get landMark DataTransfer logicDivision list size is: 2 (RoadLogicImp.cpp:getLogicDivNodes:324)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ids: (RoadLogicImp.cpp:getLogicDivNodes:325)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getLogicDivNodes:326)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (RoadLogicImp.cpp:getLogicDivNodes:330)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (RoadLogicImp.cpp:getLogicDivNodes:330)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getLogicDivNodes:332)
[2018-04-27 15:50:36.630][LogicExtractor][info][3359] [SYS] get landMark DataTransfer logicNode list size is: 0 (RoadLogicImp.cpp:getLogicDivNodes:334)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ids: (RoadLogicImp.cpp:getLogicDivNodes:335)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getLogicDivNodes:336)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getLogicDivNodes:342)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivNodes (RoadLogicImp.cpp::295)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] logicDivison from landmarkdb size is: 2 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:321)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS]  ids: (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:323)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:324)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] 	 logicDivsion 1490154494078484481 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:327)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] 	 logicDivsion 1490154494078484482 (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:327)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ##########END########## (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:329)
[2018-04-27 15:50:36.631][LogicExtractor][warning][3359] [SYS] get isolateNodes from landmarkdb are empty! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:351)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ==========making LandmarkMergeSystem struct========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:354)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SDOR] Current base debug path: /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2 (LandmarkMergeSystem.cpp::126)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SYS] ==========algorithm start merging paintLines process========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:364)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; paint line size = 6 (RoadObjectSeparator.cpp::202)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; paint line size = 6 (RoadObjectSeparator.cpp::202)
[2018-04-27 15:50:36.631][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; paint line size = 5 (RoadObjectSeparator.cpp::202)
[2018-04-27 15:50:36.631][LogicExtractor][info][3359] [SDOR] Input geometry divisions: 2, logic divisions: 2, reported snippet: 3, reported lanes: 3, reported logic points: 3 (PaintMerging.cpp::1586)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.632][LogicExtractor][info][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Parse Input Begin&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.632][LogicExtractor][debug][3359] [SDOR] Reference id : 346953630 (SdorDumper.cpp::814)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR] Input geometry division ids: (PaintMerging.cpp::2887)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     1490154494078484481 (PaintMerging.cpp::2890)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     1490154494078484482 (PaintMerging.cpp::2890)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR] Input logic division ids: (PaintMerging.cpp::2893)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     logic div: 1490154494078484481, geo div: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2904)
[2018-04-27 15:50:36.633][LogicExtractor][debug][3359] [SDOR]     logic div: 1490154494078484482, geo div: 1490154494078484482 (PaintMerging.cpp::2904)
[2018-04-27 15:50:36.637][LogicExtractor][debug][3359] [SDOR] Constructed trajectory size = 2, kdtrees size = 2 (PaintMerging.cpp::2913)
[2018-04-27 15:50:36.637][LogicExtractor][debug][3359] [SDOR] ---- Snippet: 0 / 3, reported line count: 6 (PaintMerging.cpp::2180)
[2018-04-27 15:50:36.638][LogicExtractor][debug][3359] [SDOR]      Snippet reported lane count: 0, 9 (PaintMerging.cpp::2219)
[2018-04-27 15:50:36.638][LogicExtractor][warning][3359] [SDOR] Line -2 not found in geometry. (ExtractLandmark.cpp::140)
[2018-04-27 15:50:36.639][LogicExtractor][debug][3359] [SDOR] Remove line ratio 4/6 (PaintMerging.cpp::2342)
[2018-04-27 15:50:36.639][LogicExtractor][trace][3359] [SDOR]     current group line cnt: 2 (PaintMerging.cpp::2351)
[2018-04-27 15:50:36.639][LogicExtractor][debug][3359] [SDOR] ---- Snippet: 1 / 3, reported line count: 6 (PaintMerging.cpp::2180)
[2018-04-27 15:50:36.640][LogicExtractor][debug][3359] [SDOR]      Snippet reported lane count: 1, 10 (PaintMerging.cpp::2219)
[2018-04-27 15:50:36.640][LogicExtractor][warning][3359] [SDOR] Line -2 not found in geometry. (ExtractLandmark.cpp::140)
[2018-04-27 15:50:36.641][LogicExtractor][debug][3359] [SDOR] Remove line ratio 4/6 (PaintMerging.cpp::2342)
[2018-04-27 15:50:36.641][LogicExtractor][trace][3359] [SDOR]     current group line cnt: 2 (PaintMerging.cpp::2351)
[2018-04-27 15:50:36.641][LogicExtractor][debug][3359] [SDOR] ---- Snippet: 2 / 3, reported line count: 5 (PaintMerging.cpp::2180)
[2018-04-27 15:50:36.641][LogicExtractor][debug][3359] [SDOR]      Snippet reported lane count: 2, 7 (PaintMerging.cpp::2219)
[2018-04-27 15:50:36.642][LogicExtractor][warning][3359] [SDOR] Line -2 not found in geometry. (ExtractLandmark.cpp::140)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR] Remove line ratio 3/5 (PaintMerging.cpp::2342)
[2018-04-27 15:50:36.643][LogicExtractor][trace][3359] [SDOR]     current group line cnt: 2 (PaintMerging.cpp::2351)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; reportGroupLines size: 3 (PaintMerging.cpp::3028)
[2018-04-27 15:50:36.643][LogicExtractor][trace][3359] [SDOR] parse report group lines: 0 / 3, reported groups: 0 ...  (PaintMerging.cpp::3032)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR] After select ramp paths:  (PaintMerging.cpp::3099)
[2018-04-27 15:50:36.643][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (PaintMerging.cpp::3111)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR]     path count: 1 (PaintMerging.cpp::3115)
[2018-04-27 15:50:36.643][LogicExtractor][debug][3359] [SDOR]     group 0 reportLines count: 2 (PaintMerging.cpp::3200)
[2018-04-27 15:50:36.644][LogicExtractor][trace][3359] [SDOR] parse report group lines: 1 / 3, reported groups: 1 ...  (PaintMerging.cpp::3032)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] After select ramp paths:  (PaintMerging.cpp::3099)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (PaintMerging.cpp::3111)
[2018-04-27 15:50:36.644][LogicExtractor][debug][3359] [SDOR]     path count: 1 (PaintMerging.cpp::3115)
[2018-04-27 15:50:36.644][LogicExtractor][debug][3359] [SDOR]     group 1 reportLines count: 2 (PaintMerging.cpp::3200)
[2018-04-27 15:50:36.644][LogicExtractor][trace][3359] [SDOR] parse report group lines: 2 / 3, reported groups: 2 ...  (PaintMerging.cpp::3032)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Input IDs: 1490154494078484481 1490154494078484482 (NeighborInfoHelper.cpp::227)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] Find following paths:  (NeighborInfoHelper.cpp::229)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (NeighborInfoHelper.cpp::240)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR] After select ramp paths:  (PaintMerging.cpp::3099)
[2018-04-27 15:50:36.644][LogicExtractor][info][3359] [SDOR]     Path 0: 1490154494078484481--&gt;1490154494078484482--&gt; (PaintMerging.cpp::3111)
[2018-04-27 15:50:36.644][LogicExtractor][debug][3359] [SDOR]     path count: 1 (PaintMerging.cpp::3115)
[2018-04-27 15:50:36.645][LogicExtractor][debug][3359] [SDOR]     group 2 reportLines count: 2 (PaintMerging.cpp::3200)
[2018-04-27 15:50:36.645][LogicExtractor][info][3359] [SDOR] &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Parse Input End&gt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.645][LogicExtractor][info][3359] [SDOR] ********************************Paint Merging Begin******************************** (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.645][LogicExtractor][info][3359] [SDOR] Original report group count: 3 (PaintMerging.cpp::1690)
[2018-04-27 15:50:36.645][LogicExtractor][trace][3359] [SDOR] processing group = 0 / 3, lineIndex = 0 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.645][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.647][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.653][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 996 (NURBS.h::5043)
[2018-04-27 15:50:36.655][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 547, 547, 995,  (NURBS.h::5190)
[2018-04-27 15:50:36.655][LogicExtractor][trace][3359] [SDOR] processing group = 0 / 3, lineIndex = 1 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.655][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.657][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.663][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 964 (NURBS.h::5043)
[2018-04-27 15:50:36.665][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 515, 515, 963,  (NURBS.h::5190)
[2018-04-27 15:50:36.665][LogicExtractor][info][3359] [SDOR] removed ratio:0/2 (PaintMerging.cpp::2100)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] end pairs: count=7 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=0 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 1: s=2, e=3 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 2: s=6, e=7 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 3: s=10, e=11 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 4: s=15, e=16 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 5: s=17, e=90 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.668][LogicExtractor][debug][3359] [SDOR] Pair 6: s=90, e=166 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] end pairs: count=14 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=2 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 1: s=14, e=17 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 2: s=27, e=30 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 3: s=39, e=43 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 4: s=50, e=53 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 5: s=60, e=63 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 6: s=76, e=79 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 7: s=89, e=92 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 8: s=102, e=106 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 9: s=115, e=118 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 10: s=127, e=131 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 11: s=139, e=142 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 12: s=151, e=154 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.671][LogicExtractor][debug][3359] [SDOR] Pair 13: s=160, e=160 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.676][LogicExtractor][trace][3359] [SDOR] processing group = 1 / 3, lineIndex = 0 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.676][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.678][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.685][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 996 (NURBS.h::5043)
[2018-04-27 15:50:36.687][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 547, 547, 995,  (NURBS.h::5190)
[2018-04-27 15:50:36.687][LogicExtractor][trace][3359] [SDOR] processing group = 1 / 3, lineIndex = 1 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.687][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.689][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.696][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 963 (NURBS.h::5043)
[2018-04-27 15:50:36.698][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 514, 514, 962,  (NURBS.h::5190)
[2018-04-27 15:50:36.698][LogicExtractor][info][3359] [SDOR] removed ratio:0/2 (PaintMerging.cpp::2100)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] end pairs: count=7 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=0 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 1: s=2, e=3 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 2: s=6, e=7 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 3: s=10, e=12 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 4: s=14, e=15 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 5: s=17, e=90 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.701][LogicExtractor][debug][3359] [SDOR] Pair 6: s=90, e=166 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] end pairs: count=14 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=2 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 1: s=14, e=17 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 2: s=27, e=30 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 3: s=38, e=42 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 4: s=50, e=53 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 5: s=60, e=63 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 6: s=76, e=79 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 7: s=89, e=92 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 8: s=102, e=106 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 9: s=115, e=118 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 10: s=127, e=131 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 11: s=139, e=142 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 12: s=151, e=154 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.705][LogicExtractor][debug][3359] [SDOR] Pair 13: s=160, e=160 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.709][LogicExtractor][trace][3359] [SDOR] processing group = 2 / 3, lineIndex = 0 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.709][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.712][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.720][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 999 (NURBS.h::5043)
[2018-04-27 15:50:36.722][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 549, 549, 998,  (NURBS.h::5190)
[2018-04-27 15:50:36.722][LogicExtractor][trace][3359] [SDOR] processing group = 2 / 3, lineIndex = 1 / 2 (PaintMerging.cpp::2018)
[2018-04-27 15:50:36.722][LogicExtractor][trace][3359] [SDOR]     logic divisions: 1490154494078484481 1490154494078484482 (PaintMerging.cpp::2030)
[2018-04-27 15:50:36.724][LogicExtractor][debug][3359] [SDOR] Display the valid divisions: vSecIndex.size() = 2
0, 1,  (NURBS.h::1919)
[2018-04-27 15:50:36.732][LogicExtractor][debug][3359] [SDOR] vDensePoint.size() = 963 (NURBS.h::5043)
[2018-04-27 15:50:36.734][LogicExtractor][debug][3359] [SDOR] Display the indexes of the segment points on the merge Line
vIndex.size() = 4
0, 514, 514, 962,  (NURBS.h::5190)
[2018-04-27 15:50:36.734][LogicExtractor][info][3359] [SDOR] removed ratio:0/2 (PaintMerging.cpp::2100)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] end pairs: count=7 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=0 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 1: s=3, e=4 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 2: s=7, e=8 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 3: s=10, e=11 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 4: s=14, e=15 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 5: s=17, e=90 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.737][LogicExtractor][debug][3359] [SDOR] Pair 6: s=90, e=166 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] end pairs: count=14 (SdorDumper.cpp::282)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 0: s=0, e=2 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 1: s=14, e=17 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 2: s=27, e=30 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 3: s=38, e=41 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 4: s=50, e=53 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 5: s=60, e=63 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 6: s=76, e=79 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 7: s=89, e=92 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 8: s=102, e=106 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 9: s=115, e=118 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 10: s=127, e=131 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 11: s=139, e=142 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 12: s=151, e=154 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.740][LogicExtractor][debug][3359] [SDOR] Pair 13: s=160, e=160 (SdorDumper.cpp::285)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] *********************************Paint Merging end********************************* (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] ++++++++++++++++++++++++++++++++++++++++Traffic Sign Merge Begin++++++++++++++++++++++++++++++++++++++++ (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] Input traffic sign snippet cnt: 0 (TrafficSignMerging.cpp::142)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] ++++++++++++++++++++++++++++++++++++++++ Traffic Sign Merge End++++++++++++++++++++++++++++++++++++++++ (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.746][LogicExtractor][info][3359] [SDOR] ----------------------------------------Sort Data Begin---------------------------------------- (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.746][LogicExtractor][debug][3359] [SDOR] sectionNum: 2 (SortSectionData.cpp::233)
[2018-04-27 15:50:36.747][LogicExtractor][debug][3359] [SDOR] In progress: 0 / 2, Section ID: 1490154494078484481 (SortSectionData.cpp::237)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] Selected reference line id: 0 (SortSectionData.cpp::273)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] distance and overlap index with reference line: (CurveDistance.cpp::349)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] Line 0:dist=-6.294015475e-05,overlap idx=(0,1028) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] Line 1:dist=3.591360569,overlap idx=(0,1028) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.748][LogicExtractor][debug][3359] [SDOR] valid num=2 (CurveDistance.cpp::357)
[2018-04-27 15:50:36.750][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 0, distance: -6.294015475e-05, mid overlap idx with trajectory: 776 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.750][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 1, distance: 3.591360569, mid overlap idx with trajectory: 716 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.751][LogicExtractor][trace][3359] [SDOR]     Schema {schemaType: 22, lineType: 2 3 3 3 2 5 5, lineGroup: [ [ 0 1 2 3 4 ] [ 5 6 ]  ]} (SortSectionData.cpp::342)
[2018-04-27 15:50:36.752][LogicExtractor][trace][3359] [SDOR]     Updated reference line id: 0 (SortSectionData.cpp::383)
[2018-04-27 15:50:36.753][LogicExtractor][debug][3359] [SDOR] In progress: 1 / 2, Section ID: 1490154494078484482 (SortSectionData.cpp::237)
[2018-04-27 15:50:36.754][LogicExtractor][debug][3359] [SDOR] Selected reference line id: 1 (SortSectionData.cpp::273)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] distance and overlap index with reference line: (CurveDistance.cpp::349)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] Line 0:dist=-3.61218977,overlap idx=(0,899) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] Line 1:dist=6.509969535e-05,overlap idx=(0,899) (CurveDistance.cpp::352)
[2018-04-27 15:50:36.755][LogicExtractor][debug][3359] [SDOR] valid num=2 (CurveDistance.cpp::357)
[2018-04-27 15:50:36.756][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 0, distance: -3.61218977, mid overlap idx with trajectory: 449 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.756][LogicExtractor][debug][3359] [SDOR] [before order]painting idx: 1, distance: 6.509969535e-05, mid overlap idx with trajectory: 449 (SortSectionData.cpp::748)
[2018-04-27 15:50:36.757][LogicExtractor][trace][3359] [SDOR]     Schema {schemaType: 1, lineType: 2 3 3 3 2, lineGroup: [ [ 0 1 2 3 4 ]  ]} (SortSectionData.cpp::342)
[2018-04-27 15:50:36.758][LogicExtractor][trace][3359] [SDOR]     Updated reference line id: 1 (SortSectionData.cpp::383)
[2018-04-27 15:50:36.759][LogicExtractor][info][3359] [SDOR] ---------------------------------------- Sort Data End ---------------------------------------- (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.759][LogicExtractor][info][3359] [SDOR] =================================Paint Refinement Begin================================= (ScopeMarkLogger.h::39)
[2018-04-27 15:50:36.759][LogicExtractor][info][3359] [SDOR] Paint refinement configuration: restore paint type: true, fix paint gap length: false, paint strip length: 4, gap length: 10, tweak paint: true, reference segment ID: 346953630, debug directory: /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug/debug-1520408740203-2/PaintRefiner/2018-04-27_15-50-36/, valid: true (PaintRefiner.cpp::815)
[2018-04-27 15:50:36.759][LogicExtractor][debug][3359] [SDOR] Division 1490154494078484482 line index in schema larger than paint count: lineIdxInSchema=2, paintCnt=2 (PaintRefiner.cpp::526)
[2018-04-27 15:50:36.759][LogicExtractor][debug][3359] [SDOR] Division 1490154494078484482 line index in schema larger than paint count: lineIdxInSchema=3, paintCnt=2 (PaintRefiner.cpp::526)
[2018-04-27 15:50:36.759][LogicExtractor][debug][3359] [SDOR] Division 1490154494078484482 line index in schema larger than paint count: lineIdxInSchema=4, paintCnt=2 (PaintRefiner.cpp::526)
[2018-04-27 15:50:36.762][LogicExtractor][info][3359] [SDOR] Following divisions are free of refining: [] (PaintRefiner.cpp::846)
[2018-04-27 15:50:36.762][LogicExtractor][info][3359] [SDOR] [Refine within Section] Start to process 1 / 2 (PaintRefiner.cpp::864)
[2018-04-27 15:50:36.763][LogicExtractor][debug][3359] [SDOR] Handling paints of division 1490154494078484481... (PaintRefiner.cpp::925)
[2018-04-27 15:50:36.764][LogicExtractor][info][3359] [SDOR] 2 paints have been sampled. (PaintRefiner.cpp::958)
[2018-04-27 15:50:36.764][LogicExtractor][info][3359] [SDOR] Schema: {type: F_1_DIV_R, lineTypes: [2, 3, 3, 3, 2, 5, 5, ], lineGroups: [[0, 1, 2, 3, 4, ], [5, 6, ], ]} (PaintRefiner.cpp::1544)
[2018-04-27 15:50:36.764][LogicExtractor][warning][3359] [SDOR] CANNOT refine paints by schema due to inconsistent paint size. Available paint: 2, paint in schema: 7 (PaintRefiner.cpp::1555)
[2018-04-27 15:50:36.764][LogicExtractor][info][3359] [SDOR] Group size: 2. Succeeded groups: [] (PaintRefiner.cpp::1009)
[2018-04-27 15:50:36.767][LogicExtractor][debug][3359] [SDOR] Lane widths: [3.59136, ] (PaintRefiner.cpp::1053)
[2018-04-27 15:50:36.769][LogicExtractor][debug][3359] [SDOR] Paint ratios of division 1490154494078484481: {[0.307019, 0.497916, ], [0.433399, 0.999999, ]} (PaintRefiner.cpp::1079)
[2018-04-27 15:50:36.769][LogicExtractor][info][3359] [SDOR] [Refine within Section] Start to process 2 / 2 (PaintRefiner.cpp::864)
[2018-04-27 15:50:36.769][LogicExtractor][debug][3359] [SDOR] Handling paints of division 1490154494078484482... (PaintRefiner.cpp::925)
[2018-04-27 15:50:36.770][LogicExtractor][info][3359] [SDOR] 2 paints have been sampled. (PaintRefiner.cpp::958)
[2018-04-27 15:50:36.771][LogicExtractor][info][3359] [SDOR] Paints are generated by reference 1 (PaintRefiner.cpp::1442)
[2018-04-27 15:50:36.774][LogicExtractor][debug][3359] [SDOR] Lane widths: [3.61224, ] (PaintRefiner.cpp::1053)
[2018-04-27 15:50:36.775][LogicExtractor][debug][3359] [SDOR] Paint ratios of division 1490154494078484482: {[0.430457, 1, ], [0.483745, 1, ]} (PaintRefiner.cpp::1079)
[2018-04-27 15:50:36.777][LogicExtractor][debug][3359] [SDOR] Smoothing section process: 1 / 2, current section: 1490154494078484481 (PaintRefiner.cpp::4631)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] Current section: 1490154494078484481 (PaintRefiner.cpp::4853)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] 1 Neighbour sections: (PaintRefiner.cpp::4854)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR]     1490154494078484482 (PaintRefiner.cpp::4858)
[2018-04-27 15:50:36.778][LogicExtractor][debug][3359] [SDOR] MatchRelation of dash or solid score is empty! Start to find the best match by distance. (PaintRefiner.cpp::4538)
[2018-04-27 15:50:36.778][LogicExtractor][trace][3359] [SDOR] Map division each line info:  (PaintRefiner.cpp::5062)
[2018-04-27 15:50:36.778][LogicExtractor][trace][3359] [SDOR]     (index1, index2, sqrDist, bOverlap): (0:  (0, 0.00723526, 0) (1, 12.8453, 1) (PaintRefiner.cpp::5073)
[2018-04-27 15:50:36.778][LogicExtractor][trace][3359] [SDOR]     (index1, index2, sqrDist, bOverlap): (1:  (1, 0, 0) (0, 13.0484, 1) (PaintRefiner.cpp::5073)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] Final best match: [{0, 0}, {1, 1}, ] and minMeanSqrDist is: 0.003617631271 (PaintRefiner.cpp::4253)
[2018-04-27 15:50:36.778][LogicExtractor][info][3359] [SDOR] maxSqrDist: 0.007235262543 (PaintRefiner.cpp::3144)
[2018-04-27 15:50:36.782][LogicExtractor][trace][3359] [SDOR] Smoothed line end after segment: [671.564, 188.807, 788.291], [568.819, 190.429, 784.562]; [568.819, 190.429, 784.562], [479.051, 191.381, 781.734] (PaintRefiner.cpp::3333)
[2018-04-27 15:50:36.782][LogicExtractor][info][3359] [SDOR] maxSqrDist: 0 (PaintRefiner.cpp::3144)
[2018-04-27 15:50:36.784][LogicExtractor][trace][3359] [SDOR] Smoothed line end after segment: [678.499, 188.714, 792.101], [568.728, 190.438, 788.161]; [568.728, 190.438, 788.161], [478.94, 191.381, 785.345] (PaintRefiner.cpp::3333)
[2018-04-27 15:50:36.784][LogicExtractor][trace][3359] [SDOR] Unmatched line index of section: [] (PaintRefiner.cpp::4357)
[2018-04-27 15:50:36.784][LogicExtractor][trace][3359] [SDOR] Unmatched line index of section: [] (PaintRefiner.cpp::4357)
[2018-04-27 15:50:36.784][LogicExtractor][debug][3359] [SDOR] Smoothing section process: 2 / 2, current section: 1490154494078484482 (PaintRefiner.cpp::4631)
[2018-04-27 15:50:36.784][LogicExtractor][warning][3359] [SDOR] No neighbors for section 1490154494078484482 to smooth with. (PaintRefiner.cpp::4830)
[2018-04-27 15:50:36.786][LogicExtractor][info][3359] [SDOR] ==================================Paint Refinement end================================== (ScopeMarkLogger.h::44)
[2018-04-27 15:50:36.786][LogicExtractor][info][3359] [COM] 
Module LandmarkMergeSystem, total time(ms): 155
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    PaintMerging::merge:                            115       1       115.000  74.19%
    PaintRefiner::refine:                            27       1        27.000  17.42%
    SortSectionData::sort:                           13       1        13.000   8.39%
    TrafficSignMerging::merge:                        0       1         0.000   0.00%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module NURBS, total time(ms): 41
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    checkFitData:                                     0      24         0.000   0.00%
    fitCurve:                                         3      24         0.125   1.94%
    generateCurve:                                   18     406         0.044  11.61%
    getDPresult:                                      1      24         0.042   0.65%
    outSample:                                       15     511         0.029   9.68%
    sampleAndEnd:                                     1      24         0.042   0.65%
    segmentInAssortedSecEx:                           2      11         0.182   1.29%
    segmentInRedundantSec:                            1       8         0.125   0.65%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module RlowessSmoother, total time(ms): 5
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    smooth:                                           5       2         2.500   3.23%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module PaintMerging, total time(ms): 111
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    TackleOneReportLine:                             67       6        11.167  43.23%
    getDivTrajectory:                                 4       1         4.000   2.58%
    getHistoryPoints:                                19       6         3.167  12.26%
    groupData:                                        3       6         0.500   1.94%
    isSameGroupLines:                                 1      24         0.042   0.65%
    mergeLines:                                      17       6         2.833  10.97%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [COM] 
Module PaintRefiner, total time(ms): 55
    Function                             Total time(ms)  Called  Avg time(ms)  Ratio(%)
    calcPaintStripRatio:                              1       4         0.250   0.65%
    findBestMatchWithDist:                            0       1         0.000   0.00%
    findClosestPoint:                                 0      82         0.000   0.00%
    findLeftFork:                                     0       2         0.000   0.00%
    generatePaint:                                    1       2         0.500   0.65%
    getAllPaintsAttributes:                           1       2         0.500   0.65%
    refineBetweenSections:                           11       1        11.000   7.10%
    refinePaintsBySchema:                             0       1         0.000   0.00%
    refineWithinSection:                             13       2         6.500   8.39%
    refitNurbs:                                       2       2         1.000   1.29%
    restoreAllPaintsAttribute:                        1       1         1.000   0.65%
    slicePaintsByType:                                0       2         0.000   0.00%
    smooth:                                           7       2         3.500   4.52%
    smoothMatchedLines:                               6       1         6.000   3.87%
    smoothTwoLines:                                   6       2         3.000   3.87%
    smoothTwoSections:                                6       1         6.000   3.87%
    smoothUnMatchedLines:                             0       1         0.000   0.00%
 (PerformanceAnalysis.cpp::131)
[2018-04-27 15:50:36.787][LogicExtractor][debug][3359] [SYS] manual mode(true) : beginTransaction ! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:375)
[2018-04-27 15:50:36.787][LogicExtractor][debug][3359] [SYS] generate TransactionID manually! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:376)
[2018-04-27 15:50:36.787][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.794][LogicExtractor][debug][3359] [SYS] TransactionID: 3 (LandMarkDARestful.cpp:beginTransaction:1186)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ==========start save LogicDivisons in landmarkDb========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:389)
[2018-04-27 15:50:36.794][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: saveLogicDivisions (RoadLogicImp.cpp::350)
[2018-04-27 15:50:36.794][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putLogicDivisions (LandMarkDataTransfer.cpp::319)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] wait to put splogicDivisions size:2 (LandMarkDataTransfer.cpp:putLogicDivisions:323)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ids: (LandMarkDataTransfer.cpp:putLogicDivisions:324)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:putLogicDivisions:325)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:putLogicDivisions:328)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:putLogicDivisions:328)
[2018-04-27 15:50:36.794][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:putLogicDivisions:330)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] input logicDivision size is: 2 (LandMarkDARestful.cpp:putLogicDivImp:883)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] ids:  (LandMarkDARestful.cpp:putLogicDivImp:884)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:putLogicDivImp:885)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():887)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():887)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:putLogicDivImp:888)
[2018-04-27 15:50:36.795][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.818][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.818][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putLogicDivisions (LandMarkDataTransfer.cpp::319)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] save landMark DataTransfer logicDiv list: (RoadLogicImp.cpp:saveLogicDivisions:364)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: saveLogicDivisions (RoadLogicImp.cpp::350)
[2018-04-27 15:50:36.837][LogicExtractor][warning][3359] [SYS] alg put 0 logicDivisions to landmarkDb! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:415)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ==========start processing T3 process========== (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:419)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] alg processing extract logic info (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:433)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getRefSegID (RoadLogicImp.cpp::87)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getRefSegID (RoadLogicImp.cpp::87)
[2018-04-27 15:50:36.837][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getDivisionRelationMap (RoadLogicImp.cpp::34)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] get Passed and corresppond Affected logicDivId from landmarkDb (RoadLogicImp.cpp:getDivisionRelationMap:37)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] geoDivision ids size is : 2 (LandMarkDARestful.cpp:getDivConnection:653)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ids: (LandMarkDARestful.cpp:getDivConnection:654)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getDivConnection:655)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():657)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():657)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getDivConnection:658)
[2018-04-27 15:50:36.837][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] the map of passed and afffected logicDivision size is: 2 (LandMarkDARestful.cpp:getDivConnection:677)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] map content is:  (LandMarkDARestful.cpp:getDivConnection:678)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getDivConnection:679)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed logicDivision id : 1490154494078484481 (LandMarkDARestful.cpp:getDivConnection:682)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 affected logicDivision id :  (LandMarkDARestful.cpp:getDivConnection:683)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 		 logicDivision1490154494078484482,  (LandMarkDARestful.cpp:operator():685)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed logicDivision id : 1490154494078484482 (LandMarkDARestful.cpp:getDivConnection:682)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 affected logicDivision id :  (LandMarkDARestful.cpp:getDivConnection:683)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 		 logicDivision1490154494078484481,  (LandMarkDARestful.cpp:operator():685)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getDivConnection:687)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed&amp;affected relations size is: 2 (RoadLogicImp.cpp:getDivisionRelationMap:67)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] map contents are: (RoadLogicImp.cpp:getDivisionRelationMap:68)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getDivisionRelationMap:69)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed div id: 1490154494078484481 (RoadLogicImp.cpp:getDivisionRelationMap:73)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 ---&gt; affected div id: 1490154494078484482 (RoadLogicImp.cpp:getDivisionRelationMap:76)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] passed div id: 1490154494078484482 (RoadLogicImp.cpp:getDivisionRelationMap:73)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 ---&gt; affected div id: 1490154494078484481 (RoadLogicImp.cpp:getDivisionRelationMap:76)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getDivisionRelationMap:79)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getDivisionRelationMap (RoadLogicImp.cpp::34)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivisions (RoadLogicImp.cpp::94)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] all get logicDivision(input &amp; exist) size is: 2 (LandMarkDataTransfer.cpp:getLogicDivisions:140)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ids: (LandMarkDataTransfer.cpp:getLogicDivisions:141)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisions:142)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484481 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	logicDivision 1490154494078484482 (LandMarkDataTransfer.cpp:getLogicDivisions:145)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisions:147)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] transfering logicDivision to ref-seg : 346953630 (LandMarkDataTransfer.cpp:getLogicDivisions:150)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivisions (LandMarkDataTransfer.cpp::108)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] LandMark logicDivisions size is: 2 (RoadLogicImp.cpp:getLogicDivisions:104)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ids: (RoadLogicImp.cpp:getLogicDivisions:105)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:getLogicDivisions:106)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (RoadLogicImp.cpp:getLogicDivisions:110)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (RoadLogicImp.cpp:getLogicDivisions:110)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:getLogicDivisions:112)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLogicDivisions (RoadLogicImp.cpp::94)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: getLaneConnection (RoadLogicImp.cpp::120)
[2018-04-27 15:50:36.851][LogicExtractor][warning][3359] [SYS] getLaneConnection input 0 affected logicDivision ids! (RoadLogicImp.cpp:getLaneConnection:134)
[2018-04-27 15:50:36.851][LogicExtractor][warning][3359] [SYS] affected divisions list is empty! (LogicDataTransfer.cpp:getLaneConnection:97)
[2018-04-27 15:50:36.851][LogicExtractor][info][3359] [SYS] list get affected laneConnection map (RoadLogicImp.cpp:getLaneConnection:145)
[2018-04-27 15:50:36.851][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: getLaneConnection (RoadLogicImp.cpp::120)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR] section id:1490154494078484481 (LogicInfoExtractor.cpp::140)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 0 truncate type:2, start pt(0,0,0), end pt(568.8186035,784.5625,190.4287872) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 1 truncate type:2, start pt(0,0,0), end pt(568.7283325,788.1610718,190.438385) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR] section id:1490154494078484482 (LogicInfoExtractor.cpp::140)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 0 truncate type:1, start pt(568.8186035,784.5625,190.4287872), end pt(0,0,0) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.851][LogicExtractor][trace][3359] [SDOR]     line 1 truncate type:1, start pt(568.7283325,788.1610718,190.438385), end pt(0,0,0) (LogicInfoExtractor.cpp::146)
[2018-04-27 15:50:36.853][LogicExtractor][trace][3359] [SDOR] Updated section count: 2 (LogicInfoExtractor.cpp::187)
[2018-04-27 15:50:36.853][LogicExtractor][trace][3359] [SDOR]   1490154494078484481 (LogicInfoExtractor.cpp::190)
[2018-04-27 15:50:36.853][LogicExtractor][trace][3359] [SDOR]   1490154494078484482 (LogicInfoExtractor.cpp::190)
[2018-04-27 15:50:36.854][LogicExtractor][debug][3359] [SDOR] section 1490154494078484481, get 2 lines, sorted line count 2, discard line count 0 (LogicInfoExtractor.cpp::1704)
[2018-04-27 15:50:36.854][LogicExtractor][debug][3359] [SDOR] section 1490154494078484482, get 2 lines, sorted line count 2, discard line count 0 (LogicInfoExtractor.cpp::1704)
[2018-04-27 15:50:36.856][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putRoads (RoadLogicImp.cpp::165)
[2018-04-27 15:50:36.857][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putRoads (LogicDataTransfer.cpp::304)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] Alg put Road Division(duplicated) size is: 2 (LogicDataTransfer.cpp:putRoads:315)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ids:  (LogicDataTransfer.cpp:putRoads:316)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:putRoads:317)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (LogicDataTransfer.cpp:putRoads:320)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (LogicDataTransfer.cpp:putRoads:320)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:putRoads:323)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] LogicDataAccess put road logicDivision size is: 2 (LogicDataTransfer.cpp:putRoads:346)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ids: (LogicDataTransfer.cpp:putRoads:349)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:putRoads:350)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (LogicDataTransfer.cpp:putRoads:353)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (LogicDataTransfer.cpp:putRoads:353)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:putRoads:355)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] start getting segments affected by the road  (LogicDataTransfer.cpp:getAffectedSegID:224)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] road dbID : 1490154494078484481 (LogicDataTransfer.cpp:getAffectedSegID:287)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 passed Segments size are: 1 (LogicDataTransfer.cpp:getAffectedSegID:288)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 segIds are :  (LogicDataTransfer.cpp:getAffectedSegID:290)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:getAffectedSegID:292)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 		 Segment ID : 346953630 (LogicDataTransfer.cpp:getAffectedSegID:295)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:getAffectedSegID:297)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] start getting segments affected by the road  (LogicDataTransfer.cpp:getAffectedSegID:224)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] road dbID : 1490154494078484482 (LogicDataTransfer.cpp:getAffectedSegID:287)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 passed Segments size are: 1 (LogicDataTransfer.cpp:getAffectedSegID:288)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 	 segIds are :  (LogicDataTransfer.cpp:getAffectedSegID:290)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:getAffectedSegID:292)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] 		 Segment ID : 346953630 (LogicDataTransfer.cpp:getAffectedSegID:295)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:getAffectedSegID:297)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] logicDataAccess start putting roads (LogicDataTransfer.cpp:putRoads:410)
[2018-04-27 15:50:36.857][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putRoads (LogicDARestful.cpp::725)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] LogicDARestful::putRoads roads vector size is 2 (LogicDARestful.cpp:putRoads:742)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] start to put Roads table,size is : 1 (LogicDARestful.cpp:putRoads:791)
[2018-04-27 15:50:36.857][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] finish to put road table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:809)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] start to put lane table in LogicData ,size is 1 (LogicDARestful.cpp:putRoads:811)
[2018-04-27 15:50:36.870][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] finish to put lane table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:842)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] LogicDARestful::buildLaneConnectionMap finish (LogicDARestful.cpp:buildLaneConnectionMap:348)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] start to put laneConnection table in LogicData, size is 1 (LogicDARestful.cpp:putRoads:846)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] finish to put laneConnection table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:877)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] finish to put line table in LogicData ,size is 1 (LogicDARestful.cpp:putRoads:879)
[2018-04-27 15:50:36.881][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.891][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.891][LogicExtractor][info][3359] [SYS] finish to put line table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:910)
[2018-04-27 15:50:36.891][LogicExtractor][info][3359] [SYS] start to put curve table in LogicData, size is 1 (LogicDARestful.cpp:putRoads:912)
[2018-04-27 15:50:36.892][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.904][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.904][LogicExtractor][info][3359] [SYS] finish to put curve table in LogicData with code : 0X0,  (LogicDARestful.cpp:putRoads:943)
[2018-04-27 15:50:36.905][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putRoads (LogicDARestful.cpp::725)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] logicDataAccess start putting trafficSigns (LogicDataTransfer.cpp:putRoads:418)
[2018-04-27 15:50:36.905][LogicExtractor][warning][3359] [SYS] putTrafficSigns : input mapTrafficSigns size is 0 (LogicDARestful.cpp:putTrafficSigns:969)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] LogicDataTransfer put TrafficSigns success! (LogicDataTransfer.cpp:putTrafficSigns:503)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] logicDataAccess start putting roadsNodes (LogicDataTransfer.cpp:putRoads:426)
[2018-04-27 15:50:36.905][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] landmark data version id is : 1524806988482 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] get logicNode by node id (LandMarkDARestful.cpp:getLogicNodeDetail:279)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] logicNode ids size is: 3 (LandMarkDARestful.cpp:getLogicNodeDetail:294)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] ids :  (LandMarkDARestful.cpp:getLogicNodeDetail:295)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LandMarkDARestful.cpp:getLogicNodeDetail:296)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] 	1490154495152226305 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] 	1490154495152226306 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] 	1490154495152226307 (LandMarkDARestful.cpp:operator():298)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] ##########END########## (LandMarkDARestful.cpp:getLogicNodeDetail:299)
[2018-04-27 15:50:36.910][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.921][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.922][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.932][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putRoads (LogicDataTransfer.cpp::304)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] alg putRoads size is: 2 (RoadLogicImp.cpp:putRoads:220)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] id:  (RoadLogicImp.cpp:putRoads:221)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:putRoads:222)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] road id: 1490154494078484481 (RoadLogicImp.cpp:putRoads:225)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 lane id: 1490154494078484481_0 (RoadLogicImp.cpp:putRoads:229)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484481_0 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_0_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_0_1 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484481_1 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_1_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_1_1 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484481_100 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484481_100_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] road id: 1490154494078484482 (RoadLogicImp.cpp:putRoads:225)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 lane id: 1490154494078484482_0 (RoadLogicImp.cpp:putRoads:229)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484482_0 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_0_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_0_1 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484482_1 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_1_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 		 line id: 1490154494078484482_100 (RoadLogicImp.cpp:putRoads:236)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 			 curve id: 1490154494078484482_100_0 (RoadLogicImp.cpp:putRoads:240)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:putRoads:251)
[2018-04-27 15:50:36.932][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putRoads (RoadLogicImp.cpp::165)
[2018-04-27 15:50:36.932][LogicExtractor][debug][3359] [SYS] ENTER FUNCTION: putExternLaneConnection (RoadLogicImp.cpp::259)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] Alg put LaneConnection size is: 2 (LogicDataTransfer.cpp:putExternLaneConnection:555)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] LaneConnection division is:  (LogicDataTransfer.cpp:putExternLaneConnection:556)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (LogicDataTransfer.cpp:putExternLaneConnection:558)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484481 (LogicDataTransfer.cpp:putExternLaneConnection:561)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] 	 logicDivision 1490154494078484482 (LogicDataTransfer.cpp:putExternLaneConnection:561)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] ##########END########## (LogicDataTransfer.cpp:putExternLaneConnection:564)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] put LaneConnection division: (LogicDataTransfer.cpp:putExternLaneConnection:592)
[2018-04-27 15:50:36.932][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] LogicDARestful::putLaneConnection success! (LogicDARestful.cpp:putExternLaneConnection:206)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] LogicDataTransfer put LaneConnections success! (LogicDataTransfer.cpp:putExternLaneConnection:641)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] list put affected laneConnection map size is: 2 (RoadLogicImp.cpp:putExternLaneConnection:270)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] list laneConnection map content (RoadLogicImp.cpp:putExternLaneConnection:271)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] ##########BEGIN########## (RoadLogicImp.cpp:putExternLaneConnection:272)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 	 divId: 1490154494078484481 (RoadLogicImp.cpp:putExternLaneConnection:276)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 		 src divid: 1490154494078484481,src index: 0, dst divid: 1490154494078484482,dst index: 0, relation: 1 (RoadLogicImp.cpp:putExternLaneConnection:279)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 	 divId: 1490154494078484482 (RoadLogicImp.cpp:putExternLaneConnection:276)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] 		 src divid: 1490154494078484482,src index: 0, dst divid: 1490154494078484481,dst index: 0, relation: 0 (RoadLogicImp.cpp:putExternLaneConnection:279)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] ##########END########## (RoadLogicImp.cpp:putExternLaneConnection:286)
[2018-04-27 15:50:36.943][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: putExternLaneConnection (RoadLogicImp.cpp::259)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] manual mode(true) : endTransaction ! (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:439)
[2018-04-27 15:50:36.943][LogicExtractor][info][3359] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:36.977][LogicExtractor][info][3359] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:36.977][LogicExtractor][info][3359] [SYS] End running of rdbLogicInfoExtractor. (rdbLogicInfoExtractor.cpp:rdbLogicInfoExtractor:454)
[2018-04-27 15:50:36.978][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: rdbLogicInfoExtractor (rdbLogicInfoExtractor.cpp::46)
[2018-04-27 15:50:36.978][LogicExtractor][info][3359] [SYS] LogicInfoExtractor return ok, value:0, fwRet: 0 (logicInfoExtractor.cpp:main:78)
[2018-04-27 15:50:36.978][LogicExtractor][debug][3359] [SYS] LEAVE FUNCTION: main (logicInfoExtractor.cpp::52)</msg>
<status status="PASS" endtime="20180427 15:50:36.425" starttime="20180427 15:50:36.421"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.426" starttime="20180427 15:50:35.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:36.426" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:36.427" starttime="20180427 15:50:36.426"></status>
</kw>
<kw name="Query CoreDB Keyfield" library="utilities">
<arguments>
<arg>select count(*) from roads where transaction_id=3;</arg>
<arg>2</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>coredb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:50:36.441" level="INFO">Connecting using : pymysql.connect(db=coredb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:50:36.445" starttime="20180427 15:50:36.429"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20180427 15:50:36.446" level="INFO">Executing : Query  |  select count(*) from roads where transaction_id=3; </msg>
<msg timestamp="20180427 15:50:36.447" level="INFO">@{result} = [ (2,) ]</msg>
<status status="PASS" endtime="20180427 15:50:36.447" starttime="20180427 15:50:36.445"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{result}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.448" level="INFO">(2,)</msg>
<status status="PASS" endtime="20180427 15:50:36.448" starttime="20180427 15:50:36.448"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:50:36.448" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:50:36.449" starttime="20180427 15:50:36.448"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{Formatresult}</var>
</assign>
<msg timestamp="20180427 15:50:36.449" level="INFO">@{Formatresult} = [ ]</msg>
<status status="PASS" endtime="20180427 15:50:36.449" starttime="20180427 15:50:36.449"></status>
</kw>
<kw type="for" name="${results} IN [ @{result} ]">
<kw type="foritem" name="${results} = (2,)">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Formatresult}</arg>
<arg>${Results[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:36.450" starttime="20180427 15:50:36.450"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.450" starttime="20180427 15:50:36.449"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.450" starttime="20180427 15:50:36.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Results[0]}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.451" level="INFO">2</msg>
<status status="PASS" endtime="20180427 15:50:36.451" starttime="20180427 15:50:36.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Formatresult}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.451" level="INFO">[2]</msg>
<status status="PASS" endtime="20180427 15:50:36.451" starttime="20180427 15:50:36.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pKey}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.452" level="INFO">2</msg>
<status status="PASS" endtime="20180427 15:50:36.452" starttime="20180427 15:50:36.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pKey}</arg>
<arg>${Formatresult[0]}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.452" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:36.452" starttime="20180427 15:50:36.452"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.452" starttime="20180427 15:50:36.427"></status>
</kw>
<kw name="Query CoreDB Keyfield" library="utilities">
<arguments>
<arg>select count(*) from coredb.lanes where transaction_id=3;</arg>
<arg>2</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>coredb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:50:36.453" level="INFO">Connecting using : pymysql.connect(db=coredb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:50:36.456" starttime="20180427 15:50:36.453"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20180427 15:50:36.458" level="INFO">Executing : Query  |  select count(*) from coredb.lanes where transaction_id=3; </msg>
<msg timestamp="20180427 15:50:36.460" level="INFO">@{result} = [ (2,) ]</msg>
<status status="PASS" endtime="20180427 15:50:36.460" starttime="20180427 15:50:36.457"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{result}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.461" level="INFO">(2,)</msg>
<status status="PASS" endtime="20180427 15:50:36.461" starttime="20180427 15:50:36.460"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:50:36.461" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:50:36.461" starttime="20180427 15:50:36.461"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{Formatresult}</var>
</assign>
<msg timestamp="20180427 15:50:36.461" level="INFO">@{Formatresult} = [ ]</msg>
<status status="PASS" endtime="20180427 15:50:36.461" starttime="20180427 15:50:36.461"></status>
</kw>
<kw type="for" name="${results} IN [ @{result} ]">
<kw type="foritem" name="${results} = (2,)">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Formatresult}</arg>
<arg>${Results[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:36.462" starttime="20180427 15:50:36.462"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.462" starttime="20180427 15:50:36.462"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.462" starttime="20180427 15:50:36.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Results[0]}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.463" level="INFO">2</msg>
<status status="PASS" endtime="20180427 15:50:36.463" starttime="20180427 15:50:36.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Formatresult}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.463" level="INFO">[2]</msg>
<status status="PASS" endtime="20180427 15:50:36.463" starttime="20180427 15:50:36.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pKey}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.464" level="INFO">2</msg>
<status status="PASS" endtime="20180427 15:50:36.464" starttime="20180427 15:50:36.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pKey}</arg>
<arg>${Formatresult[0]}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.464" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:36.464" starttime="20180427 15:50:36.464"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.464" starttime="20180427 15:50:36.453"></status>
</kw>
<kw name="Query CoreDB Keyfield" library="utilities">
<arguments>
<arg>select count(*) from coredb.lines where transaction_id=3;</arg>
<arg>6</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>coredb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:50:36.465" level="INFO">Connecting using : pymysql.connect(db=coredb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:50:36.468" starttime="20180427 15:50:36.465"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20180427 15:50:36.468" level="INFO">Executing : Query  |  select count(*) from coredb.lines where transaction_id=3; </msg>
<msg timestamp="20180427 15:50:36.470" level="INFO">@{result} = [ (6,) ]</msg>
<status status="PASS" endtime="20180427 15:50:36.470" starttime="20180427 15:50:36.468"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{result}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.470" level="INFO">(6,)</msg>
<status status="PASS" endtime="20180427 15:50:36.470" starttime="20180427 15:50:36.470"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:50:36.471" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:50:36.471" starttime="20180427 15:50:36.471"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{Formatresult}</var>
</assign>
<msg timestamp="20180427 15:50:36.471" level="INFO">@{Formatresult} = [ ]</msg>
<status status="PASS" endtime="20180427 15:50:36.471" starttime="20180427 15:50:36.471"></status>
</kw>
<kw type="for" name="${results} IN [ @{result} ]">
<kw type="foritem" name="${results} = (6,)">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Formatresult}</arg>
<arg>${Results[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:36.472" starttime="20180427 15:50:36.472"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.472" starttime="20180427 15:50:36.471"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.472" starttime="20180427 15:50:36.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Results[0]}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.472" level="INFO">6</msg>
<status status="PASS" endtime="20180427 15:50:36.472" starttime="20180427 15:50:36.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Formatresult}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.473" level="INFO">[6]</msg>
<status status="PASS" endtime="20180427 15:50:36.473" starttime="20180427 15:50:36.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pKey}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.473" level="INFO">6</msg>
<status status="PASS" endtime="20180427 15:50:36.473" starttime="20180427 15:50:36.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pKey}</arg>
<arg>${Formatresult[0]}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.474" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:36.474" starttime="20180427 15:50:36.473"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:36.474" starttime="20180427 15:50:36.465"></status>
</kw>
<doc>| Description | test normal logicinfoextract of sdor snippet |
| Input | 1.DB,gpsskeleton,roadskeleton |
| | 2.input json |
| | 3.sdor |
| Execute | call the command line to process logicinfoextract |
| Expect result | 1.road information in DB,included coredb.roads,coredb.lanes,coredb.lines. |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:50:36.474" critical="yes" starttime="20180427 15:50:20.775"></status>
</test>
<doc>| Description | test normal logicinfoextract of sdor snippet |
| Input | 1.DB,gpsskeleton,roadskeleton |
| | 2.input json |
| | 3.sdor |
| Execute | call the command line to process logicinfoextract |
| Expect result | 1.road information in DB,included coredb.roads,coredb.lanes,coredb.lines. |</doc>
<status status="PASS" endtime="20180427 15:50:36.474" starttime="20180427 15:50:20.767"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System/RepairDivisionTool.txt" id="s1-s3-s4" name="RepairDivisionTool">
<test id="s1-s3-s4-t1" name="Gpsskeleton Full Import">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.483" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:50:36.483" starttime="20180427 15:50:36.483"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:50:36.485" starttime="20180427 15:50:36.483"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:36.486" starttime="20180427 15:50:36.485"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:50:36.486" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:50:37.959" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:50:21 CST 2018

  System load:  3.0                Processes:           303
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:50:21 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:50:37.960" starttime="20180427 15:50:36.486"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:37.960" starttime="20180427 15:50:36.482"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:37.963" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:37.963" starttime="20180427 15:50:37.962"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:37.964" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:37.964" starttime="20180427 15:50:37.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:37.965" starttime="20180427 15:50:37.965"></status>
</kw>
<msg timestamp="20180427 15:50:37.965" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:37.965" starttime="20180427 15:50:37.965"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:37.966" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:37.989" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:37.989" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:37.989" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:37.990" starttime="20180427 15:50:37.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:37.991" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:37.991" starttime="20180427 15:50:37.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:37.992" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:37.992" starttime="20180427 15:50:37.991"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:37.993" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:37.993" starttime="20180427 15:50:37.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:37.994" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:37.995" starttime="20180427 15:50:37.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:37.996" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:37.996" starttime="20180427 15:50:37.995"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:37.997" starttime="20180427 15:50:37.960"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:37.999" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:50:37.999" starttime="20180427 15:50:37.998"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:38.000" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:38.000" starttime="20180427 15:50:37.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:38.003" starttime="20180427 15:50:38.002"></status>
</kw>
<msg timestamp="20180427 15:50:38.003" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:50:38.003" starttime="20180427 15:50:38.001"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:38.004" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:50:38.049" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:38.050" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:38.050" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:38.050" starttime="20180427 15:50:38.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:38.051" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:38.051" starttime="20180427 15:50:38.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:38.052" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:38.052" starttime="20180427 15:50:38.052"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:38.053" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:38.053" starttime="20180427 15:50:38.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:38.055" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:38.055" starttime="20180427 15:50:38.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:38.055" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:38.056" starttime="20180427 15:50:38.055"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:38.056" starttime="20180427 15:50:37.997"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:38.057" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:38.057" starttime="20180427 15:50:38.057"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:38.058" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:38.058" starttime="20180427 15:50:38.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:38.059" starttime="20180427 15:50:38.059"></status>
</kw>
<msg timestamp="20180427 15:50:38.060" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:38.060" starttime="20180427 15:50:38.058"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:38.060" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:38.103" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:38.104" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:38.104" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:38.104" starttime="20180427 15:50:38.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:38.105" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:38.106" starttime="20180427 15:50:38.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:38.106" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:38.107" starttime="20180427 15:50:38.106"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:38.108" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:38.108" starttime="20180427 15:50:38.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:38.109" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:38.109" starttime="20180427 15:50:38.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:38.110" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:38.110" starttime="20180427 15:50:38.110"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:38.111" starttime="20180427 15:50:38.056"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:50:38.112" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:50:38.156" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:50:38.157" starttime="20180427 15:50:38.111"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:38.160" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:50:38.160" starttime="20180427 15:50:38.159"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:38.161" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:50:38.161" starttime="20180427 15:50:38.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:38.164" starttime="20180427 15:50:38.163"></status>
</kw>
<msg timestamp="20180427 15:50:38.164" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:50:38.164" starttime="20180427 15:50:38.162"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:38.165" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:50:48.834" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:48.835" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:50:48.835" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:48.835" starttime="20180427 15:50:38.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:48.837" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 4434
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:50:48.837" starttime="20180427 15:50:48.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:48.838" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:48.838" starttime="20180427 15:50:48.837"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:48.840" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:50:48.840" starttime="20180427 15:50:48.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:48.841" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:48.841" starttime="20180427 15:50:48.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:48.842" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 4434
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:50:48.842" starttime="20180427 15:50:48.842"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:48.843" starttime="20180427 15:50:38.158"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:48.843" starttime="20180427 15:50:38.157"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:48.846" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:50:48.846" starttime="20180427 15:50:48.845"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:48.847" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:50:48.848" starttime="20180427 15:50:48.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:48.851" starttime="20180427 15:50:48.850"></status>
</kw>
<msg timestamp="20180427 15:50:48.851" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:50:48.851" starttime="20180427 15:50:48.848"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:48.852" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:50:48.897" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:48.898" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:50:48.898" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:48.898" starttime="20180427 15:50:48.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:48.899" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:50:48.900" starttime="20180427 15:50:48.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:48.901" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:48.901" starttime="20180427 15:50:48.900"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:48.902" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:50:48.902" starttime="20180427 15:50:48.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:48.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:48.904" starttime="20180427 15:50:48.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:48.905" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:50:48.905" starttime="20180427 15:50:48.904"></status>
</kw>
<msg timestamp="20180427 15:50:48.906" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:50:48.906" starttime="20180427 15:50:48.844"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:48.907" starttime="20180427 15:50:48.906"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:48.908" starttime="20180427 15:50:36.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:48.909" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:48.909" starttime="20180427 15:50:48.908"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:48.911" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/repairDivision', u'dir', u'~/autotest/rtv/gpsskeleton/', u'http://127.0.0.1:8080', u'idMap.txt', u'sectionID.txt']</msg>
<status status="PASS" endtime="20180427 15:50:48.911" starttime="20180427 15:50:48.910"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:48.912" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/repairDivision</msg>
<status status="PASS" endtime="20180427 15:50:48.913" starttime="20180427 15:50:48.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:48.915" starttime="20180427 15:50:48.915"></status>
</kw>
<msg timestamp="20180427 15:50:48.916" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</msg>
<status status="PASS" endtime="20180427 15:50:48.916" starttime="20180427 15:50:48.913"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:48.917" level="INFO">Executing command '/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt'.</msg>
<msg timestamp="20180427 15:50:49.191" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:49.192" level="INFO">${stdout} = [2018-04-27 15:50:49.540][repairDivision][info][5591] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  section...</msg>
<msg timestamp="20180427 15:50:49.192" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:49.192" starttime="20180427 15:50:48.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.193" level="INFO">[2018-04-27 15:50:49.540][repairDivision][info][5591] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:50:49.541][repairDivision][info][5591] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:50:49.543][repairDivision][info][5591] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:50:49.548][repairDivision][debug][5591] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:50:49.548][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.556][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.556][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.563][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.563][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.570][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.570][repairDivision][info][5591] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:50:49.570][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.579][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.579][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.589][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.589][repairDivision][info][5591] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:50:49.589][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.589][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.597][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] Division ID set is empty! (BackendDARestful.cpp:getDivisions:589)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] DBDivision count : 0 (otherFuns.cpp:print:424)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =9248866158155661314 (repairDivisionNode.cpp::249)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [TOOL] geo division id = 9248866158155661317 nodeA id =9248866158155661314 nodeB id =9248866158155661313 (repairDivisionNode.cpp::249)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] BackendData TransactionID: 1 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] ID: 9248866158155661313 coordinate: 469.663,779.927,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] ID: 9248866158155661314 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new geoDivision ID=1490154494078484481, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226305 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old Node ID: 9248866158155661314 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new Node ID. OldID----newID:9248866158155661314----1490154495152226306 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Generate ID for division: 9248866158155661317 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old geoDivision ID: 9248866158155661317 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new geoDivision ID=1490154494078484482, old geoDivision id=9248866158155661317, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old Node ID: 9248866158155661313 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new Node ID. OldID----newID:9248866158155661313----1490154495152226307 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDB: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDA: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDB: 9248866158155661313 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:49.605][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.626][repairDivision][debug][5591] [SYS] Divisions has been writen to backendDB, count = 2 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS]   division list: 1490154494078484481  1490154494078484482   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Save node ID: 1490154495152226307, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Save node ID: 1490154495152226305, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.648][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.649][repairDivision][debug][5591] [SYS] nodes has been writen to backendDB, rows = 3 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:50:49.649][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:50:49.649][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.687][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.687][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.695][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.695][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.695][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.705][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.705][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.705][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.705][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.720][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:50:49.721][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.735][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.735][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.735][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.737][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.744][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.744][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.762][repairDivision][warning][5591] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] &lt;Request&gt; -- RestDB_17_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] &lt;Response&gt; -- RestDB_17_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.773][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.773][repairDivision][warning][5591] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] &lt;Request&gt; -- RestDB_18_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] &lt;Response&gt; -- RestDB_18_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:50:49.774][repairDivision][warning][5591] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:50:49.194" starttime="20180427 15:50:49.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.195" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:49.196" starttime="20180427 15:50:49.195"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:49.197" level="INFO">${rStdout} = [2018-04-27 15:50:49.540][repairDivision][info][5591] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  section...</msg>
<status status="PASS" endtime="20180427 15:50:49.197" starttime="20180427 15:50:49.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:49.198" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:49.198" starttime="20180427 15:50:49.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.199" level="INFO">[2018-04-27 15:50:49.540][repairDivision][info][5591] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:50:49.541][repairDivision][info][5591] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:50:49.543][repairDivision][info][5591] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:50:49.544][repairDivision][debug][5591] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:50:49.544][repairDivision][info][5591] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:50:49.548][repairDivision][debug][5591] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:50:49.548][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.556][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.556][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.563][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.563][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.570][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.570][repairDivision][info][5591] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:50:49.570][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.579][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.579][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.589][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.589][repairDivision][info][5591] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:50:49.589][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.589][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.597][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] Division ID set is empty! (BackendDARestful.cpp:getDivisions:589)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] DBDivision count : 0 (otherFuns.cpp:print:424)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.598][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =9248866158155661314 (repairDivisionNode.cpp::249)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [TOOL] geo division id = 9248866158155661317 nodeA id =9248866158155661314 nodeB id =9248866158155661313 (repairDivisionNode.cpp::249)
[2018-04-27 15:50:49.598][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] BackendData TransactionID: 1 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] ID: 9248866158155661313 coordinate: 469.663,779.927,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] ID: 9248866158155661314 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new geoDivision ID=1490154494078484481, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226305 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old Node ID: 9248866158155661314 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new Node ID. OldID----newID:9248866158155661314----1490154495152226306 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Generate ID for division: 9248866158155661317 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old geoDivision ID: 9248866158155661317 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new geoDivision ID=1490154494078484482, old geoDivision id=9248866158155661317, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] Old Node ID: 9248866158155661313 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] Generate new Node ID. OldID----newID:9248866158155661313----1490154495152226307 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDB: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:50:49.604][repairDivision][debug][5591] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDA: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:50:49.604][repairDivision][info][5591] [SYS] nodeIDB: 9248866158155661313 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:50:49.605][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.626][repairDivision][debug][5591] [SYS] Divisions has been writen to backendDB, count = 2 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS]   division list: 1490154494078484481  1490154494078484482   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Save node ID: 1490154495152226307, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Save node ID: 1490154495152226305, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:50:49.626][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.648][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.649][repairDivision][debug][5591] [SYS] nodes has been writen to backendDB, rows = 3 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:50:49.649][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:50:49.649][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.687][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.687][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.695][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.695][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.695][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.705][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.705][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.705][repairDivision][debug][5591] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.705][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.720][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:50:49.721][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:50:49.721][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.735][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.735][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:50:49.735][repairDivision][debug][5591] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:50:49.737][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.744][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.744][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:50:49.750][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.762][repairDivision][warning][5591] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] &lt;Request&gt; -- RestDB_17_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] &lt;Response&gt; -- RestDB_17_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:50:49.762][repairDivision][info][5591] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:50:49.773][repairDivision][info][5591] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:50:49.773][repairDivision][warning][5591] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] &lt;Request&gt; -- RestDB_18_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] &lt;Response&gt; -- RestDB_18_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:50:49.774][repairDivision][info][5591] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:50:49.774][repairDivision][warning][5591] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:50:49.200" starttime="20180427 15:50:49.199"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.201" starttime="20180427 15:50:48.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:50:49.202" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:50:49.202" starttime="20180427 15:50:49.201"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from divisions;</arg>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:50:49.205" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:50:49.209" starttime="20180427 15:50:49.204"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:50:49.210" level="INFO">Executing : Query  |  select division_id from divisions; </msg>
<msg timestamp="20180427 15:50:49.213" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) ]</msg>
<status status="PASS" endtime="20180427 15:50:49.213" starttime="20180427 15:50:49.210"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.214" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:50:49.214" level="INFO">(1490154494078484482,)</msg>
<status status="PASS" endtime="20180427 15:50:49.215" starttime="20180427 15:50:49.214"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:50:49.216" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:50:49.216" starttime="20180427 15:50:49.215"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:50:49.217" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:50:49.217" starttime="20180427 15:50:49.216"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:50:49.219" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:50:49.219" starttime="20180427 15:50:49.218"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.221" starttime="20180427 15:50:49.220"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.221" starttime="20180427 15:50:49.218"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:50:49.222" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:50:49.222" starttime="20180427 15:50:49.221"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.224" starttime="20180427 15:50:49.223"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.224" starttime="20180427 15:50:49.221"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.224" starttime="20180427 15:50:49.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.225" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:50:49.226" starttime="20180427 15:50:49.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.227" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:50:49.227" starttime="20180427 15:50:49.226"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.228" starttime="20180427 15:50:49.227"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.228" starttime="20180427 15:50:49.203"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from division_trajectory;</arg>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:50:49.230" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:50:49.233" starttime="20180427 15:50:49.229"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:50:49.236" level="INFO">Executing : Query  |  select division_id from division_trajectory; </msg>
<msg timestamp="20180427 15:50:49.238" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) ]</msg>
<status status="PASS" endtime="20180427 15:50:49.238" starttime="20180427 15:50:49.234"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.239" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:50:49.239" level="INFO">(1490154494078484482,)</msg>
<status status="PASS" endtime="20180427 15:50:49.239" starttime="20180427 15:50:49.238"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:50:49.239" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:50:49.240" starttime="20180427 15:50:49.239"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:50:49.240" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:50:49.240" starttime="20180427 15:50:49.240"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:50:49.241" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:50:49.242" starttime="20180427 15:50:49.241"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.242" starttime="20180427 15:50:49.242"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.242" starttime="20180427 15:50:49.241"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:50:49.243" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:50:49.243" starttime="20180427 15:50:49.243"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.244" starttime="20180427 15:50:49.243"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.244" starttime="20180427 15:50:49.242"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.244" starttime="20180427 15:50:49.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.244" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:50:49.245" starttime="20180427 15:50:49.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.245" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:50:49.245" starttime="20180427 15:50:49.245"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.246" starttime="20180427 15:50:49.245"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:49.246" starttime="20180427 15:50:49.228"></status>
</kw>
<doc>| Description | test gpsskeleton full import function |
| Input | 1.gpsskeleton |
| Execute | call the command line to process skeleton import |
| Expect result | 1.gpsskeleton import success. |
| | 2.DB contain data. |</doc>
<tags>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:50:49.246" critical="yes" starttime="20180427 15:50:36.481"></status>
</test>
<test id="s1-s3-s4-t2" name="Gpsskeleton Icre Import">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.249" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:50:49.249" starttime="20180427 15:50:49.249"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:50:49.252" starttime="20180427 15:50:49.249"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:49.253" starttime="20180427 15:50:49.252"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:50:49.253" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:50:50.712" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:50:37 CST 2018

  System load:  2.49               Processes:           303
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:50:37 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:50:50.712" starttime="20180427 15:50:49.253"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:50.713" starttime="20180427 15:50:49.248"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:50.715" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:50.715" starttime="20180427 15:50:50.714"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:50.717" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:50.717" starttime="20180427 15:50:50.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:50.720" starttime="20180427 15:50:50.719"></status>
</kw>
<msg timestamp="20180427 15:50:50.720" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:50.720" starttime="20180427 15:50:50.718"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:50.721" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:50.736" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:50.737" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:50.737" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:50.737" starttime="20180427 15:50:50.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.738" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:50.739" starttime="20180427 15:50:50.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.740" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:50.740" starttime="20180427 15:50:50.739"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:50.741" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:50.741" starttime="20180427 15:50:50.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:50.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:50.743" starttime="20180427 15:50:50.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.744" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:50.744" starttime="20180427 15:50:50.743"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:50.744" starttime="20180427 15:50:50.713"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:50.747" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:50:50.747" starttime="20180427 15:50:50.746"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:50.748" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:50.748" starttime="20180427 15:50:50.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:50.751" starttime="20180427 15:50:50.750"></status>
</kw>
<msg timestamp="20180427 15:50:50.751" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:50:50.751" starttime="20180427 15:50:50.749"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:50.752" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:50:50.797" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:50.798" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:50.798" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:50.798" starttime="20180427 15:50:50.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.800" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:50.800" starttime="20180427 15:50:50.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.801" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:50.801" starttime="20180427 15:50:50.800"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:50.802" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:50.802" starttime="20180427 15:50:50.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:50.803" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:50.804" starttime="20180427 15:50:50.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.805" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:50.805" starttime="20180427 15:50:50.804"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:50.806" starttime="20180427 15:50:50.745"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:50.808" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:50:50.808" starttime="20180427 15:50:50.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:50.809" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:50:50.810" starttime="20180427 15:50:50.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:50.812" starttime="20180427 15:50:50.812"></status>
</kw>
<msg timestamp="20180427 15:50:50.813" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:50:50.813" starttime="20180427 15:50:50.810"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:50.814" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:50:50.859" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:50:50.860" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:50:50.860" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:50:50.860" starttime="20180427 15:50:50.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.861" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:50.861" starttime="20180427 15:50:50.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.862" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:50:50.863" starttime="20180427 15:50:50.862"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:50:50.864" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:50:50.864" starttime="20180427 15:50:50.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:50:50.865" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:50:50.865" starttime="20180427 15:50:50.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:50:50.866" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:50:50.867" starttime="20180427 15:50:50.866"></status>
</kw>
<status status="PASS" endtime="20180427 15:50:50.867" starttime="20180427 15:50:50.806"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:50:50.868" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:50:50.914" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:50:50.914" starttime="20180427 15:50:50.868"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:50:50.918" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:50:50.918" starttime="20180427 15:50:50.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:50:50.920" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:50:50.920" starttime="20180427 15:50:50.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:50:50.923" starttime="20180427 15:50:50.922"></status>
</kw>
<msg timestamp="20180427 15:50:50.924" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:50:50.924" starttime="20180427 15:50:50.920"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:50:50.926" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:51:01.584" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:01.585" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:51:01.585" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:01.585" starttime="20180427 15:50:50.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.587" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 6655
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:01.587" starttime="20180427 15:51:01.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.588" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:01.588" starttime="20180427 15:51:01.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:01.590" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:51:01.590" starttime="20180427 15:51:01.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:01.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:01.591" starttime="20180427 15:51:01.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.592" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 6655
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:01.593" starttime="20180427 15:51:01.592"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:01.593" starttime="20180427 15:50:50.915"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:01.593" starttime="20180427 15:50:50.914"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:01.596" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:51:01.596" starttime="20180427 15:51:01.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:01.598" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:01.598" starttime="20180427 15:51:01.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:01.600" starttime="20180427 15:51:01.600"></status>
</kw>
<msg timestamp="20180427 15:51:01.601" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:51:01.601" starttime="20180427 15:51:01.598"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:01.602" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:51:01.650" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:01.650" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:51:01.650" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:01.650" starttime="20180427 15:51:01.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.652" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:01.652" starttime="20180427 15:51:01.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.653" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:01.653" starttime="20180427 15:51:01.652"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:01.655" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:01.655" starttime="20180427 15:51:01.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:01.656" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:01.656" starttime="20180427 15:51:01.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.657" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:01.657" starttime="20180427 15:51:01.657"></status>
</kw>
<msg timestamp="20180427 15:51:01.658" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:01.658" starttime="20180427 15:51:01.594"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:01.659" starttime="20180427 15:51:01.658"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:01.660" starttime="20180427 15:50:49.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:01.661" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:01.661" starttime="20180427 15:51:01.660"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:01.663" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/repairDivision', u'dir', u'~/autotest/rtv/gpsskeleton/', u'http://127.0.0.1:8080', u'idMap.txt', u'sectionID.txt']</msg>
<status status="PASS" endtime="20180427 15:51:01.663" starttime="20180427 15:51:01.662"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:01.665" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/repairDivision</msg>
<status status="PASS" endtime="20180427 15:51:01.665" starttime="20180427 15:51:01.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:01.668" starttime="20180427 15:51:01.667"></status>
</kw>
<msg timestamp="20180427 15:51:01.668" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</msg>
<status status="PASS" endtime="20180427 15:51:01.668" starttime="20180427 15:51:01.665"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:01.669" level="INFO">Executing command '/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt'.</msg>
<msg timestamp="20180427 15:51:01.935" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:01.936" level="INFO">${stdout} = [2018-04-27 15:51:02.288][repairDivision][info][7812] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  section...</msg>
<msg timestamp="20180427 15:51:01.936" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:01.936" starttime="20180427 15:51:01.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.937" level="INFO">[2018-04-27 15:51:02.288][repairDivision][info][7812] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:51:02.289][repairDivision][info][7812] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:02.292][repairDivision][debug][7812] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:02.292][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.300][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.300][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.307][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.307][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.313][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.313][repairDivision][info][7812] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:02.313][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.321][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.322][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.331][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.331][repairDivision][info][7812] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:02.331][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.331][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Division ID set is empty! (BackendDARestful.cpp:getDivisions:589)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] DBDivision count : 0 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =9248866158155661314 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [TOOL] geo division id = 9248866158155661317 nodeA id =9248866158155661314 nodeB id =9248866158155661313 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.345][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] BackendData TransactionID: 1 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] ID: 9248866158155661313 coordinate: 469.663,779.927,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] ID: 9248866158155661314 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new geoDivision ID=1490154494078484481, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226305 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old Node ID: 9248866158155661314 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new Node ID. OldID----newID:9248866158155661314----1490154495152226306 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Generate ID for division: 9248866158155661317 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old geoDivision ID: 9248866158155661317 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new geoDivision ID=1490154494078484482, old geoDivision id=9248866158155661317, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old Node ID: 9248866158155661313 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new Node ID. OldID----newID:9248866158155661313----1490154495152226307 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDB: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDA: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDB: 9248866158155661313 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.364][repairDivision][debug][7812] [SYS] Divisions has been writen to backendDB, count = 2 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS]   division list: 1490154494078484481  1490154494078484482   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Save node ID: 1490154495152226307, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Save node ID: 1490154495152226305, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.386][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.386][repairDivision][debug][7812] [SYS] nodes has been writen to backendDB, rows = 3 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:51:02.386][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.386][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.425][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.425][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.430][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.431][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.431][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.445][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.445][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.445][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.445][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.458][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.459][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.473][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.474][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.474][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.474][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.481][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.481][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.498][repairDivision][warning][7812] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] &lt;Request&gt; -- RestDB_17_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] &lt;Response&gt; -- RestDB_17_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.509][repairDivision][warning][7812] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] &lt;Request&gt; -- RestDB_18_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] &lt;Response&gt; -- RestDB_18_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:02.509][repairDivision][warning][7812] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:51:01.939" starttime="20180427 15:51:01.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.940" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:01.942" starttime="20180427 15:51:01.939"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:01.944" level="INFO">${rStdout} = [2018-04-27 15:51:02.288][repairDivision][info][7812] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  section...</msg>
<status status="PASS" endtime="20180427 15:51:01.944" starttime="20180427 15:51:01.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:01.945" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:01.945" starttime="20180427 15:51:01.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:01.946" level="INFO">[2018-04-27 15:51:02.288][repairDivision][info][7812] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:51:02.288][repairDivision][info][7812] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:51:02.288][repairDivision][debug][7812] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:51:02.289][repairDivision][info][7812] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:02.292][repairDivision][debug][7812] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:02.292][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.300][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.300][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.307][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.307][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.313][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.313][repairDivision][info][7812] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:02.313][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.321][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.322][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.331][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.331][repairDivision][info][7812] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:02.331][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.331][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Division ID set is empty! (BackendDARestful.cpp:getDivisions:589)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] DBDivision count : 0 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.340][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =9248866158155661314 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [TOOL] geo division id = 9248866158155661317 nodeA id =9248866158155661314 nodeB id =9248866158155661313 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:02.340][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.345][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] BackendData TransactionID: 1 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] ID: 9248866158155661313 coordinate: 469.663,779.927,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] ID: 9248866158155661314 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new geoDivision ID=1490154494078484481, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226305 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old Node ID: 9248866158155661314 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new Node ID. OldID----newID:9248866158155661314----1490154495152226306 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Generate ID for division: 9248866158155661317 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old geoDivision ID: 9248866158155661317 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new geoDivision ID=1490154494078484482, old geoDivision id=9248866158155661317, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Old Node ID: 9248866158155661313 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] Generate new Node ID. OldID----newID:9248866158155661313----1490154495152226307 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDB: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:02.346][repairDivision][debug][7812] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDA: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] nodeIDB: 9248866158155661313 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:02.346][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.364][repairDivision][debug][7812] [SYS] Divisions has been writen to backendDB, count = 2 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS]   division list: 1490154494078484481  1490154494078484482   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Save node ID: 1490154495152226307, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Save node ID: 1490154495152226305, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.364][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.386][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.386][repairDivision][debug][7812] [SYS] nodes has been writen to backendDB, rows = 3 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:51:02.386][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.386][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.425][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.425][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.430][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.431][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.431][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.445][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.445][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.445][repairDivision][debug][7812] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.445][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.458][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.459][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.459][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.473][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.474][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.474][repairDivision][debug][7812] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.474][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.481][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.481][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:02.487][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.498][repairDivision][warning][7812] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] &lt;Request&gt; -- RestDB_17_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] &lt;Response&gt; -- RestDB_17_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:02.498][repairDivision][info][7812] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.509][repairDivision][warning][7812] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] &lt;Request&gt; -- RestDB_18_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] &lt;Response&gt; -- RestDB_18_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:02.509][repairDivision][info][7812] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:02.509][repairDivision][warning][7812] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:51:01.947" starttime="20180427 15:51:01.946"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:01.948" starttime="20180427 15:51:01.661"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>curl -X PUT -d '1490154494078484481' 'http://127.0.0.1:8080/history/processing/delete_divisions?mode=1'</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:01.950" level="INFO">${cmd_split} = [u'curl', u'-X', u'PUT', u'-d', u"'1490154494078484481'", u"'http://127.0.0.1:8080/history/processing/delete_divisions?mode=1'"]</msg>
<status status="PASS" endtime="20180427 15:51:01.950" starttime="20180427 15:51:01.949"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:01.951" level="INFO">${cmd_type} = curl</msg>
<status status="PASS" endtime="20180427 15:51:01.952" starttime="20180427 15:51:01.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:01.954" starttime="20180427 15:51:01.953"></status>
</kw>
<msg timestamp="20180427 15:51:01.954" level="INFO">${cmd} = curl -X PUT -d '1490154494078484481' 'http://127.0.0.1:8080/history/processing/delete_divisions?mode=1'</msg>
<status status="PASS" endtime="20180427 15:51:01.954" starttime="20180427 15:51:01.952"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:01.955" level="INFO">Executing command 'curl -X PUT -d '1490154494078484481' 'http://127.0.0.1:8080/history/processing/delete_divisions?mode=1''.</msg>
<msg timestamp="20180427 15:51:02.158" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:02.159" level="INFO">${stdout} = {"moreResults": [], "data": [{"Table": "foregrounddb.dbversion", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.division_trajectory", "Msg_text": "OK", "Msg_type": "...</msg>
<msg timestamp="20180427 15:51:02.159" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:02.159" starttime="20180427 15:51:01.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.160" level="INFO">{"moreResults": [], "data": [{"Table": "foregrounddb.dbversion", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.division_trajectory", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.division_versions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.divisions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.files_storage_config", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.node_versions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.nodes", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.operation_logs", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.reference_versions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.references", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.transactions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}], "ops": {"message": "OK", "code": 200}}</msg>
<status status="PASS" endtime="20180427 15:51:02.160" starttime="20180427 15:51:02.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.161" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:02.162" starttime="20180427 15:51:02.161"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:02.163" level="INFO">${rStdout} = {"moreResults": [], "data": [{"Table": "foregrounddb.dbversion", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.division_trajectory", "Msg_text": "OK", "Msg_type": "...</msg>
<status status="PASS" endtime="20180427 15:51:02.163" starttime="20180427 15:51:02.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:02.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:02.164" starttime="20180427 15:51:02.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.165" level="INFO">{"moreResults": [], "data": [{"Table": "foregrounddb.dbversion", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.division_trajectory", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.division_versions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.divisions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.files_storage_config", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.node_versions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.nodes", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.operation_logs", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.reference_versions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.references", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}, {"Table": "foregrounddb.transactions", "Msg_text": "OK", "Msg_type": "status", "Op": "analyze"}], "ops": {"message": "OK", "code": 200}}</msg>
<status status="PASS" endtime="20180427 15:51:02.166" starttime="20180427 15:51:02.165"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.166" starttime="20180427 15:51:01.948"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:02.169" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/repairDivision', u'dir', u'~/autotest/rtv/gpsskeleton/', u'http://127.0.0.1:8080', u'idMap.txt', u'sectionID.txt']</msg>
<status status="PASS" endtime="20180427 15:51:02.169" starttime="20180427 15:51:02.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:02.170" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/repairDivision</msg>
<status status="PASS" endtime="20180427 15:51:02.170" starttime="20180427 15:51:02.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.173" starttime="20180427 15:51:02.172"></status>
</kw>
<msg timestamp="20180427 15:51:02.173" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</msg>
<status status="PASS" endtime="20180427 15:51:02.173" starttime="20180427 15:51:02.171"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:02.174" level="INFO">Executing command '/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt'.</msg>
<msg timestamp="20180427 15:51:02.468" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:02.468" level="INFO">${stdout} = [2018-04-27 15:51:02.809][repairDivision][info][7857] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  section...</msg>
<msg timestamp="20180427 15:51:02.469" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:02.469" starttime="20180427 15:51:02.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.470" level="INFO">[2018-04-27 15:51:02.809][repairDivision][info][7857] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:51:02.810][repairDivision][debug][7857] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:51:02.810][repairDivision][info][7857] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:02.813][repairDivision][debug][7857] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:02.814][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.821][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.822][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.827][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.828][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.833][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.833][repairDivision][info][7857] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:02.834][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.842][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.842][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.851][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.851][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.863][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.863][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.863][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.872][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.872][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.872][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.872][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.885][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] DBDivision count : 1 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.886][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.898][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.899][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.899][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] NodeB matched. db nodeID: 1490154495152226306 coordinate:585.346,783.704,0 file nodeB ID:  9248866158155661314 coordinate:585.346,783.704,0 (repairDivisionNode.cpp::200)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] NodeA matched. db nodeID: 1490154495152226306 coordinate:585.346,783.704,0 file nodeA ID:  1490154495152226306 coordinate:585.346,783.704,0 (repairDivisionNode.cpp::182)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] NodeB matched. db nodeID: 1490154495152226307 coordinate:469.663,779.927,0 file nodeB ID:  9248866158155661313 coordinate:469.663,779.927,0 (repairDivisionNode.cpp::200)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =1490154495152226306 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.904][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.904][repairDivision][debug][7857] [SYS] BackendData TransactionID: 3 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:51:02.904][repairDivision][debug][7857] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.904][repairDivision][info][7857] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] ID: 1490154495152226306 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] Generate new geoDivision ID=1490154494078484483, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226308 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] replace divisionID: 1490154494078484483 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.921][repairDivision][debug][7857] [SYS] Divisions has been writen to backendDB, count = 1 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS]   division list: 1490154494078484483   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Save node ID: 1490154495152226308, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.940][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.940][repairDivision][debug][7857] [SYS] nodes has been writen to backendDB, rows = 2 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:51:02.940][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.940][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.968][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.968][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.974][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.974][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.974][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.982][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.982][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.982][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.982][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] division ID: 1490154494078484483 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDA of division 1490154495152226308 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.996][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.997][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.009][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.009][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:03.009][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:03.010][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.015][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.016][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] landmark data version id is : 1524815462708 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.033][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.033][repairDivision][warning][7857] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] &lt;Request&gt; -- RestDB_20_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=1524815462708
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] &lt;Response&gt; -- RestDB_20_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.045][repairDivision][warning][7857] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] &lt;Request&gt; -- RestDB_21_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=1524815462708
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] &lt;Response&gt; -- RestDB_21_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:03.045][repairDivision][warning][7857] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:51:02.471" starttime="20180427 15:51:02.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.472" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:02.472" starttime="20180427 15:51:02.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:02.474" level="INFO">${rStdout} = [2018-04-27 15:51:02.809][repairDivision][info][7857] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  section...</msg>
<status status="PASS" endtime="20180427 15:51:02.474" starttime="20180427 15:51:02.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:02.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:02.475" starttime="20180427 15:51:02.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.476" level="INFO">[2018-04-27 15:51:02.809][repairDivision][info][7857] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:51:02.809][repairDivision][info][7857] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:51:02.809][repairDivision][debug][7857] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:51:02.810][repairDivision][debug][7857] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:51:02.810][repairDivision][info][7857] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:02.813][repairDivision][debug][7857] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:02.814][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.821][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.822][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.827][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.828][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.833][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.833][repairDivision][info][7857] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:02.834][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.842][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.842][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.851][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.851][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.863][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.863][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.863][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.872][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.872][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.872][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.872][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.885][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] DBDivision count : 1 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.886][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.886][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.898][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.899][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.899][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] NodeB matched. db nodeID: 1490154495152226306 coordinate:585.346,783.704,0 file nodeB ID:  9248866158155661314 coordinate:585.346,783.704,0 (repairDivisionNode.cpp::200)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] NodeA matched. db nodeID: 1490154495152226306 coordinate:585.346,783.704,0 file nodeA ID:  1490154495152226306 coordinate:585.346,783.704,0 (repairDivisionNode.cpp::182)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] NodeB matched. db nodeID: 1490154495152226307 coordinate:469.663,779.927,0 file nodeB ID:  9248866158155661313 coordinate:469.663,779.927,0 (repairDivisionNode.cpp::200)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =1490154495152226306 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:02.899][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.904][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.904][repairDivision][debug][7857] [SYS] BackendData TransactionID: 3 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:51:02.904][repairDivision][debug][7857] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.904][repairDivision][info][7857] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] ID: 1490154495152226306 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] Generate new geoDivision ID=1490154494078484483, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226308 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] replace divisionID: 1490154494078484483 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:02.905][repairDivision][debug][7857] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] nodeIDB: 1490154495152226306 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:02.905][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.921][repairDivision][debug][7857] [SYS] Divisions has been writen to backendDB, count = 1 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS]   division list: 1490154494078484483   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Save node ID: 1490154495152226308, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:02.921][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.940][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.940][repairDivision][debug][7857] [SYS] nodes has been writen to backendDB, rows = 2 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:51:02.940][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:02.940][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.968][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.968][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.974][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.974][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:02.974][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.982][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.982][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:02.982][repairDivision][debug][7857] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.982][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] division ID: 1490154494078484483 (otherFuns.cpp:print:428)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDA of division 1490154495152226308 (otherFuns.cpp:print:429)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:02.996][repairDivision][info][7857] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:02.996][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:02.997][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.009][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.009][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:03.009][repairDivision][debug][7857] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:03.010][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.015][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.016][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] landmark data version id is : 1524815462708 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:03.021][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.033][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.033][repairDivision][warning][7857] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] &lt;Request&gt; -- RestDB_20_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=1524815462708
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] &lt;Response&gt; -- RestDB_20_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:03.034][repairDivision][info][7857] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:03.045][repairDivision][warning][7857] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] &lt;Request&gt; -- RestDB_21_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=1524815462708
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] &lt;Response&gt; -- RestDB_21_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:03.045][repairDivision][info][7857] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:03.045][repairDivision][warning][7857] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:51:02.477" starttime="20180427 15:51:02.476"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.478" starttime="20180427 15:51:02.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:02.479" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:02.479" starttime="20180427 15:51:02.478"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from divisions where transaction_id in (2,3);</arg>
<arg>${sGpsSkeletonIcreDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:02.481" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:02.486" starttime="20180427 15:51:02.481"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:02.487" level="INFO">Executing : Query  |  select division_id from divisions where transaction_id in (2,3); </msg>
<msg timestamp="20180427 15:51:02.490" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) | (1490154494078484483,) ]</msg>
<status status="PASS" endtime="20180427 15:51:02.490" starttime="20180427 15:51:02.486"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.491" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:51:02.491" level="INFO">(1490154494078484482,)</msg>
<msg timestamp="20180427 15:51:02.491" level="INFO">(1490154494078484483,)</msg>
<status status="PASS" endtime="20180427 15:51:02.492" starttime="20180427 15:51:02.490"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:02.493" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:02.493" starttime="20180427 15:51:02.492"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:02.495" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:02.495" starttime="20180427 15:51:02.494"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.497" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:51:02.497" starttime="20180427 15:51:02.496"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.498" starttime="20180427 15:51:02.498"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.498" starttime="20180427 15:51:02.495"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.500" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:02.500" starttime="20180427 15:51:02.499"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.501" starttime="20180427 15:51:02.501"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.502" starttime="20180427 15:51:02.499"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484483,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.503" level="INFO">${DivisionString[0]} = 1490154494078484483</msg>
<status status="PASS" endtime="20180427 15:51:02.503" starttime="20180427 15:51:02.502"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.504" starttime="20180427 15:51:02.504"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.505" starttime="20180427 15:51:02.502"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.505" starttime="20180427 15:51:02.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.506" level="INFO">[u'1490154494078484481', u'1490154494078484482', u'1490154494078484483']</msg>
<status status="PASS" endtime="20180427 15:51:02.506" starttime="20180427 15:51:02.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.508" level="INFO">[u'1490154494078484481', u'1490154494078484482', u'1490154494078484483']</msg>
<status status="PASS" endtime="20180427 15:51:02.508" starttime="20180427 15:51:02.507"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.509" starttime="20180427 15:51:02.508"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.510" starttime="20180427 15:51:02.479"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from division_trajectory \ where transaction_id in (2,3);</arg>
<arg>${sGpsSkeletonIcreDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:02.513" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:02.517" starttime="20180427 15:51:02.511"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:02.518" level="INFO">Executing : Query  |  select division_id from division_trajectory  where transaction_id in (2,3); </msg>
<msg timestamp="20180427 15:51:02.521" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) | (1490154494078484483,) ]</msg>
<status status="PASS" endtime="20180427 15:51:02.521" starttime="20180427 15:51:02.517"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.522" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:51:02.523" level="INFO">(1490154494078484482,)</msg>
<msg timestamp="20180427 15:51:02.523" level="INFO">(1490154494078484483,)</msg>
<status status="PASS" endtime="20180427 15:51:02.523" starttime="20180427 15:51:02.522"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:02.524" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:02.524" starttime="20180427 15:51:02.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:02.525" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:02.525" starttime="20180427 15:51:02.525"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.528" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:51:02.528" starttime="20180427 15:51:02.526"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.529" starttime="20180427 15:51:02.528"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.529" starttime="20180427 15:51:02.526"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.531" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:02.531" starttime="20180427 15:51:02.530"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.532" starttime="20180427 15:51:02.531"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.532" starttime="20180427 15:51:02.529"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484483,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.533" level="INFO">${DivisionString[0]} = 1490154494078484483</msg>
<status status="PASS" endtime="20180427 15:51:02.533" starttime="20180427 15:51:02.532"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.534" starttime="20180427 15:51:02.533"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.534" starttime="20180427 15:51:02.532"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.534" starttime="20180427 15:51:02.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.535" level="INFO">[u'1490154494078484481', u'1490154494078484482', u'1490154494078484483']</msg>
<status status="PASS" endtime="20180427 15:51:02.535" starttime="20180427 15:51:02.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.536" level="INFO">[u'1490154494078484481', u'1490154494078484482', u'1490154494078484483']</msg>
<status status="PASS" endtime="20180427 15:51:02.536" starttime="20180427 15:51:02.535"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.537" starttime="20180427 15:51:02.536"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.537" starttime="20180427 15:51:02.510"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select trajectory_type from divisions where transaction_id=3;</arg>
<arg>1</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:02.538" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:02.541" starttime="20180427 15:51:02.538"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:02.542" level="INFO">Executing : Query  |  select trajectory_type from divisions where transaction_id=3; </msg>
<msg timestamp="20180427 15:51:02.545" level="INFO">@{DivisionList} = [ (1,) ]</msg>
<status status="PASS" endtime="20180427 15:51:02.545" starttime="20180427 15:51:02.541"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.546" level="INFO">(1,)</msg>
<status status="PASS" endtime="20180427 15:51:02.546" starttime="20180427 15:51:02.545"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:02.546" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:02.546" starttime="20180427 15:51:02.546"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:02.547" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:02.547" starttime="20180427 15:51:02.546"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:02.548" level="INFO">${DivisionString[0]} = 1</msg>
<status status="PASS" endtime="20180427 15:51:02.548" starttime="20180427 15:51:02.547"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.548" starttime="20180427 15:51:02.548"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.548" starttime="20180427 15:51:02.547"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.548" starttime="20180427 15:51:02.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.549" level="INFO">[u'1']</msg>
<status status="PASS" endtime="20180427 15:51:02.549" starttime="20180427 15:51:02.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.549" level="INFO">1</msg>
<status status="PASS" endtime="20180427 15:51:02.549" starttime="20180427 15:51:02.549"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.550" starttime="20180427 15:51:02.550"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:02.550" starttime="20180427 15:51:02.537"></status>
</kw>
<doc>| Description | test gpsskeleton incre import function |
| Input | 1.gpsskeleton |
| Execute | call the command line to process skeleton import |
| Expect result | 1.gpsskeleton import success. |
| | 2.DB contain data. |</doc>
<tags>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:51:02.550" critical="yes" starttime="20180427 15:50:49.247"></status>
</test>
<test id="s1-s3-s4-t3" name="Roadskeleton Full Import">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.552" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:51:02.553" starttime="20180427 15:51:02.552"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:51:02.555" starttime="20180427 15:51:02.553"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:02.556" starttime="20180427 15:51:02.555"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:51:02.556" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:51:03.760" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:50:49 CST 2018

  System load:  2.18               Processes:           305
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:50:50 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:51:03.760" starttime="20180427 15:51:02.556"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:03.761" starttime="20180427 15:51:02.552"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:03.763" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:03.763" starttime="20180427 15:51:03.762"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:03.765" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:03.765" starttime="20180427 15:51:03.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:03.768" starttime="20180427 15:51:03.767"></status>
</kw>
<msg timestamp="20180427 15:51:03.768" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:03.768" starttime="20180427 15:51:03.766"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:03.770" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:03.784" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:03.785" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:03.785" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:03.785" starttime="20180427 15:51:03.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.787" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:03.787" starttime="20180427 15:51:03.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.788" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:03.788" starttime="20180427 15:51:03.787"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:03.789" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:03.790" starttime="20180427 15:51:03.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:03.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:03.791" starttime="20180427 15:51:03.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.793" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:03.793" starttime="20180427 15:51:03.792"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:03.793" starttime="20180427 15:51:03.761"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:03.796" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:51:03.796" starttime="20180427 15:51:03.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:03.800" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:03.800" starttime="20180427 15:51:03.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:03.803" starttime="20180427 15:51:03.802"></status>
</kw>
<msg timestamp="20180427 15:51:03.803" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:51:03.803" starttime="20180427 15:51:03.801"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:03.804" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:51:03.848" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:03.849" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:03.849" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:03.849" starttime="20180427 15:51:03.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.850" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:03.850" starttime="20180427 15:51:03.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.850" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:03.850" starttime="20180427 15:51:03.850"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:03.851" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:03.851" starttime="20180427 15:51:03.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:03.852" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:03.852" starttime="20180427 15:51:03.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.852" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:03.853" starttime="20180427 15:51:03.852"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:03.853" starttime="20180427 15:51:03.794"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:03.854" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:03.854" starttime="20180427 15:51:03.854"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:03.855" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:03.855" starttime="20180427 15:51:03.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:03.857" starttime="20180427 15:51:03.856"></status>
</kw>
<msg timestamp="20180427 15:51:03.857" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:03.857" starttime="20180427 15:51:03.855"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:03.857" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:03.901" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:03.902" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:03.902" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:03.902" starttime="20180427 15:51:03.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.903" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:03.903" starttime="20180427 15:51:03.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.904" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:03.905" starttime="20180427 15:51:03.904"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:03.906" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:03.906" starttime="20180427 15:51:03.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:03.907" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:03.907" starttime="20180427 15:51:03.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:03.908" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:03.908" starttime="20180427 15:51:03.908"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:03.909" starttime="20180427 15:51:03.853"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:51:03.910" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:51:03.955" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:51:03.955" starttime="20180427 15:51:03.909"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:03.959" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:51:03.959" starttime="20180427 15:51:03.958"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:03.960" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:51:03.960" starttime="20180427 15:51:03.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:03.963" starttime="20180427 15:51:03.962"></status>
</kw>
<msg timestamp="20180427 15:51:03.963" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:51:03.963" starttime="20180427 15:51:03.961"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:03.964" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:51:14.859" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:14.860" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:51:14.860" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:14.860" starttime="20180427 15:51:03.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:14.862" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 8874
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:14.862" starttime="20180427 15:51:14.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:14.864" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:14.864" starttime="20180427 15:51:14.863"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:14.866" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:51:14.866" starttime="20180427 15:51:14.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:14.867" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:14.867" starttime="20180427 15:51:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:14.868" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 8874
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:14.869" starttime="20180427 15:51:14.868"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:14.869" starttime="20180427 15:51:03.957"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:14.870" starttime="20180427 15:51:03.956"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:14.872" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:51:14.872" starttime="20180427 15:51:14.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:14.874" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:14.874" starttime="20180427 15:51:14.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:14.876" starttime="20180427 15:51:14.876"></status>
</kw>
<msg timestamp="20180427 15:51:14.877" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:51:14.877" starttime="20180427 15:51:14.874"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:14.878" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:51:14.907" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:14.908" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:51:14.908" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:14.908" starttime="20180427 15:51:14.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:14.909" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:14.909" starttime="20180427 15:51:14.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:14.910" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:14.911" starttime="20180427 15:51:14.910"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:14.912" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:14.912" starttime="20180427 15:51:14.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:14.913" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:14.913" starttime="20180427 15:51:14.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:14.914" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:14.914" starttime="20180427 15:51:14.914"></status>
</kw>
<msg timestamp="20180427 15:51:14.915" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:14.915" starttime="20180427 15:51:14.870"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:14.916" starttime="20180427 15:51:14.916"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:14.917" starttime="20180427 15:51:02.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:14.918" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:14.918" starttime="20180427 15:51:14.917"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:14.920" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/repairDivision', u'dir', u'~/autotest/rtv/gpsskeleton/', u'http://127.0.0.1:8080', u'idMap.txt', u'sectionID.txt']</msg>
<status status="PASS" endtime="20180427 15:51:14.920" starttime="20180427 15:51:14.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:14.922" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/repairDivision</msg>
<status status="PASS" endtime="20180427 15:51:14.922" starttime="20180427 15:51:14.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:14.924" starttime="20180427 15:51:14.924"></status>
</kw>
<msg timestamp="20180427 15:51:14.924" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt</msg>
<status status="PASS" endtime="20180427 15:51:14.925" starttime="20180427 15:51:14.922"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:14.926" level="INFO">Executing command '/opt/ygomi/roadDB/bin/repairDivision dir ~/autotest/rtv/gpsskeleton/ http://127.0.0.1:8080 idMap.txt sectionID.txt'.</msg>
<msg timestamp="20180427 15:51:15.208" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:15.209" level="INFO">${stdout} = [2018-04-27 15:51:15.561][repairDivision][info][10024] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectio...</msg>
<msg timestamp="20180427 15:51:15.209" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:15.209" starttime="20180427 15:51:14.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.210" level="INFO">[2018-04-27 15:51:15.561][repairDivision][info][10024] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:15.561][repairDivision][info][10024] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:51:15.561][repairDivision][info][10024] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:15.561][repairDivision][debug][10024] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:15.561][repairDivision][info][10024] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:51:15.562][repairDivision][info][10024] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:51:15.562][repairDivision][info][10024] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:51:15.562][repairDivision][info][10024] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:15.565][repairDivision][debug][10024] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:15.566][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.573][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.573][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.581][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.581][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.587][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.587][repairDivision][info][10024] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:15.587][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.596][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.596][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.606][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.606][repairDivision][info][10024] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:15.606][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.607][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Division ID set is empty! (BackendDARestful.cpp:getDivisions:589)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] DBDivision count : 0 (otherFuns.cpp:print:424)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =9248866158155661314 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [TOOL] geo division id = 9248866158155661317 nodeA id =9248866158155661314 nodeB id =9248866158155661313 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] BackendData TransactionID: 1 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] ID: 9248866158155661313 coordinate: 469.663,779.927,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] ID: 9248866158155661314 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new geoDivision ID=1490154494078484481, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226305 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old Node ID: 9248866158155661314 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new Node ID. OldID----newID:9248866158155661314----1490154495152226306 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Generate ID for division: 9248866158155661317 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old geoDivision ID: 9248866158155661317 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new geoDivision ID=1490154494078484482, old geoDivision id=9248866158155661317, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old Node ID: 9248866158155661313 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new Node ID. OldID----newID:9248866158155661313----1490154495152226307 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDB: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDA: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDB: 9248866158155661313 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:15.623][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.643][repairDivision][debug][10024] [SYS] Divisions has been writen to backendDB, count = 2 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS]   division list: 1490154494078484481  1490154494078484482   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Save node ID: 1490154495152226307, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Save node ID: 1490154495152226305, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.664][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.664][repairDivision][debug][10024] [SYS] nodes has been writen to backendDB, rows = 3 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:51:15.664][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:15.664][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.707][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.707][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.713][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.714][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.714][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.725][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.725][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.725][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.725][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.739][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:15.740][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.753][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.753][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.753][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.754][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.760][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.760][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.777][repairDivision][warning][10024] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] &lt;Request&gt; -- RestDB_17_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] &lt;Response&gt; -- RestDB_17_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.788][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.789][repairDivision][warning][10024] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] &lt;Request&gt; -- RestDB_18_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] &lt;Response&gt; -- RestDB_18_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:15.789][repairDivision][warning][10024] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:51:15.212" starttime="20180427 15:51:15.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.212" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:15.213" starttime="20180427 15:51:15.212"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:15.213" level="INFO">${rStdout} = [2018-04-27 15:51:15.561][repairDivision][info][10024] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectio...</msg>
<status status="PASS" endtime="20180427 15:51:15.213" starttime="20180427 15:51:15.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:15.213" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:15.214" starttime="20180427 15:51:15.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.214" level="INFO">[2018-04-27 15:51:15.561][repairDivision][info][10024] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  dir  /home/roaddb/autotest/rtv/gpsskeleton/  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:15.561][repairDivision][info][10024] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
/home/roaddb/autotest/rtv/gpsskeleton//section_db/
[2018-04-27 15:51:15.561][repairDivision][info][10024] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:15.561][repairDivision][debug][10024] [SAM] add section:9248866158155661317 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:15.561][repairDivision][info][10024] [SAM] refGps:Lat:42.4841,Lon:-83.0786,Alt:0 (DbgDatabaseManager.cpp::535)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] add section:9248866158155661316 reference num:0 (DbgDatabaseManager.cpp::597)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] restore section neighbor (DbgDatabaseManager.cpp::662)
[2018-04-27 15:51:15.562][repairDivision][info][10024] [SAM] 9248866158155661316 add right neighbor:9248866158155661317 (ServerSection.cpp::242)
[2018-04-27 15:51:15.562][repairDivision][info][10024] [SAM] 9248866158155661317 add left neighbor:9248866158155661316 (ServerSection.cpp::248)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] Write division:9248866158155661316right_nebor:9248866158155661317 type:0 (ServerDbHelper.cpp::164)
[2018-04-27 15:51:15.562][repairDivision][debug][10024] [SAM] Write division:9248866158155661317left_nebor:9248866158155661316 type:0 (ServerDbHelper.cpp::144)
[2018-04-27 15:51:15.562][repairDivision][info][10024] [TOOL] segment ID List: 
346953630   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:15.565][repairDivision][debug][10024] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:15.566][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.573][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.573][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.581][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.581][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.587][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.587][repairDivision][info][10024] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:15.587][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.596][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.596][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.606][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.606][repairDivision][info][10024] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:15.606][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.607][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Division ID set is empty! (BackendDARestful.cpp:getDivisions:589)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] DBDivision count : 0 (otherFuns.cpp:print:424)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Division ID set is empty! (BackendDARestful.cpp:getNodes:1407)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.616][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [TOOL] DIVISIONS INFO TO ADD DB  (repairDivisionNode.cpp::246)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [TOOL] geo division id = 9248866158155661316 nodeA id =9248866158155661315 nodeB id =9248866158155661314 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [TOOL] geo division id = 9248866158155661317 nodeA id =9248866158155661314 nodeB id =9248866158155661313 (repairDivisionNode.cpp::249)
[2018-04-27 15:51:15.616][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] BackendData TransactionID: 1 (BackendDARestful.cpp:beginTransaction:161)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ENTER FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] ID: 9248866158155661313 coordinate: 469.663,779.927,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] ID: 9248866158155661315 coordinate: 703.002,787.036,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] ID: 9248866158155661314 coordinate: 585.346,783.704,0 (BackendDataTransfer.cpp:putGeoDivisions:842)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Generate ID for division: 9248866158155661316 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old geoDivision ID: 9248866158155661316 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new geoDivision ID=1490154494078484481, old geoDivision id=9248866158155661316, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old Node ID: 9248866158155661315 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new Node ID. OldID----newID:9248866158155661315----1490154495152226305 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old Node ID: 9248866158155661314 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new Node ID. OldID----newID:9248866158155661314----1490154495152226306 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Generate ID for division: 9248866158155661317 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1435)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old geoDivision ID: 9248866158155661317 (BackendDataTransfer.cpp:generateDivisionID:992)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new geoDivision ID=1490154494078484482, old geoDivision id=9248866158155661317, segment id= 346953630, extract segment id= 346953630 (BackendDataTransfer.cpp:generateDivisionID:1011)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] Old Node ID: 9248866158155661313 (BackendDataTransfer.cpp:generateNodeID:1067)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] Generate new Node ID. OldID----newID:9248866158155661313----1490154495152226307 (BackendDataTransfer.cpp:generateNodeID:1084)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] replace divisionID: 1490154494078484481 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDA: 9248866158155661315 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDB: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] replace divisionID: 1490154494078484482 (BackendDataTransfer.cpp:updateGeoDivisionsDBID:1464)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace overlap geoDivision IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1118)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] geoDivision count: 0 (BackendDataTransfer.cpp:updateDBIDInDivision:1121)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:updateDBIDInDivision:1122)
[2018-04-27 15:51:15.622][repairDivision][debug][10024] [SYS] ##########END########## (BackendDataTransfer.cpp:updateDBIDInDivision:1176)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] start to replace Node IDs (BackendDataTransfer.cpp:updateDBIDInDivision:1178)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDA: 9248866158155661314 (BackendDataTransfer.cpp:updateDBIDInDivision:1181)
[2018-04-27 15:51:15.622][repairDivision][info][10024] [SYS] nodeIDB: 9248866158155661313 (BackendDataTransfer.cpp:updateDBIDInDivision:1191)
[2018-04-27 15:51:15.623][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.643][repairDivision][debug][10024] [SYS] Divisions has been writen to backendDB, count = 2 (BackendDataTransfer.cpp:putGeoDivisions:882)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS]   division list: 1490154494078484481  1490154494078484482   (BackendDataTransfer.cpp:putGeoDivisions:892)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Save node ID: 1490154495152226307, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Save node ID: 1490154495152226305, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Save node ID: 1490154495152226306, segID: 346953630 (BackendDataTransfer.cpp:putGeoDivisions:897)
[2018-04-27 15:51:15.643][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.664][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.664][repairDivision][debug][10024] [SYS] nodes has been writen to backendDB, rows = 3 (BackendDataTransfer.cpp:putGeoDivisions:909)
[2018-04-27 15:51:15.664][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: putGeoDivisions (BackendDataTransfer.cpp::780)
[2018-04-27 15:51:15.664][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.707][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.707][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.713][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.714][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.714][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.725][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.725][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.725][repairDivision][debug][10024] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.725][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.739][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:15.740][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.740][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.753][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.753][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.753][repairDivision][debug][10024] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.754][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.760][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.760][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.766][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.777][repairDivision][warning][10024] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] &lt;Request&gt; -- RestDB_17_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] &lt;Response&gt; -- RestDB_17_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] segids size is 1 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:15.777][repairDivision][info][10024] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.788][repairDivision][info][10024] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.789][repairDivision][warning][10024] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] &lt;Request&gt; -- RestDB_18_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953630"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] &lt;Response&gt; -- RestDB_18_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:15.789][repairDivision][info][10024] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:15.789][repairDivision][warning][10024] [TOOL] no logic nodes and divisions! exit (repairDivisionNode.cpp::425)</msg>
<status status="PASS" endtime="20180427 15:51:15.214" starttime="20180427 15:51:15.214"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.214" starttime="20180427 15:51:14.918"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/repairDivision file ~/autotest/rtv/roadskeleton/roadskeleton.json http://127.0.0.1:8080 idMap.txt sectionID.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:15.215" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/repairDivision', u'file', u'~/autotest/rtv/roadskeleton/roadskeleton.json', u'http://127.0.0.1:8080', u'idMap.txt', u'sectionID.txt']</msg>
<status status="PASS" endtime="20180427 15:51:15.215" starttime="20180427 15:51:15.215"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:15.216" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/repairDivision</msg>
<status status="PASS" endtime="20180427 15:51:15.216" starttime="20180427 15:51:15.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.217" starttime="20180427 15:51:15.216"></status>
</kw>
<msg timestamp="20180427 15:51:15.217" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/repairDivision file ~/autotest/rtv/roadskeleton/roadskeleton.json http://127.0.0.1:8080 idMap.txt sectionID.txt</msg>
<status status="PASS" endtime="20180427 15:51:15.217" starttime="20180427 15:51:15.216"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:15.217" level="INFO">Executing command '/opt/ygomi/roadDB/bin/repairDivision file ~/autotest/rtv/roadskeleton/roadskeleton.json http://127.0.0.1:8080 idMap.txt sectionID.txt'.</msg>
<msg timestamp="20180427 15:51:15.488" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:15.489" level="INFO">${stdout} = [2018-04-27 15:51:15.852][repairDivision][info][10054] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  file  /home/roaddb/autotest/rtv/roadskeleton/roadskeleton.json  http://127.0.0.1:8080...</msg>
<msg timestamp="20180427 15:51:15.489" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:15.489" starttime="20180427 15:51:15.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.490" level="INFO">[2018-04-27 15:51:15.852][repairDivision][info][10054] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  file  /home/roaddb/autotest/rtv/roadskeleton/roadskeleton.json  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:15.852][repairDivision][info][10054] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:51:15.855][LogicMap][debug][10054] [SDOR] id: 1 newID: 9248954195438993409 (LogicMap.cpp::196)
[2018-04-27 15:51:15.855][LogicMap][debug][10054] [SDOR] id: 0 newID: 9248954195438993410 (LogicMap.cpp::196)
[2018-04-27 15:51:15.855][LogicMap][debug][10054] [SDOR] id: 2 newID: 9248954195438993411 (LogicMap.cpp::196)
[2018-04-27 15:51:15.860][LogicMap][info][10054] [TOOL] segment ID List: 
346953627  346953630  346953631  346953649  346953652  346953653   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:15.864][LogicMap][debug][10054] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:15.864][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.871][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.871][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.877][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.877][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.882][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.882][LogicMap][info][10054] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:15.882][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.892][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.893][LogicMap][debug][10054] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.893][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.901][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.901][LogicMap][debug][10054] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.901][LogicMap][debug][10054] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.901][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.913][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:15.914][LogicMap][debug][10054] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.926][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.926][LogicMap][debug][10054] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.926][LogicMap][debug][10054] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.927][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.932][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.933][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] segids size is 6 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953627, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953631, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953649, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953652, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953653, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953627,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953631,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953649,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953652,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953653,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.950][LogicMap][warning][10054] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] &lt;Request&gt; -- RestDB_10_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953627,346953630,346953631,346953649,346953652,346953653"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] &lt;Response&gt; -- RestDB_10_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] segids size is 6 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953627, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953631, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953649, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953652, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953653, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:15.951][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.963][LogicMap][warning][10054] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] &lt;Request&gt; -- RestDB_11_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953627,346953630,346953631,346953649,346953652,346953653"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] &lt;Response&gt; -- RestDB_11_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SDOR] Start to compute the mapping between logicDivisions and GeoDivisions. (LogicMap.cpp::1355)
[2018-04-27 15:51:15.964][LogicMap][error][10054] [SDOR] dump file /input_db_logic_nodes : empty vector (LogicMap.cpp::1840)
[2018-04-27 15:51:15.964][LogicMap][error][10054] [SDOR] dump file /input_db_logic_div : empty vector (LogicMap.cpp::1864)
[2018-04-27 15:51:15.966][LogicMap][error][10054] [SDOR] dump file /nodes_maps_null_div.kml : empty vector (LogicMap.cpp::1840)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484481, logicdiv: 9248954195438993412 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] Matched. (LogicMap.cpp::1025)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484482, logicdiv: 9248954195438993412 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] Matched. (LogicMap.cpp::1025)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484481, logicdiv: 9248954195438993413 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484482, logicdiv: 9248954195438993413 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] Matched. (LogicMap.cpp::1025)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering mismatch: logicDiv: 9248954195438993412 (1/2) (LogicMap.cpp::2322)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering mismatch: logicDiv: 9248954195438993413 (2/2) (LogicMap.cpp::2322)
[2018-04-27 15:51:15.971][LogicMap][info][10054] [SDOR] End to compute the mapping between logicDivisions and GeoDivisions. (LogicMap.cpp::1458)
[2018-04-27 15:51:15.971][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.977][LogicMap][debug][10054] [SYS] TransactionID: 1 (LandMarkDARestful.cpp:beginTransaction:1186)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] landMarkDataAccess start to put logicDivision and node (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:234)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] wait to put logicDivisions size:2 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:236)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ids: (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:237)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:238)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	 logicDivision 9248954195438993412 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:241)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	 logicDivision 9248954195438993413 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:241)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:243)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] wait to put logicNodes size:3 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:245)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ids: (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:246)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:247)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	9248954195438993410 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:250)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	9248954195438993409 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:250)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	9248954195438993411 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:250)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:252)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] transfering logicDivision to seg: 346953627 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:276)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] transfering logicNode to seg: 346953627 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:285)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] saving logicDivisions and logicNode to landmarkdb (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:295)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] logic div id :  (LandMarkDARestful.cpp:putLogicDivExcludeNodeImp:843)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] 	 logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():845)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] 	 logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():845)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:16.011][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:16.011][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:16.030][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:16.030][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:16.064][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:16.066][LogicMap][info][10054] [TOOL] end to run repairDivision (repairDivisionNode.cpp::712)</msg>
<status status="PASS" endtime="20180427 15:51:15.491" starttime="20180427 15:51:15.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.492" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:15.492" starttime="20180427 15:51:15.491"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:15.494" level="INFO">${rStdout} = [2018-04-27 15:51:15.852][repairDivision][info][10054] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  file  /home/roaddb/autotest/rtv/roadskeleton/roadskeleton.json  http://127.0.0.1:8080...</msg>
<status status="PASS" endtime="20180427 15:51:15.494" starttime="20180427 15:51:15.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:15.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:15.495" starttime="20180427 15:51:15.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.496" level="INFO">[2018-04-27 15:51:15.852][repairDivision][info][10054] [COM] module command: /opt/ygomi/roadDB/bin/repairDivision  file  /home/roaddb/autotest/rtv/roadskeleton/roadskeleton.json  http://127.0.0.1:8080  idMap.txt  sectionID.txt   (otherFuns.h::410)
[2018-04-27 15:51:15.852][repairDivision][info][10054] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:51:15.855][LogicMap][debug][10054] [SDOR] id: 1 newID: 9248954195438993409 (LogicMap.cpp::196)
[2018-04-27 15:51:15.855][LogicMap][debug][10054] [SDOR] id: 0 newID: 9248954195438993410 (LogicMap.cpp::196)
[2018-04-27 15:51:15.855][LogicMap][debug][10054] [SDOR] id: 2 newID: 9248954195438993411 (LogicMap.cpp::196)
[2018-04-27 15:51:15.860][LogicMap][info][10054] [TOOL] segment ID List: 
346953627  346953630  346953631  346953649  346953652  346953653   (repairDivisionNode.cpp::280)
[2018-04-27 15:51:15.864][LogicMap][debug][10054] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:51:15.864][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.871][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.871][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.877][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.877][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.882][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.882][LogicMap][info][10054] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:51:15.882][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.892][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.893][LogicMap][debug][10054] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.893][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.901][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.901][LogicMap][debug][10054] [SYS] ENTER FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.901][LogicMap][debug][10054] [SYS] ENTER FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.901][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.913][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] division list:  (BackendDataTransfer.cpp:getDivisions:165)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] DBDivision count : 2 (otherFuns.cpp:print:424)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] ##########BEGIN########## (otherFuns.cpp:print:425)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] division ID: 1490154494078484481 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDA of division 1490154495152226305 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDB of division 1490154495152226306 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] division ID: 1490154494078484482 (otherFuns.cpp:print:428)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDA of division 1490154495152226306 (otherFuns.cpp:print:429)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS]  nodeIDB of division 1490154495152226307 (otherFuns.cpp:print:430)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] ##########END########## (otherFuns.cpp:print:432)
[2018-04-27 15:51:15.914][LogicMap][debug][10054] [SYS] LEAVE FUNCTION: getDivisions (BackendDataTransfer.cpp::154)
[2018-04-27 15:51:15.914][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.926][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.926][LogicMap][debug][10054] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDataTransfer.cpp::690)
[2018-04-27 15:51:15.926][LogicMap][debug][10054] [SYS] LEAVE FUNCTION: getGeoDivisions (BackendDTAdapter.cpp::159)
[2018-04-27 15:51:15.927][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.932][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.933][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] landmark data version id is : 0 (LandMarkDARestful.cpp:initInstance:1296)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] get spLogicNode by segIds (LandMarkDataTransfer.cpp:getLogicNodeBySeg:554)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] segids size is 6 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:556)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:557)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:558)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953627, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953631, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953649, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953652, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953653, (LandMarkDataTransfer.cpp:operator():560)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:561)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] seg id is :  (LandMarkDARestful.cpp:getLogicNodeBySeg:338)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953627,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953630,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953631,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953649,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953652,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] 346953653,  (LandMarkDARestful.cpp:operator():340)
[2018-04-27 15:51:15.938][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.950][LogicMap][warning][10054] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:845)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] &lt;Request&gt; -- RestDB_10_GetLMDataCommand_Request: 
Path: /landmarkdb/nodes/data?version_id=0
Payload: 
{"segment_list":"346953627,346953630,346953631,346953649,346953652,346953653"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] &lt;Response&gt; -- RestDB_10_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] rtn logicNodes size is 0 (LandMarkDataTransfer.cpp:getLogicNodeBySeg:581)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicNodeBySeg:582)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:583)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicNodeBySeg:588)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] get logicDivision by segIds (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:437)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] segids size is 6 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:439)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:440)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:441)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953627, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953630, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953631, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953649, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953652, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] 346953653, (LandMarkDataTransfer.cpp:operator():443)
[2018-04-27 15:51:15.950][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:444)
[2018-04-27 15:51:15.951][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.963][LogicMap][warning][10054] [SYS] Response data is empty. (RestDBCommandsLandmark.cpp:getResult:709)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] &lt;Request&gt; -- RestDB_11_GetLMDataCommand_Request: 
Path: /landmarkdb/divisions/data?version_id=0
Payload: 
{"segment_list":"346953627,346953630,346953631,346953649,346953652,346953653"}
 (RestDBCommandsCommon.h:dumpRequest:290)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] &lt;Response&gt; -- RestDB_11_GetLMDataCommand_Response: 
{"moreResults": [], "data": [], "ops": {"message": "OK", "code": 200}}
 (RestDBCommandsCommon.h:dumpResponse:297)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] rtn logicDivision size is 0 (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:463)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] ids:  (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:464)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:465)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:getLogicDivisionBySeg:470)
[2018-04-27 15:51:15.963][LogicMap][info][10054] [SDOR] Start to compute the mapping between logicDivisions and GeoDivisions. (LogicMap.cpp::1355)
[2018-04-27 15:51:15.964][LogicMap][error][10054] [SDOR] dump file /input_db_logic_nodes : empty vector (LogicMap.cpp::1840)
[2018-04-27 15:51:15.964][LogicMap][error][10054] [SDOR] dump file /input_db_logic_div : empty vector (LogicMap.cpp::1864)
[2018-04-27 15:51:15.966][LogicMap][error][10054] [SDOR] dump file /nodes_maps_null_div.kml : empty vector (LogicMap.cpp::1840)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484481, logicdiv: 9248954195438993412 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] Matched. (LogicMap.cpp::1025)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484482, logicdiv: 9248954195438993412 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] Matched. (LogicMap.cpp::1025)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484481, logicdiv: 9248954195438993413 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering reverse: geoID: 1490154494078484482, logicdiv: 9248954195438993413 (LogicMap.cpp::992)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] Matched. (LogicMap.cpp::1025)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering mismatch: logicDiv: 9248954195438993412 (1/2) (LogicMap.cpp::2322)
[2018-04-27 15:51:15.967][LogicMap][debug][10054] [SDOR] filtering mismatch: logicDiv: 9248954195438993413 (2/2) (LogicMap.cpp::2322)
[2018-04-27 15:51:15.971][LogicMap][info][10054] [SDOR] End to compute the mapping between logicDivisions and GeoDivisions. (LogicMap.cpp::1458)
[2018-04-27 15:51:15.971][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.977][LogicMap][debug][10054] [SYS] TransactionID: 1 (LandMarkDARestful.cpp:beginTransaction:1186)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] landMarkDataAccess start to put logicDivision and node (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:234)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] wait to put logicDivisions size:2 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:236)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ids: (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:237)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:238)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	 logicDivision 9248954195438993412 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:241)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	 logicDivision 9248954195438993413 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:241)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:243)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] wait to put logicNodes size:3 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:245)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ids: (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:246)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########BEGIN########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:247)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	9248954195438993410 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:250)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	9248954195438993409 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:250)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] 	9248954195438993411 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:250)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] ##########END########## (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:252)
[2018-04-27 15:51:15.977][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] transfering logicDivision to seg: 346953627 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:276)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] transfering logicNode to seg: 346953627 (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:285)
[2018-04-27 15:51:15.986][LogicMap][info][10054] [SYS] saving logicDivisions and logicNode to landmarkdb (LandMarkDataTransfer.cpp:putLogicDivisionsExcludeNode:295)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] logic div id :  (LandMarkDARestful.cpp:putLogicDivExcludeNodeImp:843)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] 	 logicDivision 1490154494078484481,  (LandMarkDARestful.cpp:operator():845)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] 	 logicDivision 1490154494078484482,  (LandMarkDARestful.cpp:operator():845)
[2018-04-27 15:51:15.987][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:16.011][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:16.011][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:16.030][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:16.030][LogicMap][info][10054] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:51:16.064][LogicMap][info][10054] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:51:16.066][LogicMap][info][10054] [TOOL] end to run repairDivision (repairDivisionNode.cpp::712)</msg>
<status status="PASS" endtime="20180427 15:51:15.497" starttime="20180427 15:51:15.495"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.497" starttime="20180427 15:51:15.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:15.498" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:15.499" starttime="20180427 15:51:15.498"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from divisions;</arg>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:15.501" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:15.505" starttime="20180427 15:51:15.500"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.506" level="INFO">Executing : Query  |  select division_id from divisions; </msg>
<msg timestamp="20180427 15:51:15.509" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) ]</msg>
<status status="PASS" endtime="20180427 15:51:15.509" starttime="20180427 15:51:15.505"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.511" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:51:15.511" level="INFO">(1490154494078484482,)</msg>
<status status="PASS" endtime="20180427 15:51:15.511" starttime="20180427 15:51:15.510"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:15.513" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:15.513" starttime="20180427 15:51:15.512"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.515" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:15.515" starttime="20180427 15:51:15.514"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.519" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:51:15.519" starttime="20180427 15:51:15.517"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.521" starttime="20180427 15:51:15.519"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.521" starttime="20180427 15:51:15.516"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.523" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:15.523" starttime="20180427 15:51:15.522"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.524" starttime="20180427 15:51:15.523"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.524" starttime="20180427 15:51:15.521"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.524" starttime="20180427 15:51:15.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.524" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.525" starttime="20180427 15:51:15.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.526" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.526" starttime="20180427 15:51:15.525"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.527" starttime="20180427 15:51:15.526"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.527" starttime="20180427 15:51:15.499"></status>
</kw>
<kw name="Query ForegroundDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from division_trajectory;</arg>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:15.529" level="INFO">Connecting using : pymysql.connect(db=foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:15.532" starttime="20180427 15:51:15.528"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.533" level="INFO">Executing : Query  |  select division_id from division_trajectory; </msg>
<msg timestamp="20180427 15:51:15.534" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) ]</msg>
<status status="PASS" endtime="20180427 15:51:15.534" starttime="20180427 15:51:15.533"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.535" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:51:15.535" level="INFO">(1490154494078484482,)</msg>
<status status="PASS" endtime="20180427 15:51:15.535" starttime="20180427 15:51:15.535"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:15.535" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:15.536" starttime="20180427 15:51:15.535"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.536" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:15.536" starttime="20180427 15:51:15.536"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.537" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:51:15.537" starttime="20180427 15:51:15.537"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.538" starttime="20180427 15:51:15.537"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.538" starttime="20180427 15:51:15.536"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.539" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:15.539" starttime="20180427 15:51:15.538"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.539" starttime="20180427 15:51:15.539"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.539" starttime="20180427 15:51:15.538"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.539" starttime="20180427 15:51:15.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.540" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.540" starttime="20180427 15:51:15.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.540" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.540" starttime="20180427 15:51:15.540"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sGpsSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.541" starttime="20180427 15:51:15.540"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.541" starttime="20180427 15:51:15.527"></status>
</kw>
<kw name="Query LandmarkDB Keyfield" library="utilities">
<arguments>
<arg>select geo_division_ids from divisions;</arg>
<arg>${sRoadtoGpsSkeleton}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>landmarkdb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:15.542" level="INFO">Connecting using : pymysql.connect(db=landmarkdb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:15.544" starttime="20180427 15:51:15.541"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.545" level="INFO">Executing : Query  |  select geo_division_ids from divisions; </msg>
<msg timestamp="20180427 15:51:15.546" level="INFO">@{DivisionList} = [ ('1490154494078484481,1490154494078484482',) | ('1490154494078484482',) ]</msg>
<status status="PASS" endtime="20180427 15:51:15.546" starttime="20180427 15:51:15.544"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.546" level="INFO">('1490154494078484481,1490154494078484482',)</msg>
<msg timestamp="20180427 15:51:15.546" level="INFO">('1490154494078484482',)</msg>
<status status="PASS" endtime="20180427 15:51:15.546" starttime="20180427 15:51:15.546"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:15.547" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:15.547" starttime="20180427 15:51:15.547"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.547" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:15.547" starttime="20180427 15:51:15.547"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = ('1490154494078484481,1490154494078484482',)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.548" level="INFO">${DivisionString[0]} = 1490154494078484481,1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:15.548" starttime="20180427 15:51:15.548"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.548" starttime="20180427 15:51:15.548"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.549" starttime="20180427 15:51:15.548"></status>
</kw>
<kw type="foritem" name="${Division} = ('1490154494078484482',)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.549" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:15.549" starttime="20180427 15:51:15.549"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.549" starttime="20180427 15:51:15.549"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.550" starttime="20180427 15:51:15.549"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.550" starttime="20180427 15:51:15.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.550" level="INFO">[u'1490154494078484481,1490154494078484482', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.550" starttime="20180427 15:51:15.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sRoadSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.550" level="INFO">[u'1490154494078484481,1490154494078484482', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.550" starttime="20180427 15:51:15.550"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sRoadSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.551" starttime="20180427 15:51:15.551"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.551" starttime="20180427 15:51:15.541"></status>
</kw>
<kw name="Query LandmarkDB Keyfield" library="utilities">
<arguments>
<arg>select division_id from divisions;</arg>
<arg>${sRoadSkeletonDivision}</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>landmarkdb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:51:15.552" level="INFO">Connecting using : pymysql.connect(db=landmarkdb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:51:15.554" starttime="20180427 15:51:15.552"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{DivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.555" level="INFO">Executing : Query  |  select division_id from divisions; </msg>
<msg timestamp="20180427 15:51:15.556" level="INFO">@{DivisionList} = [ (1490154494078484481,) | (1490154494078484482,) ]</msg>
<status status="PASS" endtime="20180427 15:51:15.556" starttime="20180427 15:51:15.554"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{DivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.557" level="INFO">(1490154494078484481,)</msg>
<msg timestamp="20180427 15:51:15.557" level="INFO">(1490154494078484482,)</msg>
<status status="PASS" endtime="20180427 15:51:15.557" starttime="20180427 15:51:15.556"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:51:15.557" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:51:15.557" starttime="20180427 15:51:15.557"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{FormatDivisionList}</var>
</assign>
<msg timestamp="20180427 15:51:15.558" level="INFO">@{FormatDivisionList} = [ ]</msg>
<status status="PASS" endtime="20180427 15:51:15.558" starttime="20180427 15:51:15.558"></status>
</kw>
<kw type="for" name="${Division} IN [ @{DivisionList} ]">
<kw type="foritem" name="${Division} = (1490154494078484481,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.559" level="INFO">${DivisionString[0]} = 1490154494078484481</msg>
<status status="PASS" endtime="20180427 15:51:15.559" starttime="20180427 15:51:15.559"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.560" starttime="20180427 15:51:15.560"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.560" starttime="20180427 15:51:15.558"></status>
</kw>
<kw type="foritem" name="${Division} = (1490154494078484482,)">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Division[0]}</arg>
</arguments>
<assign>
<var>${DivisionString[0]}</var>
</assign>
<msg timestamp="20180427 15:51:15.563" level="INFO">${DivisionString[0]} = 1490154494078484482</msg>
<status status="PASS" endtime="20180427 15:51:15.563" starttime="20180427 15:51:15.561"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
<arg>${DivisionString[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.564" starttime="20180427 15:51:15.564"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.564" starttime="20180427 15:51:15.560"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.564" starttime="20180427 15:51:15.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FormatDivisionList}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.564" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.565" starttime="20180427 15:51:15.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${sRoadSkeletonDivision}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.565" level="INFO">[u'1490154494078484481', u'1490154494078484482']</msg>
<status status="PASS" endtime="20180427 15:51:15.565" starttime="20180427 15:51:15.565"></status>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${sRoadSkeletonDivision}</arg>
<arg>${FormatDivisionList}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.566" starttime="20180427 15:51:15.565"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:15.566" starttime="20180427 15:51:15.551"></status>
</kw>
<doc>| Description | test roadskeleton full import function |
| Input | 1.roadskeleton |
| Execute | call the command line to process skeleton import |
| Expect result | 1.roadskeleton import success. |
| | 2.DB contain data. |</doc>
<tags>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:51:15.566" critical="yes" starttime="20180427 15:51:02.551"></status>
</test>
<doc>| Description | test skeleton import function |
| Input | 1.gpsskeleton,roadskeleton |
| Execute | call the command line to process skeleton import |
| Expect result | 1.skeleton import success. |
| | 2.DB contain data. |</doc>
<status status="PASS" endtime="20180427 15:51:15.566" starttime="20180427 15:50:36.475"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System/SnippetAnalyzer.txt" id="s1-s3-s5" name="SnippetAnalyzer">
<test id="s1-s3-s5-t1" name="Slam Snippet Analyer">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.576" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:51:15.576" starttime="20180427 15:51:15.576"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:51:15.578" starttime="20180427 15:51:15.576"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:15.579" starttime="20180427 15:51:15.579"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:51:15.582" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:51:16.785" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

 System information disabled due to load higher than 4.0

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:51:03 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:51:16.786" starttime="20180427 15:51:15.581"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:16.786" starttime="20180427 15:51:15.575"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:16.789" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:16.789" starttime="20180427 15:51:16.788"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:16.790" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:16.790" starttime="20180427 15:51:16.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:16.793" starttime="20180427 15:51:16.792"></status>
</kw>
<msg timestamp="20180427 15:51:16.793" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:16.794" starttime="20180427 15:51:16.791"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:16.795" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:16.809" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:16.810" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:16.810" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:16.810" starttime="20180427 15:51:16.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.811" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:16.811" starttime="20180427 15:51:16.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.812" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:16.813" starttime="20180427 15:51:16.812"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:16.814" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:16.814" starttime="20180427 15:51:16.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:16.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:16.816" starttime="20180427 15:51:16.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.817" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:16.817" starttime="20180427 15:51:16.816"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:16.817" starttime="20180427 15:51:16.786"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:16.820" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:51:16.820" starttime="20180427 15:51:16.819"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:16.821" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:16.821" starttime="20180427 15:51:16.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:16.824" starttime="20180427 15:51:16.823"></status>
</kw>
<msg timestamp="20180427 15:51:16.824" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:51:16.824" starttime="20180427 15:51:16.822"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:16.825" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:51:16.870" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:16.871" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:16.871" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:16.871" starttime="20180427 15:51:16.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.873" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:16.873" starttime="20180427 15:51:16.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.874" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:16.874" starttime="20180427 15:51:16.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:16.876" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:16.876" starttime="20180427 15:51:16.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:16.877" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:16.877" starttime="20180427 15:51:16.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.878" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:16.878" starttime="20180427 15:51:16.877"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:16.879" starttime="20180427 15:51:16.818"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:16.882" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:16.882" starttime="20180427 15:51:16.881"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:16.883" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:16.884" starttime="20180427 15:51:16.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:16.886" starttime="20180427 15:51:16.885"></status>
</kw>
<msg timestamp="20180427 15:51:16.886" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:16.887" starttime="20180427 15:51:16.884"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:16.888" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:16.933" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:16.934" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:16.934" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:16.934" starttime="20180427 15:51:16.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.935" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:16.935" starttime="20180427 15:51:16.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.936" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:16.937" starttime="20180427 15:51:16.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:16.938" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:16.938" starttime="20180427 15:51:16.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:16.939" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:16.939" starttime="20180427 15:51:16.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:16.940" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:16.941" starttime="20180427 15:51:16.940"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:16.941" starttime="20180427 15:51:16.879"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:51:16.942" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:51:16.987" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:51:16.988" starttime="20180427 15:51:16.942"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:16.991" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:51:16.991" starttime="20180427 15:51:16.990"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:16.993" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:51:16.993" starttime="20180427 15:51:16.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:16.996" starttime="20180427 15:51:16.995"></status>
</kw>
<msg timestamp="20180427 15:51:16.996" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:51:16.996" starttime="20180427 15:51:16.993"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:16.997" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:51:27.808" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:27.809" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:51:27.809" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:27.810" starttime="20180427 15:51:16.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:27.811" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 11087
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:27.811" starttime="20180427 15:51:27.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:27.812" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:27.812" starttime="20180427 15:51:27.812"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:27.814" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:51:27.814" starttime="20180427 15:51:27.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:27.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:27.815" starttime="20180427 15:51:27.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:27.816" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 11087
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:27.817" starttime="20180427 15:51:27.816"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:27.817" starttime="20180427 15:51:16.989"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:27.818" starttime="20180427 15:51:16.988"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:27.820" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:51:27.820" starttime="20180427 15:51:27.819"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:27.821" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:27.822" starttime="20180427 15:51:27.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:27.824" starttime="20180427 15:51:27.824"></status>
</kw>
<msg timestamp="20180427 15:51:27.825" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:51:27.825" starttime="20180427 15:51:27.822"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:27.826" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:51:27.856" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:27.856" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:51:27.856" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:27.857" starttime="20180427 15:51:27.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:27.858" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:27.858" starttime="20180427 15:51:27.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:27.859" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:27.859" starttime="20180427 15:51:27.858"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:27.861" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:27.861" starttime="20180427 15:51:27.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:27.862" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:27.862" starttime="20180427 15:51:27.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:27.863" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:27.863" starttime="20180427 15:51:27.862"></status>
</kw>
<msg timestamp="20180427 15:51:27.864" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:27.864" starttime="20180427 15:51:27.818"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:27.865" starttime="20180427 15:51:27.864"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:27.865" starttime="20180427 15:51:15.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:27.866" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:27.867" starttime="20180427 15:51:27.866"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp ${sfilefortest}/unzip/slam/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/SnippetAnalyzer/slam/dbbak.sql</arg>
<arg>ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:51:27.870" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:51:27.915" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:27.915" starttime="20180427 15:51:27.869"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:51:27.916" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:51:27.961" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:27.962" starttime="20180427 15:51:27.916"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:51:27.963" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:51:28.008" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.008" starttime="20180427 15:51:27.962"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:51:28.009" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:51:28.086" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.086" starttime="20180427 15:51:28.009"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:51:28.088" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:51:28.133" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.133" starttime="20180427 15:51:28.087"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:51:28.135" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:51:28.180" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.180" starttime="20180427 15:51:28.134"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:51:28.182" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:51:28.227" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.227" starttime="20180427 15:51:28.181"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:51:28.229" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:51:28.274" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.274" starttime="20180427 15:51:28.228"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:28.275" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:51:28.321" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.321" starttime="20180427 15:51:28.275"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:51:28.322" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:51:28.368" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.369" starttime="20180427 15:51:28.322"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:28.370" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:51:28.415" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.416" starttime="20180427 15:51:28.369"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:51:28.417" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:51:28.462" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.463" starttime="20180427 15:51:28.416"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:51:28.464" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:51:28.509" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.509" starttime="20180427 15:51:28.463"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:28.510" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:51:28.556" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:28.556" starttime="20180427 15:51:28.510"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:28.559" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/unzip/slam/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/']</msg>
<status status="PASS" endtime="20180427 15:51:28.559" starttime="20180427 15:51:28.558"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:28.560" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:51:28.560" starttime="20180427 15:51:28.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:28.563" starttime="20180427 15:51:28.562"></status>
</kw>
<msg timestamp="20180427 15:51:28.563" level="INFO">${cmd} = cp ~/autotest/filefortest/unzip/slam/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</msg>
<status status="PASS" endtime="20180427 15:51:28.563" starttime="20180427 15:51:28.561"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:28.564" level="INFO">Executing command 'cp ~/autotest/filefortest/unzip/slam/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:51:28.651" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:28.651" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:28.652" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:28.652" starttime="20180427 15:51:28.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:28.653" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:28.653" starttime="20180427 15:51:28.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:28.655" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:28.655" starttime="20180427 15:51:28.654"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:28.657" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:28.657" starttime="20180427 15:51:28.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:28.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:28.658" starttime="20180427 15:51:28.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:28.659" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:28.660" starttime="20180427 15:51:28.659"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:28.660" starttime="20180427 15:51:28.556"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:28.660" starttime="20180427 15:51:27.868"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:28.663" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/SnippetAnalyzer/slam/dbbak.sql'.</msg>
<msg timestamp="20180427 15:51:30.398" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.399" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:30.399" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.399" starttime="20180427 15:51:28.662"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.400" starttime="20180427 15:51:30.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.401" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:30.401" starttime="20180427 15:51:30.401"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.403" starttime="20180427 15:51:30.402"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.403" starttime="20180427 15:51:28.661"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:30.406" level="INFO">${cmd_split} = [u'ls', u'/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json']</msg>
<status status="PASS" endtime="20180427 15:51:30.406" starttime="20180427 15:51:30.405"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:30.407" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:30.407" starttime="20180427 15:51:30.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.410" starttime="20180427 15:51:30.409"></status>
</kw>
<msg timestamp="20180427 15:51:30.410" level="INFO">${cmd} = ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:30.410" starttime="20180427 15:51:30.408"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:30.411" level="INFO">Executing command 'ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json'.</msg>
<msg timestamp="20180427 15:51:30.456" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.457" level="INFO">${stdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<msg timestamp="20180427 15:51:30.457" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.457" starttime="20180427 15:51:30.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.457" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:30.457" starttime="20180427 15:51:30.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.458" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:30.458" starttime="20180427 15:51:30.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:30.458" level="INFO">${rStdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:30.458" starttime="20180427 15:51:30.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:30.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.459" starttime="20180427 15:51:30.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.459" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:30.459" starttime="20180427 15:51:30.459"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.460" starttime="20180427 15:51:30.403"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.460" starttime="20180427 15:51:27.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:30.460" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:30.460" starttime="20180427 15:51:30.460"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:30.461" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/snippetAnalyzer', u'--isnippet', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam....</msg>
<status status="PASS" endtime="20180427 15:51:30.461" starttime="20180427 15:51:30.461"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:30.462" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/snippetAnalyzer</msg>
<status status="PASS" endtime="20180427 15:51:30.462" starttime="20180427 15:51:30.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.463" starttime="20180427 15:51:30.463"></status>
</kw>
<msg timestamp="20180427 15:51:30.463" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 --icf...</msg>
<status status="PASS" endtime="20180427 15:51:30.463" starttime="20180427 15:51:30.462"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:30.463" level="INFO">Executing command '/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:51:30.579" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.580" level="INFO">${stdout} = [2018-04-27 15:51:31.089][Snippet Extract][info][12342] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410...</msg>
<msg timestamp="20180427 15:51:30.580" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.580" starttime="20180427 15:51:30.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.580" level="INFO">[2018-04-27 15:51:31.089][Snippet Extract][info][12342] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:51:31.089][Snippet Extract][info][12342] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:51:31.089][snippetAnalyzer][info][12342] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:51:31.089][snippetAnalyzer][info][12342] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:51:31.138][snippetAnalyzer][info][12342] [SYS] Start to save gps info, size: 2893 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:51:30.581" starttime="20180427 15:51:30.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.581" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:30.582" starttime="20180427 15:51:30.581"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:30.582" level="INFO">${rStdout} = [2018-04-27 15:51:31.089][Snippet Extract][info][12342] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410...</msg>
<status status="PASS" endtime="20180427 15:51:30.582" starttime="20180427 15:51:30.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:30.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.583" starttime="20180427 15:51:30.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.583" level="INFO">[2018-04-27 15:51:31.089][Snippet Extract][info][12342] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:51:31.089][Snippet Extract][info][12342] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:51:31.089][snippetAnalyzer][info][12342] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:51:31.089][snippetAnalyzer][info][12342] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:31.127][snippetAnalyzer][info][12342] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:51:31.138][snippetAnalyzer][info][12342] [SYS] Start to save gps info, size: 2893 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:31.153][snippetAnalyzer][info][12342] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:51:30.584" starttime="20180427 15:51:30.583"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.584" starttime="20180427 15:51:30.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:30.585" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:30.585" starttime="20180427 15:51:30.584"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"Type"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:30.588" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:30.588" starttime="20180427 15:51:30.587"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:30.588" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:30.588" starttime="20180427 15:51:30.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.590" starttime="20180427 15:51:30.589"></status>
</kw>
<msg timestamp="20180427 15:51:30.590" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:30.590" starttime="20180427 15:51:30.589"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:30.591" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:30.645" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.645" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<msg timestamp="20180427 15:51:30.645" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.645" starttime="20180427 15:51:30.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.646" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:30.646" starttime="20180427 15:51:30.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.646" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:30.646" starttime="20180427 15:51:30.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:30.647" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:51:30.647" starttime="20180427 15:51:30.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:30.647" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.647" starttime="20180427 15:51:30.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.648" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:30.648" starttime="20180427 15:51:30.647"></status>
</kw>
<msg timestamp="20180427 15:51:30.648" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:51:30.648" starttime="20180427 15:51:30.587"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:51:30.648" level="INFO">1 out of 18 lines matched</msg>
<msg timestamp="20180427 15:51:30.649" level="INFO">${Value} =     "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:51:30.649" starttime="20180427 15:51:30.648"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:51:30.651" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:51:30.651" starttime="20180427 15:51:30.649"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.652" level="INFO">    "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:51:30.652" starttime="20180427 15:51:30.652"></status>
</kw>
<msg timestamp="20180427 15:51:30.652" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:51:30.652" starttime="20180427 15:51:30.585"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>slam_loc</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Type&quot;: &quot;slam_loc&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:51:30.653" level="INFO">${words} = [u'"Type":', u'"slam_loc",']</msg>
<status status="PASS" endtime="20180427 15:51:30.653" starttime="20180427 15:51:30.653"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:51:30.654" level="INFO">${key} = [u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:51:30.654" starttime="20180427 15:51:30.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.654" level="INFO">[u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:51:30.655" starttime="20180427 15:51:30.654"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.655" starttime="20180427 15:51:30.655"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.655" starttime="20180427 15:51:30.653"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.655" starttime="20180427 15:51:30.653"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.655" starttime="20180427 15:51:30.652"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:30.657" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:30.657" starttime="20180427 15:51:30.656"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:30.657" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:30.657" starttime="20180427 15:51:30.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.658" starttime="20180427 15:51:30.658"></status>
</kw>
<msg timestamp="20180427 15:51:30.659" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:30.659" starttime="20180427 15:51:30.658"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:30.659" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:30.713" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.714" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<msg timestamp="20180427 15:51:30.714" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.715" starttime="20180427 15:51:30.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.716" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:30.717" starttime="20180427 15:51:30.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.720" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:30.720" starttime="20180427 15:51:30.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:30.721" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:51:30.722" starttime="20180427 15:51:30.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:30.723" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.724" starttime="20180427 15:51:30.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.725" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:30.725" starttime="20180427 15:51:30.724"></status>
</kw>
<msg timestamp="20180427 15:51:30.726" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:51:30.727" starttime="20180427 15:51:30.656"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:51:30.728" level="INFO">1 out of 18 lines matched</msg>
<msg timestamp="20180427 15:51:30.729" level="INFO">${Value} =     "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:51:30.729" starttime="20180427 15:51:30.727"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:51:30.731" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:51:30.731" starttime="20180427 15:51:30.730"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.733" level="INFO">    "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:51:30.733" starttime="20180427 15:51:30.732"></status>
</kw>
<msg timestamp="20180427 15:51:30.734" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:51:30.734" starttime="20180427 15:51:30.655"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:51:30.737" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:51:30.737" starttime="20180427 15:51:30.737"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:51:30.738" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:51:30.738" starttime="20180427 15:51:30.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.739" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:51:30.739" starttime="20180427 15:51:30.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.740" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.740" starttime="20180427 15:51:30.739"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.740" starttime="20180427 15:51:30.737"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.740" starttime="20180427 15:51:30.736"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.740" starttime="20180427 15:51:30.735"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"RefSegmentID"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:30.742" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:30.742" starttime="20180427 15:51:30.742"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:30.743" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:30.743" starttime="20180427 15:51:30.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.744" starttime="20180427 15:51:30.744"></status>
</kw>
<msg timestamp="20180427 15:51:30.744" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:30.744" starttime="20180427 15:51:30.743"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:30.745" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:30.771" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.772" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<msg timestamp="20180427 15:51:30.772" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.772" starttime="20180427 15:51:30.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.772" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:30.772" starttime="20180427 15:51:30.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.773" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:30.773" starttime="20180427 15:51:30.773"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:30.773" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:51:30.773" starttime="20180427 15:51:30.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:30.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.774" starttime="20180427 15:51:30.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.774" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:30.774" starttime="20180427 15:51:30.774"></status>
</kw>
<msg timestamp="20180427 15:51:30.774" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:51:30.774" starttime="20180427 15:51:30.741"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:51:30.775" level="INFO">1 out of 18 lines matched</msg>
<msg timestamp="20180427 15:51:30.775" level="INFO">${Value} =     "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:51:30.775" starttime="20180427 15:51:30.775"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:51:30.776" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:51:30.776" starttime="20180427 15:51:30.775"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.776" level="INFO">    "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:51:30.776" starttime="20180427 15:51:30.776"></status>
</kw>
<msg timestamp="20180427 15:51:30.776" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:51:30.776" starttime="20180427 15:51:30.741"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${346955130}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;RefSegmentID&quot;: &quot;346955130&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:51:30.778" level="INFO">${words} = [u'"RefSegmentID":', u'"346955130",']</msg>
<status status="PASS" endtime="20180427 15:51:30.778" starttime="20180427 15:51:30.777"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:51:30.778" level="INFO">${key} = [u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:51:30.778" starttime="20180427 15:51:30.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.779" level="INFO">[u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:51:30.779" starttime="20180427 15:51:30.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.779" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.780" starttime="20180427 15:51:30.779"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.780" starttime="20180427 15:51:30.777"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.780" starttime="20180427 15:51:30.777"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.780" starttime="20180427 15:51:30.777"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:30.781" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt']</msg>
<status status="PASS" endtime="20180427 15:51:30.781" starttime="20180427 15:51:30.780"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:30.781" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:30.781" starttime="20180427 15:51:30.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.782" starttime="20180427 15:51:30.782"></status>
</kw>
<msg timestamp="20180427 15:51:30.782" level="INFO">${cmd} = ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:30.782" starttime="20180427 15:51:30.781"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:30.783" level="INFO">Executing command 'ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:51:30.828" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:30.828" level="INFO">${stdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<msg timestamp="20180427 15:51:30.828" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:30.829" starttime="20180427 15:51:30.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.830" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:30.830" starttime="20180427 15:51:30.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.831" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:30.831" starttime="20180427 15:51:30.830"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:30.832" level="INFO">${rStdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:30.833" starttime="20180427 15:51:30.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:30.834" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:30.834" starttime="20180427 15:51:30.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.835" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:30.835" starttime="20180427 15:51:30.834"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:30.836" starttime="20180427 15:51:30.780"></status>
</kw>
<doc>| Description | test normal snippetanalyer of slam snippet |
| Input | 1.input json |
| | 2.slam |
| Execute | call the command line to process snippetanalyer |
| Expect result | 1.output json,with type,quality and segment. |
| | 2.traj |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:51:30.836" critical="yes" starttime="20180427 15:51:15.574"></status>
</test>
<test id="s1-s3-s5-t2" name="Align Snippet Analyer">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.842" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:51:30.842" starttime="20180427 15:51:30.841"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:51:30.860" starttime="20180427 15:51:30.842"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:30.862" starttime="20180427 15:51:30.861"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:51:30.863" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:51:32.065" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

 System information disabled due to load higher than 4.0

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:51:16 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:51:32.065" starttime="20180427 15:51:30.862"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:32.066" starttime="20180427 15:51:30.840"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:32.068" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:32.068" starttime="20180427 15:51:32.067"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:32.070" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:32.070" starttime="20180427 15:51:32.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:32.073" starttime="20180427 15:51:32.072"></status>
</kw>
<msg timestamp="20180427 15:51:32.073" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:32.073" starttime="20180427 15:51:32.071"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:32.074" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:32.089" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:32.090" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:32.090" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:32.090" starttime="20180427 15:51:32.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.091" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:32.091" starttime="20180427 15:51:32.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.092" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:32.093" starttime="20180427 15:51:32.092"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:32.094" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:32.094" starttime="20180427 15:51:32.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:32.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:32.095" starttime="20180427 15:51:32.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.096" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:32.096" starttime="20180427 15:51:32.095"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:32.098" starttime="20180427 15:51:32.066"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:32.098" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:51:32.099" starttime="20180427 15:51:32.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:32.099" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:32.099" starttime="20180427 15:51:32.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:32.100" starttime="20180427 15:51:32.100"></status>
</kw>
<msg timestamp="20180427 15:51:32.100" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:51:32.100" starttime="20180427 15:51:32.099"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:32.101" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:51:32.145" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:32.146" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:32.146" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:32.146" starttime="20180427 15:51:32.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.147" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:32.147" starttime="20180427 15:51:32.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.148" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:32.149" starttime="20180427 15:51:32.148"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:32.150" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:32.150" starttime="20180427 15:51:32.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:32.151" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:32.151" starttime="20180427 15:51:32.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.152" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:32.152" starttime="20180427 15:51:32.152"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:32.153" starttime="20180427 15:51:32.098"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:32.155" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:32.155" starttime="20180427 15:51:32.154"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:32.157" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:32.157" starttime="20180427 15:51:32.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:32.160" starttime="20180427 15:51:32.159"></status>
</kw>
<msg timestamp="20180427 15:51:32.160" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:32.160" starttime="20180427 15:51:32.157"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:32.161" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:32.206" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:32.207" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:32.207" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:32.207" starttime="20180427 15:51:32.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.208" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:32.209" starttime="20180427 15:51:32.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.210" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:32.210" starttime="20180427 15:51:32.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:32.211" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:32.211" starttime="20180427 15:51:32.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:32.212" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:32.213" starttime="20180427 15:51:32.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:32.214" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:32.214" starttime="20180427 15:51:32.213"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:32.214" starttime="20180427 15:51:32.153"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:51:32.215" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:51:32.261" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:51:32.261" starttime="20180427 15:51:32.215"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:32.265" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:51:32.265" starttime="20180427 15:51:32.264"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:32.266" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:51:32.266" starttime="20180427 15:51:32.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:32.270" starttime="20180427 15:51:32.269"></status>
</kw>
<msg timestamp="20180427 15:51:32.270" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:51:32.270" starttime="20180427 15:51:32.267"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:32.271" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:51:42.881" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:42.881" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:51:42.881" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:42.882" starttime="20180427 15:51:32.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:42.883" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 13373
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:42.883" starttime="20180427 15:51:42.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:42.884" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:42.884" starttime="20180427 15:51:42.884"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:42.886" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:51:42.886" starttime="20180427 15:51:42.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:42.887" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:42.887" starttime="20180427 15:51:42.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:42.888" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 13373
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:42.889" starttime="20180427 15:51:42.888"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:42.889" starttime="20180427 15:51:32.263"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:42.890" starttime="20180427 15:51:32.262"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:42.892" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:51:42.892" starttime="20180427 15:51:42.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:42.894" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:42.894" starttime="20180427 15:51:42.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:42.896" starttime="20180427 15:51:42.896"></status>
</kw>
<msg timestamp="20180427 15:51:42.897" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:51:42.897" starttime="20180427 15:51:42.894"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:42.898" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:51:42.926" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:42.927" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:51:42.927" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:42.927" starttime="20180427 15:51:42.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:42.929" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:42.929" starttime="20180427 15:51:42.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:42.930" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:42.930" starttime="20180427 15:51:42.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:42.931" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:42.932" starttime="20180427 15:51:42.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:42.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:42.933" starttime="20180427 15:51:42.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:42.934" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:42.934" starttime="20180427 15:51:42.933"></status>
</kw>
<msg timestamp="20180427 15:51:42.935" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:42.935" starttime="20180427 15:51:42.890"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:42.936" starttime="20180427 15:51:42.935"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:42.937" starttime="20180427 15:51:30.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:42.938" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:42.938" starttime="20180427 15:51:42.937"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp ${sfilefortest}/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/SnippetAnalyzer/align/dbbak.sql</arg>
<arg>ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:51:42.941" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:51:42.987" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:42.987" starttime="20180427 15:51:42.941"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:51:42.988" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:51:43.065" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.066" starttime="20180427 15:51:42.988"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:51:43.067" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:51:43.143" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.143" starttime="20180427 15:51:43.066"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:51:43.144" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:51:43.188" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.189" starttime="20180427 15:51:43.144"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:51:43.190" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:51:43.235" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.235" starttime="20180427 15:51:43.189"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:51:43.237" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:51:43.282" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.282" starttime="20180427 15:51:43.236"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:51:43.283" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:51:43.361" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.361" starttime="20180427 15:51:43.283"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:51:43.363" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:51:43.408" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.408" starttime="20180427 15:51:43.362"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:43.409" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:51:43.455" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.455" starttime="20180427 15:51:43.409"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:51:43.456" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:51:43.533" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.534" starttime="20180427 15:51:43.456"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:43.535" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:51:43.581" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.581" starttime="20180427 15:51:43.534"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:51:43.582" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:51:43.627" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.628" starttime="20180427 15:51:43.582"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:51:43.629" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:51:43.674" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.674" starttime="20180427 15:51:43.628"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:43.675" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:51:43.753" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:43.753" starttime="20180427 15:51:43.675"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:43.756" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/...</msg>
<status status="PASS" endtime="20180427 15:51:43.756" starttime="20180427 15:51:43.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:43.758" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:51:43.758" starttime="20180427 15:51:43.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:43.761" starttime="20180427 15:51:43.760"></status>
</kw>
<msg timestamp="20180427 15:51:43.761" level="INFO">${cmd} = cp ~/autotest/filefortest/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</msg>
<status status="PASS" endtime="20180427 15:51:43.761" starttime="20180427 15:51:43.758"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:43.762" level="INFO">Executing command 'cp ~/autotest/filefortest/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:51:43.879" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:43.880" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:43.880" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:43.880" starttime="20180427 15:51:43.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:43.881" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:43.881" starttime="20180427 15:51:43.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:43.882" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:43.883" starttime="20180427 15:51:43.882"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:43.884" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:43.884" starttime="20180427 15:51:43.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:43.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:43.885" starttime="20180427 15:51:43.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:43.886" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:43.887" starttime="20180427 15:51:43.886"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:43.887" starttime="20180427 15:51:43.754"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:43.887" starttime="20180427 15:51:42.940"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:43.890" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/SnippetAnalyzer/align/dbbak.sql'.</msg>
<msg timestamp="20180427 15:51:45.796" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:45.797" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:45.797" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:45.797" starttime="20180427 15:51:43.889"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:45.799" starttime="20180427 15:51:45.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:45.801" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:45.801" starttime="20180427 15:51:45.800"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:45.802" starttime="20180427 15:51:45.801"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:45.803" starttime="20180427 15:51:43.888"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:45.806" level="INFO">${cmd_split} = [u'ls', u'/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json']</msg>
<status status="PASS" endtime="20180427 15:51:45.806" starttime="20180427 15:51:45.804"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:45.807" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:45.807" starttime="20180427 15:51:45.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:45.810" starttime="20180427 15:51:45.809"></status>
</kw>
<msg timestamp="20180427 15:51:45.810" level="INFO">${cmd} = ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:45.810" starttime="20180427 15:51:45.808"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:45.812" level="INFO">Executing command 'ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json'.</msg>
<msg timestamp="20180427 15:51:45.857" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:45.857" level="INFO">${stdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<msg timestamp="20180427 15:51:45.857" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:45.858" starttime="20180427 15:51:45.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:45.858" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:45.859" starttime="20180427 15:51:45.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:45.860" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:45.860" starttime="20180427 15:51:45.859"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:45.861" level="INFO">${rStdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:45.861" starttime="20180427 15:51:45.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:45.862" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:45.862" starttime="20180427 15:51:45.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:45.863" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:51:45.863" starttime="20180427 15:51:45.862"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:45.864" starttime="20180427 15:51:45.803"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:45.864" starttime="20180427 15:51:42.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:45.865" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:45.865" starttime="20180427 15:51:45.864"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:45.867" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/snippetAnalyzer', u'--isnippet', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_...</msg>
<status status="PASS" endtime="20180427 15:51:45.867" starttime="20180427 15:51:45.866"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:45.868" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/snippetAnalyzer</msg>
<status status="PASS" endtime="20180427 15:51:45.868" starttime="20180427 15:51:45.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:45.870" starttime="20180427 15:51:45.869"></status>
</kw>
<msg timestamp="20180427 15:51:45.870" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 ...</msg>
<status status="PASS" endtime="20180427 15:51:45.870" starttime="20180427 15:51:45.868"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:45.871" level="INFO">Executing command '/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:51:46.028" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:46.029" level="INFO">${stdout} = [2018-04-27 15:51:46.498][Snippet Extract][info][14630] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410...</msg>
<msg timestamp="20180427 15:51:46.029" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:46.029" starttime="20180427 15:51:45.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.030" level="INFO">[2018-04-27 15:51:46.498][Snippet Extract][info][14630] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:51:46.498][Snippet Extract][info][14630] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:51:46.498][snippetAnalyzer][info][14630] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:51:46.498][snippetAnalyzer][info][14630] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:51:46.579][snippetAnalyzer][info][14630] [SYS] Start to save gps info, size: 3035 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:51:46.031" starttime="20180427 15:51:46.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.032" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:46.032" starttime="20180427 15:51:46.031"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:46.033" level="INFO">${rStdout} = [2018-04-27 15:51:46.498][Snippet Extract][info][14630] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410...</msg>
<status status="PASS" endtime="20180427 15:51:46.033" starttime="20180427 15:51:46.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:46.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.035" starttime="20180427 15:51:46.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.036" level="INFO">[2018-04-27 15:51:46.498][Snippet Extract][info][14630] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:51:46.498][Snippet Extract][info][14630] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:51:46.498][snippetAnalyzer][info][14630] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:51:46.498][snippetAnalyzer][info][14630] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:46.571][snippetAnalyzer][info][14630] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:51:46.579][snippetAnalyzer][info][14630] [SYS] Start to save gps info, size: 3035 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:51:46.593][snippetAnalyzer][info][14630] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:51:46.036" starttime="20180427 15:51:46.035"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.037" starttime="20180427 15:51:45.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:46.038" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:46.038" starttime="20180427 15:51:46.037"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"Type"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:46.041" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:46.042" starttime="20180427 15:51:46.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:46.043" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:46.043" starttime="20180427 15:51:46.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.046" starttime="20180427 15:51:46.045"></status>
</kw>
<msg timestamp="20180427 15:51:46.046" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:46.046" starttime="20180427 15:51:46.044"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:46.047" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:46.086" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:46.087" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:51:46.087" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:46.088" starttime="20180427 15:51:46.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.089" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.089" starttime="20180427 15:51:46.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.090" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:46.090" starttime="20180427 15:51:46.089"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:46.092" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.092" starttime="20180427 15:51:46.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:46.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.093" starttime="20180427 15:51:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.094" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.095" starttime="20180427 15:51:46.094"></status>
</kw>
<msg timestamp="20180427 15:51:46.096" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.096" starttime="20180427 15:51:46.039"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:51:46.098" level="INFO">1 out of 37 lines matched</msg>
<msg timestamp="20180427 15:51:46.098" level="INFO">${Value} =     "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:51:46.098" starttime="20180427 15:51:46.097"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:51:46.100" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:51:46.100" starttime="20180427 15:51:46.099"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.101" level="INFO">    "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:51:46.102" starttime="20180427 15:51:46.101"></status>
</kw>
<msg timestamp="20180427 15:51:46.102" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:51:46.103" starttime="20180427 15:51:46.038"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>slam_loc</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Type&quot;: &quot;slam_loc&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:51:46.107" level="INFO">${words} = [u'"Type":', u'"slam_loc",']</msg>
<status status="PASS" endtime="20180427 15:51:46.108" starttime="20180427 15:51:46.106"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:51:46.109" level="INFO">${key} = [u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.109" starttime="20180427 15:51:46.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.110" level="INFO">[u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.111" starttime="20180427 15:51:46.110"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.113" starttime="20180427 15:51:46.111"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.113" starttime="20180427 15:51:46.106"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.113" starttime="20180427 15:51:46.104"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.113" starttime="20180427 15:51:46.103"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:46.117" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:46.117" starttime="20180427 15:51:46.116"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:46.118" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:46.118" starttime="20180427 15:51:46.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.120" starttime="20180427 15:51:46.120"></status>
</kw>
<msg timestamp="20180427 15:51:46.120" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:46.120" starttime="20180427 15:51:46.119"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:46.121" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:46.145" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:46.145" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:51:46.145" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:46.145" starttime="20180427 15:51:46.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.145" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.146" starttime="20180427 15:51:46.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.146" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:46.146" starttime="20180427 15:51:46.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:46.146" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.146" starttime="20180427 15:51:46.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:46.147" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.147" starttime="20180427 15:51:46.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.147" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.147" starttime="20180427 15:51:46.147"></status>
</kw>
<msg timestamp="20180427 15:51:46.148" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.148" starttime="20180427 15:51:46.115"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:51:46.151" level="INFO">1 out of 37 lines matched</msg>
<msg timestamp="20180427 15:51:46.152" level="INFO">${Value} =     "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:51:46.152" starttime="20180427 15:51:46.148"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:51:46.154" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:51:46.154" starttime="20180427 15:51:46.153"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.154" level="INFO">    "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:51:46.154" starttime="20180427 15:51:46.154"></status>
</kw>
<msg timestamp="20180427 15:51:46.155" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:51:46.155" starttime="20180427 15:51:46.114"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:51:46.156" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:51:46.156" starttime="20180427 15:51:46.156"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:51:46.157" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.157" starttime="20180427 15:51:46.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.157" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.157" starttime="20180427 15:51:46.157"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.158" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.158" starttime="20180427 15:51:46.157"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.158" starttime="20180427 15:51:46.156"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.158" starttime="20180427 15:51:46.155"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.158" starttime="20180427 15:51:46.155"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"RefSegmentID"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:46.159" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:46.159" starttime="20180427 15:51:46.159"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:46.161" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:46.161" starttime="20180427 15:51:46.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.162" starttime="20180427 15:51:46.161"></status>
</kw>
<msg timestamp="20180427 15:51:46.162" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:46.162" starttime="20180427 15:51:46.161"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:46.162" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:46.200" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:46.200" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:51:46.200" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:46.200" starttime="20180427 15:51:46.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.201" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.201" starttime="20180427 15:51:46.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.201" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:46.202" starttime="20180427 15:51:46.201"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:46.202" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.202" starttime="20180427 15:51:46.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:46.202" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.202" starttime="20180427 15:51:46.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.203" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.203" starttime="20180427 15:51:46.203"></status>
</kw>
<msg timestamp="20180427 15:51:46.203" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.203" starttime="20180427 15:51:46.159"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:51:46.204" level="INFO">1 out of 37 lines matched</msg>
<msg timestamp="20180427 15:51:46.204" level="INFO">${Value} =     "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:51:46.204" starttime="20180427 15:51:46.203"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:51:46.204" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:51:46.204" starttime="20180427 15:51:46.204"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.205" level="INFO">    "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:51:46.205" starttime="20180427 15:51:46.204"></status>
</kw>
<msg timestamp="20180427 15:51:46.205" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:51:46.205" starttime="20180427 15:51:46.158"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${346955130}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;RefSegmentID&quot;: &quot;346955130&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:51:46.206" level="INFO">${words} = [u'"RefSegmentID":', u'"346955130",']</msg>
<status status="PASS" endtime="20180427 15:51:46.206" starttime="20180427 15:51:46.206"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:51:46.207" level="INFO">${key} = [u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.207" starttime="20180427 15:51:46.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.207" level="INFO">[u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.207" starttime="20180427 15:51:46.207"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.208" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.208" starttime="20180427 15:51:46.207"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.208" starttime="20180427 15:51:46.206"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.208" starttime="20180427 15:51:46.206"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.208" starttime="20180427 15:51:46.205"></status>
</kw>
<kw name="Check Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"ReferenceID"</arg>
<arg>slam_loc</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{sReferenceAlign}</arg>
</arguments>
<assign>
<var>${reference align}</var>
</assign>
<msg timestamp="20180427 15:51:46.209" level="INFO">${reference align} = [u'1490160891432271873', u'1490160874252402689', u'1490160685273841665', u'1490160680978874369']</msg>
<status status="PASS" endtime="20180427 15:51:46.209" starttime="20180427 15:51:46.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{sReferenceSdor}</arg>
</arguments>
<assign>
<var>${reference sdor}</var>
</assign>
<msg timestamp="20180427 15:51:46.209" level="INFO">${reference sdor} = [u'1490160616554364929', u'1490160668093972481', u'1490160680978874370', u'1490160685273841666', u'1490160874252402690']</msg>
<status status="PASS" endtime="20180427 15:51:46.209" starttime="20180427 15:51:46.209"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${reference get}</var>
</assign>
<msg timestamp="20180427 15:51:46.210" level="INFO">${reference get} = []</msg>
<status status="PASS" endtime="20180427 15:51:46.210" starttime="20180427 15:51:46.209"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:46.211" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:51:46.211" starttime="20180427 15:51:46.210"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:46.211" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:51:46.211" starttime="20180427 15:51:46.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.212" starttime="20180427 15:51:46.212"></status>
</kw>
<msg timestamp="20180427 15:51:46.212" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:51:46.212" starttime="20180427 15:51:46.211"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:46.213" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:51:46.267" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:46.268" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:51:46.268" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:46.268" starttime="20180427 15:51:46.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.269" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.269" starttime="20180427 15:51:46.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.270" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:46.271" starttime="20180427 15:51:46.270"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:46.272" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.272" starttime="20180427 15:51:46.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:46.274" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.274" starttime="20180427 15:51:46.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.275" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:51:46.275" starttime="20180427 15:51:46.274"></status>
</kw>
<msg timestamp="20180427 15:51:46.276" level="INFO">${std_out} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:51:46.276" starttime="20180427 15:51:46.210"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${references}</var>
</assign>
<msg timestamp="20180427 15:51:46.277" level="INFO">4 out of 37 lines matched</msg>
<msg timestamp="20180427 15:51:46.277" level="INFO">${references} =             "ReferenceID": "1490160891432271873",
            "ReferenceID": "1490160874252402689",
            "ReferenceID": "1490160685273841665",
            "ReferenceID": "1490160680978874369",</msg>
<status status="PASS" endtime="20180427 15:51:46.278" starttime="20180427 15:51:46.276"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${references}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${reference}</var>
</assign>
<msg timestamp="20180427 15:51:46.279" level="INFO">${reference} = [u'            "ReferenceID": "1490160891432271873",', u'            "ReferenceID": "1490160874252402689",', u'            "ReferenceID": "1490160685273841665",', u'            "ReferenceID": "1490160...</msg>
<status status="PASS" endtime="20180427 15:51:46.279" starttime="20180427 15:51:46.278"></status>
</kw>
<kw type="for" name="${reference1} IN [ @{reference} ]">
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160891432271873&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:51:46.281" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160891432271873",']</msg>
<status status="PASS" endtime="20180427 15:51:46.281" starttime="20180427 15:51:46.280"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:51:46.282" level="INFO">${reference NO} = [u'', u'1490160891432271873', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.282" starttime="20180427 15:51:46.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.284" level="INFO">1490160891432271873</msg>
<status status="PASS" endtime="20180427 15:51:46.284" starttime="20180427 15:51:46.283"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.285" starttime="20180427 15:51:46.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.286" level="INFO">[u'1490160891432271873']</msg>
<status status="PASS" endtime="20180427 15:51:46.286" starttime="20180427 15:51:46.286"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.286" starttime="20180427 15:51:46.280"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160874252402689&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:51:46.288" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160874252402689",']</msg>
<status status="PASS" endtime="20180427 15:51:46.288" starttime="20180427 15:51:46.287"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:51:46.289" level="INFO">${reference NO} = [u'', u'1490160874252402689', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.289" starttime="20180427 15:51:46.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.290" level="INFO">1490160874252402689</msg>
<status status="PASS" endtime="20180427 15:51:46.291" starttime="20180427 15:51:46.290"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.292" starttime="20180427 15:51:46.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.293" level="INFO">[u'1490160891432271873', u'1490160874252402689']</msg>
<status status="PASS" endtime="20180427 15:51:46.293" starttime="20180427 15:51:46.292"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.293" starttime="20180427 15:51:46.287"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160685273841665&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:51:46.295" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160685273841665",']</msg>
<status status="PASS" endtime="20180427 15:51:46.295" starttime="20180427 15:51:46.294"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:51:46.296" level="INFO">${reference NO} = [u'', u'1490160685273841665', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.296" starttime="20180427 15:51:46.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.297" level="INFO">1490160685273841665</msg>
<status status="PASS" endtime="20180427 15:51:46.297" starttime="20180427 15:51:46.297"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.298" starttime="20180427 15:51:46.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.299" level="INFO">[u'1490160891432271873', u'1490160874252402689', u'1490160685273841665']</msg>
<status status="PASS" endtime="20180427 15:51:46.299" starttime="20180427 15:51:46.298"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.299" starttime="20180427 15:51:46.293"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160680978874369&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:51:46.300" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160680978874369",']</msg>
<status status="PASS" endtime="20180427 15:51:46.300" starttime="20180427 15:51:46.299"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:51:46.301" level="INFO">${reference NO} = [u'', u'1490160680978874369', u',']</msg>
<status status="PASS" endtime="20180427 15:51:46.301" starttime="20180427 15:51:46.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.302" level="INFO">1490160680978874369</msg>
<status status="PASS" endtime="20180427 15:51:46.302" starttime="20180427 15:51:46.301"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.303" starttime="20180427 15:51:46.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.303" level="INFO">[u'1490160891432271873', u'1490160874252402689', u'1490160685273841665', u'1490160680978874369']</msg>
<status status="PASS" endtime="20180427 15:51:46.303" starttime="20180427 15:51:46.303"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.303" starttime="20180427 15:51:46.299"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.303" starttime="20180427 15:51:46.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pType}' == 'slam_loc'</arg>
<arg>Lists Should Be Equal</arg>
<arg>${reference align}</arg>
<arg>${reference get}</arg>
<arg>ELSE IF</arg>
<arg>'${ptype}' == 'rg'</arg>
<arg>Lists Should Be Equal</arg>
<arg>${reference sdor}</arg>
<arg>${reference get}</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>${ptype}</arg>
</arguments>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${reference align}</arg>
<arg>${reference get}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.305" starttime="20180427 15:51:46.304"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.305" starttime="20180427 15:51:46.304"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.305" starttime="20180427 15:51:46.208"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:46.306" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt']</msg>
<status status="PASS" endtime="20180427 15:51:46.306" starttime="20180427 15:51:46.306"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:46.307" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:46.307" starttime="20180427 15:51:46.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.308" starttime="20180427 15:51:46.308"></status>
</kw>
<msg timestamp="20180427 15:51:46.308" level="INFO">${cmd} = ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:46.308" starttime="20180427 15:51:46.307"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:46.309" level="INFO">Executing command 'ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:51:46.322" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:46.322" level="INFO">${stdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<msg timestamp="20180427 15:51:46.322" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:46.322" starttime="20180427 15:51:46.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.323" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:46.323" starttime="20180427 15:51:46.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.323" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:46.323" starttime="20180427 15:51:46.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:46.324" level="INFO">${rStdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:46.324" starttime="20180427 15:51:46.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:46.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:46.324" starttime="20180427 15:51:46.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.325" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:51:46.325" starttime="20180427 15:51:46.324"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:46.325" starttime="20180427 15:51:46.305"></status>
</kw>
<doc>| Description | test normal snippetanalyer of align snippet |
| Input | 1.input json |
| | 2.align |
| | 3.reference |
| Execute | call the command line to process snippetanalyer |
| Expect result | 1.output json,with type,quality and segment. |
| | 2.traj |
| | 3.reference |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:51:46.325" critical="yes" starttime="20180427 15:51:30.837"></status>
</test>
<test id="s1-s3-s5-t3" name="Slam And Align Snippet Analyer">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.327" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:51:46.327" starttime="20180427 15:51:46.327"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:51:46.356" starttime="20180427 15:51:46.327"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:46.358" starttime="20180427 15:51:46.357"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:51:46.359" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:51:47.830" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

 System information disabled due to load higher than 4.0

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:51:31 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:51:47.830" starttime="20180427 15:51:46.358"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:47.831" starttime="20180427 15:51:46.326"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:47.833" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:47.833" starttime="20180427 15:51:47.832"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:47.835" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:47.835" starttime="20180427 15:51:47.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:47.837" starttime="20180427 15:51:47.836"></status>
</kw>
<msg timestamp="20180427 15:51:47.837" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:47.837" starttime="20180427 15:51:47.835"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:47.839" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:47.863" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:47.864" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:47.864" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:47.864" starttime="20180427 15:51:47.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.865" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:47.866" starttime="20180427 15:51:47.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.867" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:47.867" starttime="20180427 15:51:47.866"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:47.868" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:47.868" starttime="20180427 15:51:47.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:47.869" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:47.869" starttime="20180427 15:51:47.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.870" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:47.870" starttime="20180427 15:51:47.870"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:47.871" starttime="20180427 15:51:47.831"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:47.873" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:51:47.874" starttime="20180427 15:51:47.872"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:47.875" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:47.875" starttime="20180427 15:51:47.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:47.878" starttime="20180427 15:51:47.877"></status>
</kw>
<msg timestamp="20180427 15:51:47.879" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:51:47.879" starttime="20180427 15:51:47.876"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:47.880" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:51:47.909" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:47.909" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:47.909" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:47.909" starttime="20180427 15:51:47.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.911" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:47.911" starttime="20180427 15:51:47.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.912" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:47.912" starttime="20180427 15:51:47.911"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:47.913" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:47.913" starttime="20180427 15:51:47.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:47.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:47.914" starttime="20180427 15:51:47.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.915" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:47.916" starttime="20180427 15:51:47.915"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:47.916" starttime="20180427 15:51:47.871"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:47.918" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:51:47.918" starttime="20180427 15:51:47.917"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:47.920" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:51:47.920" starttime="20180427 15:51:47.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:47.922" starttime="20180427 15:51:47.922"></status>
</kw>
<msg timestamp="20180427 15:51:47.923" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:51:47.923" starttime="20180427 15:51:47.920"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:47.924" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:51:47.969" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:47.970" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:47.970" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:47.970" starttime="20180427 15:51:47.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.971" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:47.971" starttime="20180427 15:51:47.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.972" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:47.973" starttime="20180427 15:51:47.972"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:47.974" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:47.974" starttime="20180427 15:51:47.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:47.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:47.976" starttime="20180427 15:51:47.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:47.977" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:47.977" starttime="20180427 15:51:47.976"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:47.977" starttime="20180427 15:51:47.916"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:51:47.978" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:51:48.024" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:51:48.024" starttime="20180427 15:51:47.978"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:48.028" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:51:48.028" starttime="20180427 15:51:48.027"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:48.029" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:51:48.030" starttime="20180427 15:51:48.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:48.032" starttime="20180427 15:51:48.031"></status>
</kw>
<msg timestamp="20180427 15:51:48.032" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:51:48.032" starttime="20180427 15:51:48.030"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:48.033" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:51:58.660" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:58.660" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:51:58.661" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:58.661" starttime="20180427 15:51:48.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:58.662" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 15675
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:58.662" starttime="20180427 15:51:58.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:58.663" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:58.664" starttime="20180427 15:51:58.663"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:58.665" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:51:58.665" starttime="20180427 15:51:58.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:58.666" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:58.668" starttime="20180427 15:51:58.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:58.669" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 15675
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:51:58.669" starttime="20180427 15:51:58.668"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:58.670" starttime="20180427 15:51:48.026"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:58.670" starttime="20180427 15:51:48.025"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:58.673" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:51:58.673" starttime="20180427 15:51:58.672"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:58.674" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:51:58.674" starttime="20180427 15:51:58.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:58.677" starttime="20180427 15:51:58.676"></status>
</kw>
<msg timestamp="20180427 15:51:58.677" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:51:58.677" starttime="20180427 15:51:58.675"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:58.678" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:51:58.707" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:58.708" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:51:58.708" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:58.708" starttime="20180427 15:51:58.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:58.710" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:58.710" starttime="20180427 15:51:58.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:58.711" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:58.711" starttime="20180427 15:51:58.710"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:58.712" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:58.713" starttime="20180427 15:51:58.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:58.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:58.714" starttime="20180427 15:51:58.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:58.715" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:51:58.715" starttime="20180427 15:51:58.714"></status>
</kw>
<msg timestamp="20180427 15:51:58.716" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:51:58.716" starttime="20180427 15:51:58.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:58.717" starttime="20180427 15:51:58.716"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:58.717" starttime="20180427 15:51:46.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:51:58.718" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:51:58.719" starttime="20180427 15:51:58.718"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp ${sfilefortest}/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/ &amp;&amp; cp ${sfilefortest}/unzip/slam/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/SnippetAnalyzer/align/dbbak.sql</arg>
<arg>ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:51:58.722" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:51:58.766" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:58.767" starttime="20180427 15:51:58.721"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:51:58.768" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:51:58.845" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:58.845" starttime="20180427 15:51:58.767"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:51:58.846" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:51:58.893" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:58.894" starttime="20180427 15:51:58.846"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:51:58.895" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:51:58.940" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:58.941" starttime="20180427 15:51:58.894"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:51:58.942" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:51:58.987" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:58.988" starttime="20180427 15:51:58.941"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:51:58.989" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:51:59.066" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.067" starttime="20180427 15:51:58.988"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:51:59.068" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:51:59.113" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.114" starttime="20180427 15:51:59.068"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:51:59.115" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:51:59.160" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.161" starttime="20180427 15:51:59.114"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:59.162" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:51:59.207" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.208" starttime="20180427 15:51:59.161"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:51:59.209" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:51:59.254" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.255" starttime="20180427 15:51:59.208"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:59.256" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:51:59.301" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.301" starttime="20180427 15:51:59.255"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:51:59.303" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:51:59.348" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.348" starttime="20180427 15:51:59.302"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:51:59.348" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:51:59.392" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.392" starttime="20180427 15:51:59.348"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:51:59.393" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:51:59.438" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:51:59.438" starttime="20180427 15:51:59.392"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:51:59.442" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/...</msg>
<status status="PASS" endtime="20180427 15:51:59.442" starttime="20180427 15:51:59.441"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:51:59.444" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:51:59.444" starttime="20180427 15:51:59.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:51:59.447" starttime="20180427 15:51:59.446"></status>
</kw>
<msg timestamp="20180427 15:51:59.447" level="INFO">${cmd} = cp ~/autotest/filefortest/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/ &amp;&amp; cp ~/au...</msg>
<status status="PASS" endtime="20180427 15:51:59.447" starttime="20180427 15:51:59.444"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:59.448" level="INFO">Executing command 'cp ~/autotest/filefortest/unzip/align/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/ &amp;&amp; cp ~/autotest/filefortest/unzip/slam/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:51:59.535" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:51:59.535" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:51:59.535" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:51:59.536" starttime="20180427 15:51:59.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:59.537" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:59.537" starttime="20180427 15:51:59.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:51:59.538" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:51:59.538" starttime="20180427 15:51:59.537"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:51:59.540" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:51:59.540" starttime="20180427 15:51:59.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:51:59.541" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:51:59.541" starttime="20180427 15:51:59.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:51:59.542" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:51:59.542" starttime="20180427 15:51:59.542"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:59.543" starttime="20180427 15:51:59.439"></status>
</kw>
<status status="PASS" endtime="20180427 15:51:59.543" starttime="20180427 15:51:58.720"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:51:59.545" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/SnippetAnalyzer/align/dbbak.sql'.</msg>
<msg timestamp="20180427 15:52:01.514" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:01.514" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:01.514" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:01.514" starttime="20180427 15:51:59.544"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:01.514" starttime="20180427 15:52:01.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.515" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:01.515" starttime="20180427 15:52:01.515"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:01.515" starttime="20180427 15:52:01.515"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:01.516" starttime="20180427 15:51:59.543"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:01.516" level="INFO">${cmd_split} = [u'ls', u'/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json']</msg>
<status status="PASS" endtime="20180427 15:52:01.517" starttime="20180427 15:52:01.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:01.517" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:01.517" starttime="20180427 15:52:01.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:01.518" starttime="20180427 15:52:01.518"></status>
</kw>
<msg timestamp="20180427 15:52:01.518" level="INFO">${cmd} = ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:01.518" starttime="20180427 15:52:01.517"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:01.519" level="INFO">Executing command 'ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json'.</msg>
<msg timestamp="20180427 15:52:01.575" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:01.575" level="INFO">${stdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<msg timestamp="20180427 15:52:01.576" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:01.576" starttime="20180427 15:52:01.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.577" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:01.577" starttime="20180427 15:52:01.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.578" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:01.579" starttime="20180427 15:52:01.578"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:01.580" level="INFO">${rStdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:01.580" starttime="20180427 15:52:01.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:01.581" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:01.582" starttime="20180427 15:52:01.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.582" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:01.583" starttime="20180427 15:52:01.582"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:01.583" starttime="20180427 15:52:01.516"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:01.584" starttime="20180427 15:51:58.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:01.585" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:01.585" starttime="20180427 15:52:01.584"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt &amp;&amp; /opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:01.588" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/snippetAnalyzer', u'--isnippet', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam....</msg>
<status status="PASS" endtime="20180427 15:52:01.588" starttime="20180427 15:52:01.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:01.591" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/snippetAnalyzer</msg>
<status status="PASS" endtime="20180427 15:52:01.591" starttime="20180427 15:52:01.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:01.594" starttime="20180427 15:52:01.593"></status>
</kw>
<msg timestamp="20180427 15:52:01.594" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 --icf...</msg>
<status status="PASS" endtime="20180427 15:52:01.594" starttime="20180427 15:52:01.591"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:01.595" level="INFO">Executing command '/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt &amp;&amp; /opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:52:01.887" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:01.888" level="INFO">${stdout} = [2018-04-27 15:52:02.242][Snippet Extract][info][16950] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410...</msg>
<msg timestamp="20180427 15:52:01.888" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:01.888" starttime="20180427 15:52:01.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.890" level="INFO">[2018-04-27 15:52:02.242][Snippet Extract][info][16950] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:52:02.243][Snippet Extract][info][16950] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:02.245][snippetAnalyzer][info][16950] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:52:02.245][snippetAnalyzer][info][16950] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:52:02.312][snippetAnalyzer][info][16950] [SYS] Start to save gps info, size: 2893 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)
[2018-04-27 15:52:02.337][Snippet Extract][info][16951] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:52:02.337][Snippet Extract][info][16951] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:02.337][snippetAnalyzer][info][16951] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:52:02.337][snippetAnalyzer][info][16951] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:52:02.437][snippetAnalyzer][info][16951] [SYS] Start to save gps info, size: 3035 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:52:01.890" starttime="20180427 15:52:01.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.891" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:01.891" starttime="20180427 15:52:01.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:01.893" level="INFO">${rStdout} = [2018-04-27 15:52:02.242][Snippet Extract][info][16950] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410...</msg>
<status status="PASS" endtime="20180427 15:52:01.893" starttime="20180427 15:52:01.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:01.894" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:01.894" starttime="20180427 15:52:01.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:01.895" level="INFO">[2018-04-27 15:52:02.242][Snippet Extract][info][16950] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:52:02.243][Snippet Extract][info][16950] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:02.245][snippetAnalyzer][info][16950] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:52:02.245][snippetAnalyzer][info][16950] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180309031357_2017-10-25_T_17-00-19.131_GMT.rtv_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.295][snippetAnalyzer][info][16950] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:52:02.312][snippetAnalyzer][info][16950] [SYS] Start to save gps info, size: 2893 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.326][snippetAnalyzer][info][16950] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)
[2018-04-27 15:52:02.337][Snippet Extract][info][16951] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt   (otherFuns.h::410)
[2018-04-27 15:52:02.337][Snippet Extract][info][16951] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:02.337][snippetAnalyzer][info][16951] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:52:02.337][snippetAnalyzer][info][16951] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/172707344da4f06410658bf65a93805d_20180307092626_2017-10-25_T_17-00-19.131_GMT.rtv_incr_slam.out00 (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] ref Gps   : -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] anchor Gps: -83.01269531,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [COM] {
    "KeyFrameMarginThd": "20.0",
    "MapPointMarginThd": "0.0"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.429][snippetAnalyzer][info][16951] [SYS] KeyFrame Margin:20 , MapPoint Margin:0 (SnippetExtractor.cpp:initSlamCfg:529)
[2018-04-27 15:52:02.437][snippetAnalyzer][info][16951] [SYS] Start to save gps info, size: 3035 (SnippetExtractor.cpp:saveGpsInfo:106)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [COM] {
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d",
    "RefTimeStamp": "1508950819242",
    "RefSegmentID": "346955130",
    "Quality": "0",
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:02.451][snippetAnalyzer][info][16951] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:52:01.896" starttime="20180427 15:52:01.895"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:01.896" starttime="20180427 15:52:01.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:01.898" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:01.898" starttime="20180427 15:52:01.897"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"Type"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:01.901" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:01.902" starttime="20180427 15:52:01.900"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:01.903" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:01.903" starttime="20180427 15:52:01.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:01.905" starttime="20180427 15:52:01.905"></status>
</kw>
<msg timestamp="20180427 15:52:01.906" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:01.906" starttime="20180427 15:52:01.904"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:01.907" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.007" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.008" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<msg timestamp="20180427 15:52:02.008" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.008" starttime="20180427 15:52:01.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.009" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.009" starttime="20180427 15:52:02.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.010" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.011" starttime="20180427 15:52:02.010"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.012" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:52:02.012" starttime="20180427 15:52:02.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.013" starttime="20180427 15:52:02.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.014" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.015" starttime="20180427 15:52:02.014"></status>
</kw>
<msg timestamp="20180427 15:52:02.015" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:52:02.015" starttime="20180427 15:52:01.899"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:02.017" level="INFO">1 out of 18 lines matched</msg>
<msg timestamp="20180427 15:52:02.017" level="INFO">${Value} =     "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:52:02.017" starttime="20180427 15:52:02.016"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:02.019" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.019" starttime="20180427 15:52:02.018"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.020" level="INFO">    "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:52:02.021" starttime="20180427 15:52:02.020"></status>
</kw>
<msg timestamp="20180427 15:52:02.021" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.021" starttime="20180427 15:52:01.898"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>slam_loc</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Type&quot;: &quot;slam_loc&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:02.026" level="INFO">${words} = [u'"Type":', u'"slam_loc",']</msg>
<status status="PASS" endtime="20180427 15:52:02.026" starttime="20180427 15:52:02.024"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:02.027" level="INFO">${key} = [u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.028" starttime="20180427 15:52:02.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.029" level="INFO">[u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.029" starttime="20180427 15:52:02.028"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.030" starttime="20180427 15:52:02.029"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.030" starttime="20180427 15:52:02.024"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.031" starttime="20180427 15:52:02.023"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.031" starttime="20180427 15:52:02.022"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.035" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:02.035" starttime="20180427 15:52:02.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.037" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:02.037" starttime="20180427 15:52:02.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.038" starttime="20180427 15:52:02.038"></status>
</kw>
<msg timestamp="20180427 15:52:02.038" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:02.039" starttime="20180427 15:52:02.037"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.039" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.069" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.070" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<msg timestamp="20180427 15:52:02.070" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.070" starttime="20180427 15:52:02.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.071" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.071" starttime="20180427 15:52:02.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.071" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.071" starttime="20180427 15:52:02.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.072" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:52:02.072" starttime="20180427 15:52:02.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.073" starttime="20180427 15:52:02.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.073" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.073" starttime="20180427 15:52:02.073"></status>
</kw>
<msg timestamp="20180427 15:52:02.074" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:52:02.074" starttime="20180427 15:52:02.032"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:02.074" level="INFO">1 out of 18 lines matched</msg>
<msg timestamp="20180427 15:52:02.074" level="INFO">${Value} =     "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:52:02.075" starttime="20180427 15:52:02.074"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:02.075" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.075" starttime="20180427 15:52:02.075"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.076" level="INFO">    "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:52:02.076" starttime="20180427 15:52:02.076"></status>
</kw>
<msg timestamp="20180427 15:52:02.076" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.076" starttime="20180427 15:52:02.031"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:02.078" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:52:02.078" starttime="20180427 15:52:02.078"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:02.079" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.079" starttime="20180427 15:52:02.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.080" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.080" starttime="20180427 15:52:02.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.080" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.080" starttime="20180427 15:52:02.080"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.081" starttime="20180427 15:52:02.078"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.081" starttime="20180427 15:52:02.077"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.081" starttime="20180427 15:52:02.077"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</arg>
<arg>"RefSegmentID"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.083" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:02.083" starttime="20180427 15:52:02.082"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.083" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:02.083" starttime="20180427 15:52:02.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.085" starttime="20180427 15:52:02.084"></status>
</kw>
<msg timestamp="20180427 15:52:02.085" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:02.085" starttime="20180427 15:52:02.084"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.086" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.140" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.141" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<msg timestamp="20180427 15:52:02.141" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.141" starttime="20180427 15:52:02.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.142" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.142" starttime="20180427 15:52:02.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.142" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.142" starttime="20180427 15:52:02.142"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.143" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:52:02.143" starttime="20180427 15:52:02.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.143" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.144" starttime="20180427 15:52:02.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.144" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.144" starttime="20180427 15:52:02.144"></status>
</kw>
<msg timestamp="20180427 15:52:02.145" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955070",
        "346955071",
        "346955114",
        "346955115",
        "346955118",
        "346955119",
   ...</msg>
<status status="PASS" endtime="20180427 15:52:02.145" starttime="20180427 15:52:02.081"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:02.145" level="INFO">1 out of 18 lines matched</msg>
<msg timestamp="20180427 15:52:02.145" level="INFO">${Value} =     "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:52:02.145" starttime="20180427 15:52:02.145"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:02.146" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.146" starttime="20180427 15:52:02.146"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.147" level="INFO">    "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:52:02.147" starttime="20180427 15:52:02.146"></status>
</kw>
<msg timestamp="20180427 15:52:02.147" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.147" starttime="20180427 15:52:02.081"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${346955130}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;RefSegmentID&quot;: &quot;346955130&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:02.148" level="INFO">${words} = [u'"RefSegmentID":', u'"346955130",']</msg>
<status status="PASS" endtime="20180427 15:52:02.148" starttime="20180427 15:52:02.148"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:02.149" level="INFO">${key} = [u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.149" starttime="20180427 15:52:02.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.149" level="INFO">[u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.149" starttime="20180427 15:52:02.149"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.149" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.150" starttime="20180427 15:52:02.149"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.150" starttime="20180427 15:52:02.148"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.150" starttime="20180427 15:52:02.147"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.150" starttime="20180427 15:52:02.147"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.151" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt']</msg>
<status status="PASS" endtime="20180427 15:52:02.151" starttime="20180427 15:52:02.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.153" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:02.153" starttime="20180427 15:52:02.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.155" starttime="20180427 15:52:02.155"></status>
</kw>
<msg timestamp="20180427 15:52:02.156" level="INFO">${cmd} = ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.156" starttime="20180427 15:52:02.154"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.156" level="INFO">Executing command 'ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:52:02.200" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.201" level="INFO">${stdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<msg timestamp="20180427 15:52:02.201" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.201" starttime="20180427 15:52:02.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.202" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.203" starttime="20180427 15:52:02.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.204" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.204" starttime="20180427 15:52:02.203"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.205" level="INFO">${rStdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.206" starttime="20180427 15:52:02.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.208" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.208" starttime="20180427 15:52:02.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.209" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.210" starttime="20180427 15:52:02.209"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.210" starttime="20180427 15:52:02.150"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</arg>
<arg>"Type"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.214" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:02.214" starttime="20180427 15:52:02.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.215" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:02.216" starttime="20180427 15:52:02.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.218" starttime="20180427 15:52:02.217"></status>
</kw>
<msg timestamp="20180427 15:52:02.218" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:02.219" starttime="20180427 15:52:02.216"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.220" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.259" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.260" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:52:02.260" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.260" starttime="20180427 15:52:02.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.261" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.262" starttime="20180427 15:52:02.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.263" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.264" starttime="20180427 15:52:02.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.265" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.265" starttime="20180427 15:52:02.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.266" starttime="20180427 15:52:02.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.267" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.268" starttime="20180427 15:52:02.267"></status>
</kw>
<msg timestamp="20180427 15:52:02.268" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.268" starttime="20180427 15:52:02.212"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:02.270" level="INFO">1 out of 37 lines matched</msg>
<msg timestamp="20180427 15:52:02.270" level="INFO">${Value} =     "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:52:02.270" starttime="20180427 15:52:02.269"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:02.271" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.271" starttime="20180427 15:52:02.270"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.272" level="INFO">    "Type": "slam_loc",</msg>
<status status="PASS" endtime="20180427 15:52:02.273" starttime="20180427 15:52:02.272"></status>
</kw>
<msg timestamp="20180427 15:52:02.273" level="INFO">@{rKeyValueList} = [     "Type": "slam_loc", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.273" starttime="20180427 15:52:02.211"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>slam_loc</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Type&quot;: &quot;slam_loc&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:02.276" level="INFO">${words} = [u'"Type":', u'"slam_loc",']</msg>
<status status="PASS" endtime="20180427 15:52:02.276" starttime="20180427 15:52:02.276"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:02.278" level="INFO">${key} = [u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.278" starttime="20180427 15:52:02.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.279" level="INFO">[u'', u'slam_loc', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.279" starttime="20180427 15:52:02.278"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.280" starttime="20180427 15:52:02.279"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.280" starttime="20180427 15:52:02.275"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.281" starttime="20180427 15:52:02.275"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.281" starttime="20180427 15:52:02.274"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.284" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:02.284" starttime="20180427 15:52:02.283"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.286" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:02.286" starttime="20180427 15:52:02.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.288" starttime="20180427 15:52:02.287"></status>
</kw>
<msg timestamp="20180427 15:52:02.288" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:02.288" starttime="20180427 15:52:02.286"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.289" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.319" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.319" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:52:02.319" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.319" starttime="20180427 15:52:02.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.320" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.320" starttime="20180427 15:52:02.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.321" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.321" starttime="20180427 15:52:02.320"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.321" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.321" starttime="20180427 15:52:02.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.322" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.322" starttime="20180427 15:52:02.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.323" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.323" starttime="20180427 15:52:02.322"></status>
</kw>
<msg timestamp="20180427 15:52:02.323" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.323" starttime="20180427 15:52:02.282"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:02.324" level="INFO">1 out of 37 lines matched</msg>
<msg timestamp="20180427 15:52:02.324" level="INFO">${Value} =     "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:52:02.324" starttime="20180427 15:52:02.323"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:02.325" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.325" starttime="20180427 15:52:02.324"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.325" level="INFO">    "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:52:02.325" starttime="20180427 15:52:02.325"></status>
</kw>
<msg timestamp="20180427 15:52:02.326" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.326" starttime="20180427 15:52:02.281"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:02.327" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:52:02.328" starttime="20180427 15:52:02.327"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:02.329" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.329" starttime="20180427 15:52:02.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.329" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.329" starttime="20180427 15:52:02.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.330" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.330" starttime="20180427 15:52:02.330"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.330" starttime="20180427 15:52:02.327"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.330" starttime="20180427 15:52:02.327"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.330" starttime="20180427 15:52:02.326"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</arg>
<arg>"RefSegmentID"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.332" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:02.332" starttime="20180427 15:52:02.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.333" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:02.333" starttime="20180427 15:52:02.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.334" starttime="20180427 15:52:02.334"></status>
</kw>
<msg timestamp="20180427 15:52:02.335" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:02.335" starttime="20180427 15:52:02.333"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.335" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.390" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.391" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:52:02.391" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.391" starttime="20180427 15:52:02.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.392" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.393" starttime="20180427 15:52:02.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.394" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.394" starttime="20180427 15:52:02.393"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.395" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.395" starttime="20180427 15:52:02.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.396" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.397" starttime="20180427 15:52:02.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.398" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.398" starttime="20180427 15:52:02.397"></status>
</kw>
<msg timestamp="20180427 15:52:02.399" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.399" starttime="20180427 15:52:02.331"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:02.400" level="INFO">1 out of 37 lines matched</msg>
<msg timestamp="20180427 15:52:02.400" level="INFO">${Value} =     "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:52:02.400" starttime="20180427 15:52:02.399"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:02.402" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.402" starttime="20180427 15:52:02.401"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.403" level="INFO">    "RefSegmentID": "346955130",</msg>
<status status="PASS" endtime="20180427 15:52:02.403" starttime="20180427 15:52:02.402"></status>
</kw>
<msg timestamp="20180427 15:52:02.404" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955130", ]</msg>
<status status="PASS" endtime="20180427 15:52:02.404" starttime="20180427 15:52:02.331"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${346955130}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;RefSegmentID&quot;: &quot;346955130&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:02.407" level="INFO">${words} = [u'"RefSegmentID":', u'"346955130",']</msg>
<status status="PASS" endtime="20180427 15:52:02.407" starttime="20180427 15:52:02.406"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:02.408" level="INFO">${key} = [u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.408" starttime="20180427 15:52:02.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.409" level="INFO">[u'', u'346955130', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.410" starttime="20180427 15:52:02.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.411" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.411" starttime="20180427 15:52:02.410"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.411" starttime="20180427 15:52:02.406"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.411" starttime="20180427 15:52:02.405"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.412" starttime="20180427 15:52:02.404"></status>
</kw>
<kw name="Check Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</arg>
<arg>"ReferenceID"</arg>
<arg>slam_loc</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{sReferenceAlign}</arg>
</arguments>
<assign>
<var>${reference align}</var>
</assign>
<msg timestamp="20180427 15:52:02.414" level="INFO">${reference align} = [u'1490160891432271873', u'1490160874252402689', u'1490160685273841665', u'1490160680978874369']</msg>
<status status="PASS" endtime="20180427 15:52:02.414" starttime="20180427 15:52:02.413"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{sReferenceSdor}</arg>
</arguments>
<assign>
<var>${reference sdor}</var>
</assign>
<msg timestamp="20180427 15:52:02.415" level="INFO">${reference sdor} = [u'1490160616554364929', u'1490160668093972481', u'1490160680978874370', u'1490160685273841666', u'1490160874252402690']</msg>
<status status="PASS" endtime="20180427 15:52:02.415" starttime="20180427 15:52:02.414"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${reference get}</var>
</assign>
<msg timestamp="20180427 15:52:02.416" level="INFO">${reference get} = []</msg>
<status status="PASS" endtime="20180427 15:52:02.416" starttime="20180427 15:52:02.416"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.418" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:02.418" starttime="20180427 15:52:02.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.419" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:02.419" starttime="20180427 15:52:02.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.421" starttime="20180427 15:52:02.421"></status>
</kw>
<msg timestamp="20180427 15:52:02.421" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:02.421" starttime="20180427 15:52:02.420"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.422" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.json'.</msg>
<msg timestamp="20180427 15:52:02.448" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.448" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<msg timestamp="20180427 15:52:02.448" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.448" starttime="20180427 15:52:02.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.449" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.449" starttime="20180427 15:52:02.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.450" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.450" starttime="20180427 15:52:02.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.450" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.450" starttime="20180427 15:52:02.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.451" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.451" starttime="20180427 15:52:02.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.452" level="INFO">{
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID": "346955130",
    "RefTimeStamp": "1508950819242",
    "ReferenceList": [
        {
            "DivisionID": "1490160889284788225",
            "ReferenceID": "1490160891432271873",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160872104919041",
            "ReferenceID": "1490160874252402689",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160683126358017",
            "ReferenceID": "1490160685273841665",
            "Version": "1520413863045"
        },
        {
            "DivisionID": "1490160678831390721",
            "ReferenceID": "1490160680978874369",
            "Version": "1520413863045"
        }
    ],
    "Type": "slam_loc",
    "VehicleID": "172707344da4f06410658bf65a93805d"
}</msg>
<status status="PASS" endtime="20180427 15:52:02.452" starttime="20180427 15:52:02.451"></status>
</kw>
<msg timestamp="20180427 15:52:02.452" level="INFO">${std_out} = {
    "PassedSegmentList": [
        "346955066",
        "346955067",
        "346955115",
        "346955118",
        "346955119",
        "346955130"
    ],
    "Quality": "0",
    "RefSegmentID":...</msg>
<status status="PASS" endtime="20180427 15:52:02.452" starttime="20180427 15:52:02.416"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${references}</var>
</assign>
<msg timestamp="20180427 15:52:02.453" level="INFO">4 out of 37 lines matched</msg>
<msg timestamp="20180427 15:52:02.453" level="INFO">${references} =             "ReferenceID": "1490160891432271873",
            "ReferenceID": "1490160874252402689",
            "ReferenceID": "1490160685273841665",
            "ReferenceID": "1490160680978874369",</msg>
<status status="PASS" endtime="20180427 15:52:02.453" starttime="20180427 15:52:02.452"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${references}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${reference}</var>
</assign>
<msg timestamp="20180427 15:52:02.454" level="INFO">${reference} = [u'            "ReferenceID": "1490160891432271873",', u'            "ReferenceID": "1490160874252402689",', u'            "ReferenceID": "1490160685273841665",', u'            "ReferenceID": "1490160...</msg>
<status status="PASS" endtime="20180427 15:52:02.454" starttime="20180427 15:52:02.453"></status>
</kw>
<kw type="for" name="${reference1} IN [ @{reference} ]">
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160891432271873&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:02.455" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160891432271873",']</msg>
<status status="PASS" endtime="20180427 15:52:02.455" starttime="20180427 15:52:02.454"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:02.455" level="INFO">${reference NO} = [u'', u'1490160891432271873', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.456" starttime="20180427 15:52:02.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.456" level="INFO">1490160891432271873</msg>
<status status="PASS" endtime="20180427 15:52:02.456" starttime="20180427 15:52:02.456"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.457" starttime="20180427 15:52:02.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.458" level="INFO">[u'1490160891432271873']</msg>
<status status="PASS" endtime="20180427 15:52:02.458" starttime="20180427 15:52:02.457"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.458" starttime="20180427 15:52:02.454"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160874252402689&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:02.458" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160874252402689",']</msg>
<status status="PASS" endtime="20180427 15:52:02.458" starttime="20180427 15:52:02.458"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:02.459" level="INFO">${reference NO} = [u'', u'1490160874252402689', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.459" starttime="20180427 15:52:02.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.460" level="INFO">1490160874252402689</msg>
<status status="PASS" endtime="20180427 15:52:02.460" starttime="20180427 15:52:02.459"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.461" starttime="20180427 15:52:02.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.461" level="INFO">[u'1490160891432271873', u'1490160874252402689']</msg>
<status status="PASS" endtime="20180427 15:52:02.461" starttime="20180427 15:52:02.461"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.461" starttime="20180427 15:52:02.458"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160685273841665&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:02.462" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160685273841665",']</msg>
<status status="PASS" endtime="20180427 15:52:02.462" starttime="20180427 15:52:02.462"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:02.463" level="INFO">${reference NO} = [u'', u'1490160685273841665', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.463" starttime="20180427 15:52:02.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.464" level="INFO">1490160685273841665</msg>
<status status="PASS" endtime="20180427 15:52:02.464" starttime="20180427 15:52:02.463"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.464" starttime="20180427 15:52:02.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.465" level="INFO">[u'1490160891432271873', u'1490160874252402689', u'1490160685273841665']</msg>
<status status="PASS" endtime="20180427 15:52:02.465" starttime="20180427 15:52:02.465"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.465" starttime="20180427 15:52:02.462"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160680978874369&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:02.466" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160680978874369",']</msg>
<status status="PASS" endtime="20180427 15:52:02.466" starttime="20180427 15:52:02.465"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:02.467" level="INFO">${reference NO} = [u'', u'1490160680978874369', u',']</msg>
<status status="PASS" endtime="20180427 15:52:02.467" starttime="20180427 15:52:02.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.467" level="INFO">1490160680978874369</msg>
<status status="PASS" endtime="20180427 15:52:02.467" starttime="20180427 15:52:02.467"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.468" starttime="20180427 15:52:02.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.469" level="INFO">[u'1490160891432271873', u'1490160874252402689', u'1490160685273841665', u'1490160680978874369']</msg>
<status status="PASS" endtime="20180427 15:52:02.469" starttime="20180427 15:52:02.468"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.469" starttime="20180427 15:52:02.465"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.469" starttime="20180427 15:52:02.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pType}' == 'slam_loc'</arg>
<arg>Lists Should Be Equal</arg>
<arg>${reference align}</arg>
<arg>${reference get}</arg>
<arg>ELSE IF</arg>
<arg>'${ptype}' == 'rg'</arg>
<arg>Lists Should Be Equal</arg>
<arg>${reference sdor}</arg>
<arg>${reference get}</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>${ptype}</arg>
</arguments>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${reference align}</arg>
<arg>${reference get}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.471" starttime="20180427 15:52:02.470"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.471" starttime="20180427 15:52:02.469"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.471" starttime="20180427 15:52:02.412"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:02.472" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt']</msg>
<status status="PASS" endtime="20180427 15:52:02.472" starttime="20180427 15:52:02.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:02.473" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:02.473" starttime="20180427 15:52:02.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.474" starttime="20180427 15:52:02.473"></status>
</kw>
<msg timestamp="20180427 15:52:02.474" level="INFO">${cmd} = ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.474" starttime="20180427 15:52:02.473"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:02.474" level="INFO">Executing command 'ls /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt'.</msg>
<msg timestamp="20180427 15:52:02.494" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:02.494" level="INFO">${stdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</msg>
<msg timestamp="20180427 15:52:02.494" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:02.494" starttime="20180427 15:52:02.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.495" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.495" starttime="20180427 15:52:02.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.495" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:02.495" starttime="20180427 15:52:02.495"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:02.496" level="INFO">${rStdout} = /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.496" starttime="20180427 15:52:02.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:02.496" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:02.496" starttime="20180427 15:52:02.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.496" level="INFO">/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_inr_slam.out00.txt</msg>
<status status="PASS" endtime="20180427 15:52:02.497" starttime="20180427 15:52:02.496"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:02.497" starttime="20180427 15:52:02.471"></status>
</kw>
<doc>| Description | test normal snippetanalyer of slam and align snippet |
| Input | 1.input json |
| | 2.slam and align |
| | 3.reference |
| Execute | call the command line to process snippetanalyer |
| Expect result | 1.output json,with type,quality and segment. |
| | 2.traj |
| | 3.reference |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:52:02.497" critical="yes" starttime="20180427 15:51:46.325"></status>
</test>
<test id="s1-s3-s5-t4" name="Sdor Snippet Analyer">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.499" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:52:02.499" starttime="20180427 15:52:02.498"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:52:02.530" starttime="20180427 15:52:02.499"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:02.531" starttime="20180427 15:52:02.531"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:52:02.532" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:52:04.374" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:51:47 CST 2018

  System load:  3.53               Processes:           303
  Usage of /:   82.9% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:51:47 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:52:04.374" starttime="20180427 15:52:02.532"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:04.375" starttime="20180427 15:52:02.498"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:04.377" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:52:04.377" starttime="20180427 15:52:04.376"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:04.379" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:04.379" starttime="20180427 15:52:04.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:04.382" starttime="20180427 15:52:04.381"></status>
</kw>
<msg timestamp="20180427 15:52:04.382" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:52:04.382" starttime="20180427 15:52:04.380"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:04.383" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:52:04.408" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:04.409" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:04.409" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:04.409" starttime="20180427 15:52:04.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.410" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:04.411" starttime="20180427 15:52:04.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.412" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:04.412" starttime="20180427 15:52:04.411"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:04.413" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:04.413" starttime="20180427 15:52:04.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:04.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:04.416" starttime="20180427 15:52:04.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.417" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:04.417" starttime="20180427 15:52:04.416"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:04.417" starttime="20180427 15:52:04.375"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:04.420" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:52:04.420" starttime="20180427 15:52:04.419"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:04.421" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:04.421" starttime="20180427 15:52:04.420"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:04.424" starttime="20180427 15:52:04.423"></status>
</kw>
<msg timestamp="20180427 15:52:04.424" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:52:04.424" starttime="20180427 15:52:04.422"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:04.425" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:52:04.471" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:04.471" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:04.472" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:04.472" starttime="20180427 15:52:04.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.473" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:04.473" starttime="20180427 15:52:04.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.474" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:04.474" starttime="20180427 15:52:04.474"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:04.476" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:04.476" starttime="20180427 15:52:04.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:04.477" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:04.477" starttime="20180427 15:52:04.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.478" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:04.478" starttime="20180427 15:52:04.478"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:04.479" starttime="20180427 15:52:04.418"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:04.481" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:52:04.482" starttime="20180427 15:52:04.480"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:04.483" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:04.483" starttime="20180427 15:52:04.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:04.486" starttime="20180427 15:52:04.485"></status>
</kw>
<msg timestamp="20180427 15:52:04.486" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:52:04.486" starttime="20180427 15:52:04.484"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:04.488" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:52:04.532" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:04.533" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:04.533" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:04.533" starttime="20180427 15:52:04.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.534" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:04.535" starttime="20180427 15:52:04.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.536" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:04.536" starttime="20180427 15:52:04.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:04.537" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:04.537" starttime="20180427 15:52:04.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:04.539" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:04.539" starttime="20180427 15:52:04.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:04.540" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:04.540" starttime="20180427 15:52:04.539"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:04.541" starttime="20180427 15:52:04.479"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:52:04.541" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:52:04.586" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:52:04.587" starttime="20180427 15:52:04.541"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:04.590" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:52:04.590" starttime="20180427 15:52:04.589"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:04.592" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:52:04.592" starttime="20180427 15:52:04.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:04.595" starttime="20180427 15:52:04.595"></status>
</kw>
<msg timestamp="20180427 15:52:04.595" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:52:04.596" starttime="20180427 15:52:04.592"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:04.597" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:52:15.609" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:15.610" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:52:15.610" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:15.610" starttime="20180427 15:52:04.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:15.611" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 18055
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:52:15.611" starttime="20180427 15:52:15.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:15.612" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:15.612" starttime="20180427 15:52:15.611"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:15.612" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:52:15.612" starttime="20180427 15:52:15.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:15.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:15.613" starttime="20180427 15:52:15.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:15.613" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 18055
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:52:15.613" starttime="20180427 15:52:15.613"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:15.614" starttime="20180427 15:52:04.588"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:15.614" starttime="20180427 15:52:04.587"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:15.615" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:52:15.615" starttime="20180427 15:52:15.614"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:15.616" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:15.616" starttime="20180427 15:52:15.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:15.617" starttime="20180427 15:52:15.617"></status>
</kw>
<msg timestamp="20180427 15:52:15.617" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:52:15.617" starttime="20180427 15:52:15.616"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:15.618" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:52:15.662" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:15.662" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:52:15.662" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:15.662" starttime="20180427 15:52:15.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:15.665" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:52:15.665" starttime="20180427 15:52:15.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:15.666" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:15.666" starttime="20180427 15:52:15.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:15.666" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:52:15.666" starttime="20180427 15:52:15.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:15.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:15.667" starttime="20180427 15:52:15.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:15.667" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:52:15.667" starttime="20180427 15:52:15.667"></status>
</kw>
<msg timestamp="20180427 15:52:15.667" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:52:15.667" starttime="20180427 15:52:15.614"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:15.668" starttime="20180427 15:52:15.668"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:15.668" starttime="20180427 15:52:02.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:15.668" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:15.669" starttime="20180427 15:52:15.668"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp ${sfilefortest}/unzip/sdor/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/SnippetAnalyzer/sdor/dbbak.sql</arg>
<arg>ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:52:15.670" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:52:15.713" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:15.714" starttime="20180427 15:52:15.670"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:52:15.714" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:52:15.759" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:15.760" starttime="20180427 15:52:15.714"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:52:15.761" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:52:15.807" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:15.807" starttime="20180427 15:52:15.761"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:52:15.808" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:52:15.853" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:15.853" starttime="20180427 15:52:15.808"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:52:15.855" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:52:15.900" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:15.900" starttime="20180427 15:52:15.854"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:52:15.901" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:52:15.979" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:15.980" starttime="20180427 15:52:15.901"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:52:15.981" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:52:16.026" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.026" starttime="20180427 15:52:15.980"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:52:16.027" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:52:16.071" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.071" starttime="20180427 15:52:16.027"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:16.072" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:52:16.148" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.148" starttime="20180427 15:52:16.072"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:52:16.149" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:52:16.225" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.226" starttime="20180427 15:52:16.148"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:16.227" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:52:16.272" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.273" starttime="20180427 15:52:16.226"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:52:16.274" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:52:16.319" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.319" starttime="20180427 15:52:16.273"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:52:16.320" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:52:16.366" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.366" starttime="20180427 15:52:16.320"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:16.368" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:52:16.413" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:16.414" starttime="20180427 15:52:16.367"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:16.416" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/unzip/sdor/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip...</msg>
<status status="PASS" endtime="20180427 15:52:16.417" starttime="20180427 15:52:16.415"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:16.418" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:52:16.418" starttime="20180427 15:52:16.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:16.421" starttime="20180427 15:52:16.420"></status>
</kw>
<msg timestamp="20180427 15:52:16.421" level="INFO">${cmd} = cp ~/autotest/filefortest/unzip/sdor/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</msg>
<status status="PASS" endtime="20180427 15:52:16.421" starttime="20180427 15:52:16.419"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:16.423" level="INFO">Executing command 'cp ~/autotest/filefortest/unzip/sdor/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:52:16.469" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:16.469" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:16.470" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:16.470" starttime="20180427 15:52:16.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:16.471" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:16.471" starttime="20180427 15:52:16.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:16.472" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:16.473" starttime="20180427 15:52:16.472"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:16.474" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:16.474" starttime="20180427 15:52:16.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:16.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:16.476" starttime="20180427 15:52:16.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:16.477" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:16.477" starttime="20180427 15:52:16.476"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:16.477" starttime="20180427 15:52:16.414"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:16.478" starttime="20180427 15:52:15.669"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:16.480" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/SnippetAnalyzer/sdor/dbbak.sql'.</msg>
<msg timestamp="20180427 15:52:18.586" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.586" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:18.586" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.586" starttime="20180427 15:52:16.479"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.586" starttime="20180427 15:52:18.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.587" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:18.587" starttime="20180427 15:52:18.587"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.587" starttime="20180427 15:52:18.587"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.587" starttime="20180427 15:52:16.478"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:18.588" level="INFO">${cmd_split} = [u'ls', u'/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json']</msg>
<status status="PASS" endtime="20180427 15:52:18.588" starttime="20180427 15:52:18.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:18.589" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:18.589" starttime="20180427 15:52:18.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.590" starttime="20180427 15:52:18.589"></status>
</kw>
<msg timestamp="20180427 15:52:18.590" level="INFO">${cmd} = ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:18.590" starttime="20180427 15:52:18.589"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:18.591" level="INFO">Executing command 'ls /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json'.</msg>
<msg timestamp="20180427 15:52:18.635" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.636" level="INFO">${stdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<msg timestamp="20180427 15:52:18.636" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.636" starttime="20180427 15:52:18.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.636" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:18.636" starttime="20180427 15:52:18.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.637" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:18.637" starttime="20180427 15:52:18.636"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:18.637" level="INFO">${rStdout} = /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:18.637" starttime="20180427 15:52:18.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:18.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.638" starttime="20180427 15:52:18.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.639" level="INFO">/usr/local/ygomi/roadDB/algo_res/SegmentConfig.json</msg>
<status status="PASS" endtime="20180427 15:52:18.639" starttime="20180427 15:52:18.638"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.639" starttime="20180427 15:52:18.588"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.639" starttime="20180427 15:52:15.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:18.640" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:18.640" starttime="20180427 15:52:18.639"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.txt</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:18.641" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/snippetAnalyzer', u'--isnippet', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.ou...</msg>
<status status="PASS" endtime="20180427 15:52:18.641" starttime="20180427 15:52:18.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:18.641" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/snippetAnalyzer</msg>
<status status="PASS" endtime="20180427 15:52:18.641" starttime="20180427 15:52:18.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.642" starttime="20180427 15:52:18.642"></status>
</kw>
<msg timestamp="20180427 15:52:18.642" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.ou...</msg>
<status status="PASS" endtime="20180427 15:52:18.642" starttime="20180427 15:52:18.641"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:18.643" level="INFO">Executing command '/opt/ygomi/roadDB/bin/snippetAnalyzer --isnippet /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out --icfg /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json --of /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json --ogps /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.txt'.</msg>
<msg timestamp="20180427 15:52:18.687" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.687" level="INFO">${stdout} = [2018-04-27 15:52:19.271][Snippet Extract][info][19305] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e...</msg>
<msg timestamp="20180427 15:52:18.687" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.687" starttime="20180427 15:52:18.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.688" level="INFO">[2018-04-27 15:52:19.271][Snippet Extract][info][19305] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.txt   (otherFuns.h::410)
[2018-04-27 15:52:19.271][Snippet Extract][info][19305] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:19.271][snippetAnalyzer][info][19305] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:52:19.271][snippetAnalyzer][info][19305] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] ref Gps   : -83.13354492,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] anchor Gps: -83.13354492,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [COM] {
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068",
    "RefTimeStamp": "1508937825607",
    "RefSegmentID": "346955051",
    "Quality": "0",
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:52:18.688" starttime="20180427 15:52:18.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.688" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:18.688" starttime="20180427 15:52:18.688"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:18.689" level="INFO">${rStdout} = [2018-04-27 15:52:19.271][Snippet Extract][info][19305] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e...</msg>
<status status="PASS" endtime="20180427 15:52:18.689" starttime="20180427 15:52:18.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:18.689" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.689" starttime="20180427 15:52:18.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.690" level="INFO">[2018-04-27 15:52:19.271][Snippet Extract][info][19305] [COM] module command: /opt/ygomi/roadDB/bin/snippetAnalyzer  --isnippet  /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out  --icfg  /usr/local/ygomi/roadDB/algo_res/SegmentConfig.json  --of  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json  --ogps  /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.txt   (otherFuns.h::410)
[2018-04-27 15:52:19.271][Snippet Extract][info][19305] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:19.271][snippetAnalyzer][info][19305] [SYS] Log level: 0 (snippetExtract.cpp:extractSnippet:48)
[2018-04-27 15:52:19.271][snippetAnalyzer][info][19305] [SYS] File: /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/c2fd7fb9d18463c15e10a4505a938068_20180307102605_2017-10-25_T_13-23-45.599_GMT.rtv_rt.out00_sdor.out (snippetExtract.cpp:extractSnippet:49)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] ref Gps   : -83.13354492,42.6159668,0 (SnippetExtractor.cpp:extractHeader:365)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] anchor Gps: -83.13354492,42.6159668,0 (SnippetExtractor.cpp:extractHeader:366)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] offset2Anchor:0,0,0 (SnippetExtractor.cpp:extractHeader:367)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] save affected segments (snippetExtract.cpp:extractSnippet:74)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [COM] {
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068",
    "RefTimeStamp": "1508937825607",
    "RefSegmentID": "346955051",
    "Quality": "0",
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:19.276][snippetAnalyzer][info][19305] [SYS] snippet extract end (snippetExtract.cpp:extractSnippet:82)</msg>
<status status="PASS" endtime="20180427 15:52:18.690" starttime="20180427 15:52:18.689"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.690" starttime="20180427 15:52:18.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:18.690" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:18.690" starttime="20180427 15:52:18.690"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</arg>
<arg>"Type"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:18.692" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:18.692" starttime="20180427 15:52:18.691"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:18.692" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:18.692" starttime="20180427 15:52:18.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.693" starttime="20180427 15:52:18.693"></status>
</kw>
<msg timestamp="20180427 15:52:18.693" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:18.693" starttime="20180427 15:52:18.693"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:18.694" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json'.</msg>
<msg timestamp="20180427 15:52:18.749" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.749" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<msg timestamp="20180427 15:52:18.750" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.750" starttime="20180427 15:52:18.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.753" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.753" starttime="20180427 15:52:18.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.754" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:18.755" starttime="20180427 15:52:18.754"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:18.756" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.756" starttime="20180427 15:52:18.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:18.757" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.757" starttime="20180427 15:52:18.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.758" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.759" starttime="20180427 15:52:18.758"></status>
</kw>
<msg timestamp="20180427 15:52:18.759" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.760" starttime="20180427 15:52:18.691"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:18.761" level="INFO">1 out of 41 lines matched</msg>
<msg timestamp="20180427 15:52:18.762" level="INFO">${Value} =     "Type": "rg",</msg>
<status status="PASS" endtime="20180427 15:52:18.762" starttime="20180427 15:52:18.760"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:18.763" level="INFO">@{rKeyValueList} = [     "Type": "rg", ]</msg>
<status status="PASS" endtime="20180427 15:52:18.763" starttime="20180427 15:52:18.762"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.764" level="INFO">    "Type": "rg",</msg>
<status status="PASS" endtime="20180427 15:52:18.765" starttime="20180427 15:52:18.764"></status>
</kw>
<msg timestamp="20180427 15:52:18.765" level="INFO">@{rKeyValueList} = [     "Type": "rg", ]</msg>
<status status="PASS" endtime="20180427 15:52:18.765" starttime="20180427 15:52:18.691"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>rg</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Type&quot;: &quot;rg&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:18.790" level="INFO">${words} = [u'"Type":', u'"rg",']</msg>
<status status="PASS" endtime="20180427 15:52:18.790" starttime="20180427 15:52:18.790"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:18.791" level="INFO">${key} = [u'', u'rg', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.791" starttime="20180427 15:52:18.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.791" level="INFO">[u'', u'rg', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.792" starttime="20180427 15:52:18.791"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.792" starttime="20180427 15:52:18.792"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.792" starttime="20180427 15:52:18.789"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.792" starttime="20180427 15:52:18.767"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.793" starttime="20180427 15:52:18.766"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</arg>
<arg>"Quality"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:18.794" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:18.794" starttime="20180427 15:52:18.794"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:18.795" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:18.795" starttime="20180427 15:52:18.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.798" starttime="20180427 15:52:18.797"></status>
</kw>
<msg timestamp="20180427 15:52:18.798" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:18.798" starttime="20180427 15:52:18.795"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:18.799" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json'.</msg>
<msg timestamp="20180427 15:52:18.822" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.823" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<msg timestamp="20180427 15:52:18.823" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.823" starttime="20180427 15:52:18.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.823" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.824" starttime="20180427 15:52:18.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.824" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:18.824" starttime="20180427 15:52:18.824"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:18.825" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.825" starttime="20180427 15:52:18.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:18.825" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.825" starttime="20180427 15:52:18.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.826" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.826" starttime="20180427 15:52:18.825"></status>
</kw>
<msg timestamp="20180427 15:52:18.826" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.826" starttime="20180427 15:52:18.793"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:18.827" level="INFO">1 out of 41 lines matched</msg>
<msg timestamp="20180427 15:52:18.827" level="INFO">${Value} =     "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:52:18.827" starttime="20180427 15:52:18.826"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:18.827" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:52:18.827" starttime="20180427 15:52:18.827"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.828" level="INFO">    "Quality": "0",</msg>
<status status="PASS" endtime="20180427 15:52:18.828" starttime="20180427 15:52:18.828"></status>
</kw>
<msg timestamp="20180427 15:52:18.828" level="INFO">@{rKeyValueList} = [     "Quality": "0", ]</msg>
<status status="PASS" endtime="20180427 15:52:18.828" starttime="20180427 15:52:18.793"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;Quality&quot;: &quot;0&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:18.830" level="INFO">${words} = [u'"Quality":', u'"0",']</msg>
<status status="PASS" endtime="20180427 15:52:18.830" starttime="20180427 15:52:18.829"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:18.830" level="INFO">${key} = [u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.830" starttime="20180427 15:52:18.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.831" level="INFO">[u'', u'0', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.831" starttime="20180427 15:52:18.830"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.831" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.832" starttime="20180427 15:52:18.831"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.832" starttime="20180427 15:52:18.829"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.832" starttime="20180427 15:52:18.829"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.832" starttime="20180427 15:52:18.828"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</arg>
<arg>"RefSegmentID"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:18.835" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:18.835" starttime="20180427 15:52:18.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:18.836" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:18.836" starttime="20180427 15:52:18.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.837" starttime="20180427 15:52:18.837"></status>
</kw>
<msg timestamp="20180427 15:52:18.837" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:18.837" starttime="20180427 15:52:18.836"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:18.838" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json'.</msg>
<msg timestamp="20180427 15:52:18.892" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.893" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<msg timestamp="20180427 15:52:18.893" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.893" starttime="20180427 15:52:18.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.894" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.894" starttime="20180427 15:52:18.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.895" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:18.896" starttime="20180427 15:52:18.895"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:18.897" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.897" starttime="20180427 15:52:18.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:18.898" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.898" starttime="20180427 15:52:18.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.900" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.900" starttime="20180427 15:52:18.899"></status>
</kw>
<msg timestamp="20180427 15:52:18.901" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.901" starttime="20180427 15:52:18.832"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:18.902" level="INFO">1 out of 41 lines matched</msg>
<msg timestamp="20180427 15:52:18.902" level="INFO">${Value} =     "RefSegmentID": "346955051",</msg>
<status status="PASS" endtime="20180427 15:52:18.902" starttime="20180427 15:52:18.901"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:18.904" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955051", ]</msg>
<status status="PASS" endtime="20180427 15:52:18.904" starttime="20180427 15:52:18.903"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.905" level="INFO">    "RefSegmentID": "346955051",</msg>
<status status="PASS" endtime="20180427 15:52:18.905" starttime="20180427 15:52:18.904"></status>
</kw>
<msg timestamp="20180427 15:52:18.906" level="INFO">@{rKeyValueList} = [     "RefSegmentID": "346955051", ]</msg>
<status status="PASS" endtime="20180427 15:52:18.906" starttime="20180427 15:52:18.832"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${346955051}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =     &quot;RefSegmentID&quot;: &quot;346955051&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:18.909" level="INFO">${words} = [u'"RefSegmentID":', u'"346955051",']</msg>
<status status="PASS" endtime="20180427 15:52:18.910" starttime="20180427 15:52:18.909"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:18.911" level="INFO">${key} = [u'', u'346955051', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.911" starttime="20180427 15:52:18.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.912" level="INFO">[u'', u'346955051', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.912" starttime="20180427 15:52:18.911"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.913" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.914" starttime="20180427 15:52:18.913"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.914" starttime="20180427 15:52:18.908"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.914" starttime="20180427 15:52:18.908"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.914" starttime="20180427 15:52:18.907"></status>
</kw>
<kw name="Check Reference" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</arg>
<arg>"ReferenceID"</arg>
<arg>rg</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{sReferenceAlign}</arg>
</arguments>
<assign>
<var>${reference align}</var>
</assign>
<msg timestamp="20180427 15:52:18.916" level="INFO">${reference align} = [u'1490160891432271873', u'1490160874252402689', u'1490160685273841665', u'1490160680978874369']</msg>
<status status="PASS" endtime="20180427 15:52:18.917" starttime="20180427 15:52:18.916"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>@{sReferenceSdor}</arg>
</arguments>
<assign>
<var>${reference sdor}</var>
</assign>
<msg timestamp="20180427 15:52:18.918" level="INFO">${reference sdor} = [u'1490160616554364929', u'1490160668093972481', u'1490160680978874370', u'1490160685273841666', u'1490160874252402690']</msg>
<status status="PASS" endtime="20180427 15:52:18.918" starttime="20180427 15:52:18.917"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${reference get}</var>
</assign>
<msg timestamp="20180427 15:52:18.919" level="INFO">${reference get} = []</msg>
<status status="PASS" endtime="20180427 15:52:18.919" starttime="20180427 15:52:18.918"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${std_out}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:18.922" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json']</msg>
<status status="PASS" endtime="20180427 15:52:18.922" starttime="20180427 15:52:18.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:18.923" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:18.923" starttime="20180427 15:52:18.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.925" starttime="20180427 15:52:18.925"></status>
</kw>
<msg timestamp="20180427 15:52:18.925" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json</msg>
<status status="PASS" endtime="20180427 15:52:18.925" starttime="20180427 15:52:18.924"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:18.926" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/b8a71eb8cca0ef9ffe4710c45a45ac32_20180115022237_2017-08-04_T_16-19-26.337_GMT.rtv_sdor.out00.json'.</msg>
<msg timestamp="20180427 15:52:18.952" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:18.952" level="INFO">${stdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<msg timestamp="20180427 15:52:18.952" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:18.952" starttime="20180427 15:52:18.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.953" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.953" starttime="20180427 15:52:18.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.953" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:18.953" starttime="20180427 15:52:18.953"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:18.954" level="INFO">${rStdout} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.954" starttime="20180427 15:52:18.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:18.955" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:18.955" starttime="20180427 15:52:18.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.955" level="INFO">{
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "RefTimeStamp": "1508937825607",
    "ReferenceList": [
        {
            "DivisionID": "1490160614406881281",
            "ReferenceID": "1490160616554364929",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160665946488833",
            "ReferenceID": "1490160668093972481",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160678831390722",
            "ReferenceID": "1490160680978874370",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160683126358018",
            "ReferenceID": "1490160685273841666",
            "Version": "1520417353820"
        },
        {
            "DivisionID": "1490160872104919042",
            "ReferenceID": "1490160874252402690",
            "Version": "1520417353820"
        }
    ],
    "Type": "rg",
    "VehicleID": "c2fd7fb9d18463c15e10a4505a938068"
}</msg>
<status status="PASS" endtime="20180427 15:52:18.956" starttime="20180427 15:52:18.955"></status>
</kw>
<msg timestamp="20180427 15:52:18.956" level="INFO">${std_out} = {
    "PassedSegmentList": [
        "346955055",
        "346955067",
        "346955070",
        "346955071",
        "346955115"
    ],
    "Quality": "0",
    "RefSegmentID": "346955051",
    "Re...</msg>
<status status="PASS" endtime="20180427 15:52:18.956" starttime="20180427 15:52:18.919"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${std_out}</arg>
<arg>${pKey}</arg>
</arguments>
<assign>
<var>${references}</var>
</assign>
<msg timestamp="20180427 15:52:18.957" level="INFO">5 out of 41 lines matched</msg>
<msg timestamp="20180427 15:52:18.957" level="INFO">${references} =             "ReferenceID": "1490160616554364929",
            "ReferenceID": "1490160668093972481",
            "ReferenceID": "1490160680978874370",
            "ReferenceID": "1490160685273841666",
...</msg>
<status status="PASS" endtime="20180427 15:52:18.957" starttime="20180427 15:52:18.956"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${references}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>${reference}</var>
</assign>
<msg timestamp="20180427 15:52:18.957" level="INFO">${reference} = [u'            "ReferenceID": "1490160616554364929",', u'            "ReferenceID": "1490160668093972481",', u'            "ReferenceID": "1490160680978874370",', u'            "ReferenceID": "1490160...</msg>
<status status="PASS" endtime="20180427 15:52:18.958" starttime="20180427 15:52:18.957"></status>
</kw>
<kw type="for" name="${reference1} IN [ @{reference} ]">
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160616554364929&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:18.959" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160616554364929",']</msg>
<status status="PASS" endtime="20180427 15:52:18.959" starttime="20180427 15:52:18.958"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:18.959" level="INFO">${reference NO} = [u'', u'1490160616554364929', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.959" starttime="20180427 15:52:18.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.960" level="INFO">1490160616554364929</msg>
<status status="PASS" endtime="20180427 15:52:18.960" starttime="20180427 15:52:18.960"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.961" starttime="20180427 15:52:18.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.961" level="INFO">[u'1490160616554364929']</msg>
<status status="PASS" endtime="20180427 15:52:18.961" starttime="20180427 15:52:18.961"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.962" starttime="20180427 15:52:18.958"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160668093972481&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:18.962" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160668093972481",']</msg>
<status status="PASS" endtime="20180427 15:52:18.962" starttime="20180427 15:52:18.962"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:18.963" level="INFO">${reference NO} = [u'', u'1490160668093972481', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.963" starttime="20180427 15:52:18.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.964" level="INFO">1490160668093972481</msg>
<status status="PASS" endtime="20180427 15:52:18.964" starttime="20180427 15:52:18.963"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.965" starttime="20180427 15:52:18.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.965" level="INFO">[u'1490160616554364929', u'1490160668093972481']</msg>
<status status="PASS" endtime="20180427 15:52:18.965" starttime="20180427 15:52:18.965"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.965" starttime="20180427 15:52:18.962"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160680978874370&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:18.966" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160680978874370",']</msg>
<status status="PASS" endtime="20180427 15:52:18.966" starttime="20180427 15:52:18.966"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:18.967" level="INFO">${reference NO} = [u'', u'1490160680978874370', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.967" starttime="20180427 15:52:18.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.967" level="INFO">1490160680978874370</msg>
<status status="PASS" endtime="20180427 15:52:18.967" starttime="20180427 15:52:18.967"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.968" starttime="20180427 15:52:18.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.969" level="INFO">[u'1490160616554364929', u'1490160668093972481', u'1490160680978874370']</msg>
<status status="PASS" endtime="20180427 15:52:18.969" starttime="20180427 15:52:18.968"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.969" starttime="20180427 15:52:18.965"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160685273841666&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:18.970" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160685273841666",']</msg>
<status status="PASS" endtime="20180427 15:52:18.970" starttime="20180427 15:52:18.969"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:18.970" level="INFO">${reference NO} = [u'', u'1490160685273841666', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.970" starttime="20180427 15:52:18.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.971" level="INFO">1490160685273841666</msg>
<status status="PASS" endtime="20180427 15:52:18.971" starttime="20180427 15:52:18.971"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.972" starttime="20180427 15:52:18.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.973" level="INFO">[u'1490160616554364929', u'1490160668093972481', u'1490160680978874370', u'1490160685273841666']</msg>
<status status="PASS" endtime="20180427 15:52:18.973" starttime="20180427 15:52:18.972"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.973" starttime="20180427 15:52:18.969"></status>
</kw>
<kw type="foritem" name="${reference1} =             &quot;ReferenceID&quot;: &quot;1490160874252402690&quot;,">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference1}</arg>
</arguments>
<assign>
<var>${reference2}</var>
</assign>
<msg timestamp="20180427 15:52:18.973" level="INFO">${reference2} = [u'"ReferenceID":', u'"1490160874252402690",']</msg>
<status status="PASS" endtime="20180427 15:52:18.973" starttime="20180427 15:52:18.973"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${reference2[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${reference NO}</var>
</assign>
<msg timestamp="20180427 15:52:18.974" level="INFO">${reference NO} = [u'', u'1490160874252402690', u',']</msg>
<status status="PASS" endtime="20180427 15:52:18.974" starttime="20180427 15:52:18.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference NO[1]}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.974" level="INFO">1490160874252402690</msg>
<status status="PASS" endtime="20180427 15:52:18.975" starttime="20180427 15:52:18.974"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${reference get}</arg>
<arg>${reference NO[1]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.975" starttime="20180427 15:52:18.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${reference get}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.976" level="INFO">[u'1490160616554364929', u'1490160668093972481', u'1490160680978874370', u'1490160685273841666', u'1490160874252402690']</msg>
<status status="PASS" endtime="20180427 15:52:18.976" starttime="20180427 15:52:18.975"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.976" starttime="20180427 15:52:18.973"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.976" starttime="20180427 15:52:18.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${pType}' == 'slam_loc'</arg>
<arg>Lists Should Be Equal</arg>
<arg>${reference align}</arg>
<arg>${reference get}</arg>
<arg>ELSE IF</arg>
<arg>'${ptype}' == 'rg'</arg>
<arg>Lists Should Be Equal</arg>
<arg>${reference sdor}</arg>
<arg>${reference get}</arg>
<arg>ELSE</arg>
<arg>Log</arg>
<arg>${ptype}</arg>
</arguments>
<kw name="Lists Should Be Equal" library="Collections">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>${reference sdor}</arg>
<arg>${reference get}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.977" starttime="20180427 15:52:18.977"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.977" starttime="20180427 15:52:18.976"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:18.977" starttime="20180427 15:52:18.915"></status>
</kw>
<doc>| Description | test normal snippetanalyer of sdor snippet |
| Input | 1.input json |
| | 2.sdor |
| | 3.reference |
| Execute | call the command line to process snippetanalyer |
| Expect result | 1.output json,with type,quality and segment. |
| | 2.traj |
| | 3.reference |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:52:18.977" critical="yes" starttime="20180427 15:52:02.497"></status>
</test>
<doc>| Description | test normal snippetanalyer of slam/align/sdor snippet |
| Input | 1.input json |
| | 2.slam |
| Execute | call the command line to process snippetanalyer |
| Expect result | 1.output json,with type,quality and segment. |
| | 2.traj |</doc>
<status status="PASS" endtime="20180427 15:52:18.978" starttime="20180427 15:51:15.568"></status>
</suite>
<suite source="/home/user/wanxianlong/autotest/Intergration_Auto_Test/System/vehicleDBGenerator.txt" id="s1-s3-s6" name="vehicleDBGenerator">
<test id="s1-s3-s6-t1" name="Slam VehicleDBGenerator">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.987" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:52:18.987" starttime="20180427 15:52:18.986"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:52:18.990" starttime="20180427 15:52:18.987"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:18.990" starttime="20180427 15:52:18.990"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:52:18.991" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:52:20.495" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:52:03 CST 2018

  System load:  3.19               Processes:           303
  Usage of /:   83.0% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:52:03 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:52:20.496" starttime="20180427 15:52:18.990"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:20.496" starttime="20180427 15:52:18.986"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:20.499" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:52:20.499" starttime="20180427 15:52:20.498"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:20.500" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:20.500" starttime="20180427 15:52:20.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:20.501" starttime="20180427 15:52:20.501"></status>
</kw>
<msg timestamp="20180427 15:52:20.501" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:52:20.501" starttime="20180427 15:52:20.501"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:20.502" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:52:20.515" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:20.515" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:20.515" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:20.516" starttime="20180427 15:52:20.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.516" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:20.516" starttime="20180427 15:52:20.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.517" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:20.517" starttime="20180427 15:52:20.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:20.517" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:20.518" starttime="20180427 15:52:20.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:20.518" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:20.518" starttime="20180427 15:52:20.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.519" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:20.519" starttime="20180427 15:52:20.518"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:20.519" starttime="20180427 15:52:20.497"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:20.520" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:52:20.520" starttime="20180427 15:52:20.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:20.521" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:20.521" starttime="20180427 15:52:20.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:20.522" starttime="20180427 15:52:20.522"></status>
</kw>
<msg timestamp="20180427 15:52:20.522" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:52:20.523" starttime="20180427 15:52:20.521"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:20.523" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:52:20.568" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:20.568" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:20.568" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:20.569" starttime="20180427 15:52:20.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.570" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:20.570" starttime="20180427 15:52:20.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.571" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:20.571" starttime="20180427 15:52:20.570"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:20.573" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:20.573" starttime="20180427 15:52:20.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:20.574" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:20.574" starttime="20180427 15:52:20.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.575" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:20.575" starttime="20180427 15:52:20.574"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:20.576" starttime="20180427 15:52:20.519"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:20.579" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:52:20.579" starttime="20180427 15:52:20.578"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:20.581" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:20.581" starttime="20180427 15:52:20.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:20.583" starttime="20180427 15:52:20.583"></status>
</kw>
<msg timestamp="20180427 15:52:20.584" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:52:20.584" starttime="20180427 15:52:20.581"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:20.585" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:52:20.630" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:20.631" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:20.631" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:20.631" starttime="20180427 15:52:20.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.632" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:20.633" starttime="20180427 15:52:20.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.634" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:20.634" starttime="20180427 15:52:20.633"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:20.635" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:20.635" starttime="20180427 15:52:20.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:20.636" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:20.637" starttime="20180427 15:52:20.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:20.638" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:20.638" starttime="20180427 15:52:20.637"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:20.638" starttime="20180427 15:52:20.576"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:52:20.639" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:52:20.684" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:52:20.685" starttime="20180427 15:52:20.639"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:20.688" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:52:20.688" starttime="20180427 15:52:20.687"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:20.690" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:52:20.690" starttime="20180427 15:52:20.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:20.692" starttime="20180427 15:52:20.692"></status>
</kw>
<msg timestamp="20180427 15:52:20.692" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:52:20.693" starttime="20180427 15:52:20.690"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:20.694" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:52:31.425" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:31.425" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:52:31.426" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:31.426" starttime="20180427 15:52:20.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:31.427" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 20356
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:52:31.427" starttime="20180427 15:52:31.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:31.428" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:31.428" starttime="20180427 15:52:31.428"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:31.430" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:52:31.430" starttime="20180427 15:52:31.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:31.431" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:31.431" starttime="20180427 15:52:31.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:31.432" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 20356
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:52:31.432" starttime="20180427 15:52:31.431"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:31.433" starttime="20180427 15:52:20.686"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:31.433" starttime="20180427 15:52:20.685"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:31.435" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:52:31.435" starttime="20180427 15:52:31.434"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:31.437" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:31.437" starttime="20180427 15:52:31.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:31.439" starttime="20180427 15:52:31.439"></status>
</kw>
<msg timestamp="20180427 15:52:31.440" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:52:31.440" starttime="20180427 15:52:31.437"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:31.441" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:52:31.486" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:31.487" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:52:31.487" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:31.487" starttime="20180427 15:52:31.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:31.488" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:52:31.489" starttime="20180427 15:52:31.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:31.490" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:31.490" starttime="20180427 15:52:31.489"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:31.491" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:52:31.491" starttime="20180427 15:52:31.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:31.492" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:31.492" starttime="20180427 15:52:31.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:31.493" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:52:31.494" starttime="20180427 15:52:31.493"></status>
</kw>
<msg timestamp="20180427 15:52:31.494" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:52:31.494" starttime="20180427 15:52:31.433"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:31.496" starttime="20180427 15:52:31.495"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:31.496" starttime="20180427 15:52:18.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:31.497" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:31.497" starttime="20180427 15:52:31.497"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/VehicleDBGenerate/slam/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/VehicleDBGenerate/slam/dbbak.sql</arg>
<arg>cp ${sfilefortest}/VehicleDBGenerate/slam/vehicleDBGen-1490154494078484481-1524733383459.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:52:31.501" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:52:31.546" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.546" starttime="20180427 15:52:31.500"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:52:31.548" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:52:31.592" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.592" starttime="20180427 15:52:31.547"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:52:31.593" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:52:31.668" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.669" starttime="20180427 15:52:31.592"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:52:31.670" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:52:31.747" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.748" starttime="20180427 15:52:31.669"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:52:31.749" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:52:31.793" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.794" starttime="20180427 15:52:31.748"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:52:31.795" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:52:31.840" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.840" starttime="20180427 15:52:31.794"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:52:31.841" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:52:31.886" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.887" starttime="20180427 15:52:31.841"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:52:31.888" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:52:31.933" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.934" starttime="20180427 15:52:31.887"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:31.935" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:52:31.980" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:31.980" starttime="20180427 15:52:31.934"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:52:31.981" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:52:32.059" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:32.059" starttime="20180427 15:52:31.981"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:32.060" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:52:32.105" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:32.106" starttime="20180427 15:52:32.060"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:52:32.107" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:52:32.151" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:32.152" starttime="20180427 15:52:32.106"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:52:32.153" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:52:32.198" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:32.198" starttime="20180427 15:52:32.152"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:32.200" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:52:32.244" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:32.245" starttime="20180427 15:52:32.199"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:32.247" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/VehicleDBGenerate/slam/WorkflowManager/*', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/']</msg>
<status status="PASS" endtime="20180427 15:52:32.247" starttime="20180427 15:52:32.246"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:32.249" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:52:32.249" starttime="20180427 15:52:32.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:32.251" starttime="20180427 15:52:32.251"></status>
</kw>
<msg timestamp="20180427 15:52:32.251" level="INFO">${cmd} = cp -r ~/autotest/filefortest/VehicleDBGenerate/slam/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</msg>
<status status="PASS" endtime="20180427 15:52:32.252" starttime="20180427 15:52:32.249"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:32.253" level="INFO">Executing command 'cp -r ~/autotest/filefortest/VehicleDBGenerate/slam/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/'.</msg>
<msg timestamp="20180427 15:52:32.318" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:32.319" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:32.319" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:32.319" starttime="20180427 15:52:32.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:32.320" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:32.321" starttime="20180427 15:52:32.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:32.322" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:32.323" starttime="20180427 15:52:32.321"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:32.324" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:32.324" starttime="20180427 15:52:32.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:32.325" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:32.325" starttime="20180427 15:52:32.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:32.326" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:32.327" starttime="20180427 15:52:32.326"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:32.327" starttime="20180427 15:52:32.245"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:32.327" starttime="20180427 15:52:31.499"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:32.330" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/VehicleDBGenerate/slam/dbbak.sql'.</msg>
<msg timestamp="20180427 15:52:33.908" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:33.909" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:33.909" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:33.909" starttime="20180427 15:52:32.329"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:33.910" starttime="20180427 15:52:33.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:33.911" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:33.911" starttime="20180427 15:52:33.911"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:33.913" starttime="20180427 15:52:33.912"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:33.913" starttime="20180427 15:52:32.328"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:33.915" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/VehicleDBGenerate/slam/vehicleDBGen-1490154494078484481-1524733383459.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/']</msg>
<status status="PASS" endtime="20180427 15:52:33.916" starttime="20180427 15:52:33.914"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:33.917" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:52:33.917" starttime="20180427 15:52:33.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:33.920" starttime="20180427 15:52:33.919"></status>
</kw>
<msg timestamp="20180427 15:52:33.920" level="INFO">${cmd} = cp ~/autotest/filefortest/VehicleDBGenerate/slam/vehicleDBGen-1490154494078484481-1524733383459.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/</msg>
<status status="PASS" endtime="20180427 15:52:33.920" starttime="20180427 15:52:33.917"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:33.921" level="INFO">Executing command 'cp ~/autotest/filefortest/VehicleDBGenerate/slam/vehicleDBGen-1490154494078484481-1524733383459.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/'.</msg>
<msg timestamp="20180427 15:52:33.966" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:33.967" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:33.967" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:33.968" starttime="20180427 15:52:33.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:33.969" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:33.969" starttime="20180427 15:52:33.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:33.970" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:33.970" starttime="20180427 15:52:33.970"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:33.972" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:33.972" starttime="20180427 15:52:33.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:33.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:33.973" starttime="20180427 15:52:33.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:33.974" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:33.974" starttime="20180427 15:52:33.974"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:33.975" starttime="20180427 15:52:33.913"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:33.975" starttime="20180427 15:52:31.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:33.976" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:33.976" starttime="20180427 15:52:33.976"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/vehicleDBGenerator \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524733383459.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug \ --ojson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json \ --pcfg \ /opt/ygomi/roadDB/etc/config \ --manual \ --ol ${sOutput}/VehicleDBGenerator</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:33.979" level="INFO">${cmd_split} = [u'/opt/ygomi/roadDB/bin/vehicleDBGenerator', u'', u'--ijson', u'', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524733383459.json...</msg>
<status status="PASS" endtime="20180427 15:52:33.979" starttime="20180427 15:52:33.978"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:33.981" level="INFO">${cmd_type} = /opt/ygomi/roadDB/bin/vehicleDBGenerator</msg>
<status status="PASS" endtime="20180427 15:52:33.981" starttime="20180427 15:52:33.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:33.983" starttime="20180427 15:52:33.983"></status>
</kw>
<msg timestamp="20180427 15:52:33.984" level="INFO">${cmd} = /opt/ygomi/roadDB/bin/vehicleDBGenerator  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524733383459.json  --d  /opt/ygomi/r...</msg>
<status status="PASS" endtime="20180427 15:52:33.984" starttime="20180427 15:52:33.981"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:33.985" level="INFO">Executing command '/opt/ygomi/roadDB/bin/vehicleDBGenerator  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524733383459.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol ~/autotest/output/VehicleDBGenerator'.</msg>
<msg timestamp="20180427 15:52:34.515" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:34.516" level="INFO">${stdout} = [2018-04-27 15:52:34.622][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: main (vehicleDBGenerator.cpp::43)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] module command: /op...</msg>
<msg timestamp="20180427 15:52:34.516" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:34.516" starttime="20180427 15:52:33.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.517" level="INFO">[2018-04-27 15:52:34.622][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: main (vehicleDBGenerator.cpp::43)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] module command: /opt/ygomi/roadDB/bin/vehicleDBGenerator  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524733383459.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/VehicleDBGenerator   (otherFuns.h::410)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "DBStamp": "1524733383459",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "1"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.endPoint: 00-1C-42-4C-25-5C (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:119)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.dbStamp: 1524733383459 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:120)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.transactionID: 1 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:121)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.accessDomain: http://127.0.0.1:8080 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:122)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: rdbVehicleDBGenerator (rdbVehicleDBGenerator.cpp::82)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "DBStamp": "1524733383459",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "1"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SYS] Log level: 0 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:96)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SYS] VehicleDB Version: 4 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:97)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug/server_2018-04-27_15-52-34_21915 (DebugInfoPath.cpp::58)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] refSeg id is: 346953630 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:113)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] ==========init backendDTAdapter layer========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:115)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] affected geoDivision id num: 2 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:122)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] affected geoDivision ids are: (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:123)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:125)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:128)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:128)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] ##########END########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:130)
[2018-04-27 15:52:34.630][vehicleDBGenerator][debug][21915] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:52:34.631][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.640][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.640][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.646][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.646][vehicleDBGenerator][info][21915] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:52:34.646][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ==========Algorithm read backendDb from mysql========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:155)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:52:34.657][vehicleDBGenerator][warning][21915] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:52:34.657][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.675][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.697][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.716][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.730][vehicleDBGenerator][debug][21915] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:52:34.730][vehicleDBGenerator][debug][21915] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:52:34.731][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.731][vehicleDBGenerator][debug][21915] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:34.731][vehicleDBGenerator][debug][21915] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SAM] Division:1490154494078484481read overlap:85 (ServerDbHelper.cpp::1186)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.761][vehicleDBGenerator][info][21915] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:52:34.761][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.773][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.794][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.812][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.824][vehicleDBGenerator][debug][21915] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:52:34.824][vehicleDBGenerator][debug][21915] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:52:34.825][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.825][vehicleDBGenerator][debug][21915] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:52:34.853][vehicleDBGenerator][debug][21915] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:52:34.854][vehicleDBGenerator][debug][21915] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:52:34.854][vehicleDBGenerator][debug][21915] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] restore overlap:85 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:52:34.858][vehicleDBGenerator][debug][21915] [SAM] SecRefID4481-8130 have 30 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:34.858][vehicleDBGenerator][debug][21915] [SAM] SecRefID4481-8131 have 29 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:34.858][vehicleDBGenerator][debug][21915] [SAM] SecRefID4481-8129 have 23 anchorKF pairs TO SecRefID4482::8132 with conf: 12.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] str_id: fromCacheDB  end: 57154858  start: 57154657  total:201(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SYS] ==========finish reading backendDb========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:172)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SYS] ==========Algorithm extract reference========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:175)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] ### Module:extractFlow Beginning ### (AlgoServerExtractorImp.cpp::117)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SAM] ### Module:extractFlow Ending ### (AlgoServerExtractorImp.cpp::155)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] ==========finish extracting reference========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:190)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] ==========start to write vehicle DB========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:193)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] ==========init VehicleDataTransfer========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:196)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.899][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.899][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] ==========save vehicleDb Data========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:214)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] manual mode(true) : beginTransaction ! (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:220)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.914][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.914][vehicleDBGenerator][debug][21915] [SYS] TransactionID: 1 (VehicleDARestful.cpp:beginTransaction:449)
[2018-04-27 15:52:34.914][vehicleDBGenerator][info][21915] [SAM] ### Module:toVehicleDB Beginning ### (DatabaseManager.cpp::206)
[2018-04-27 15:52:34.914][vehicleDBGenerator][debug][21915] [SAM] write sec:1490154494078484481right_nebor:1490154494078484482 type:0 (VehicleDbHelper.cpp::102)
[2018-04-27 15:52:34.924][vehicleDBGenerator][debug][21915] [SAM] write sec:1490154494078484482left_nebor:1490154494078484481 type:0 (VehicleDbHelper.cpp::86)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] Vehicle Data size is: 2 (VehicleDataTransfer.cpp:addVehicleSections:86)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] list input vehicle sections: (VehicleDataTransfer.cpp:addVehicleSections:87)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (VehicleDataTransfer.cpp:addVehicleSections:88)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] 	vehicleSection id: 1490154494078484481 (VehicleDataTransfer.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] 	nodeA id: 1490154495152226305 (VehicleDataTransfer.cpp:addVehicleSections:92)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] 	nodeB id: 1490154495152226306 (VehicleDataTransfer.cpp:addVehicleSections:93)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	VehicleReference id: (VehicleDataTransfer.cpp:addVehicleSections:94)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 		1490154496225968129 (VehicleDataTransfer.cpp:addVehicleSections:97)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	vehicleSection id: 1490154494078484482 (VehicleDataTransfer.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	nodeA id: 1490154495152226306 (VehicleDataTransfer.cpp:addVehicleSections:92)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	nodeB id: 1490154495152226307 (VehicleDataTransfer.cpp:addVehicleSections:93)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	VehicleReference id: (VehicleDataTransfer.cpp:addVehicleSections:94)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 		1490154496225968132 (VehicleDataTransfer.cpp:addVehicleSections:97)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] ##########END########## (VehicleDataTransfer.cpp:addVehicleSections:100)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: addVehicleSections (VehicleDARestful.cpp::60)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleReference] write one reference every time (VehicleDARestful.cpp:addVehicleSections:76)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] divisionID : 1490154494078484481  referenceID : 1490154496225968129 (VehicleDARestful.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleReference] mapReference size: 1 (VehicleDARestful.cpp:addReference:240)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] ADD Reference path: /data?transaction_id=1 (VehicleDARestful.cpp:addReference:241)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.942][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.949][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.968][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS]   nodeA id : 1490154495152226305  nodeB id : 1490154495152226306 (VehicleDARestful.cpp:addVehicleSections:107)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] reference size : 1 (VehicleDARestful.cpp:addVehicleSections:109)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] divisionID : 1490154494078484482  referenceID : 1490154496225968132 (VehicleDARestful.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleReference] mapReference size: 1 (VehicleDARestful.cpp:addReference:240)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] ADD Reference path: /data?transaction_id=1 (VehicleDARestful.cpp:addReference:241)
[2018-04-27 15:52:34.968][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.977][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.982][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.992][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS]   nodeA id : 1490154495152226306  nodeB id : 1490154495152226307 (VehicleDARestful.cpp:addVehicleSections:107)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] reference size : 1 (VehicleDARestful.cpp:addVehicleSections:109)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleSection] write all divisions (VehicleDARestful.cpp:addVehicleSections:112)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleSection] mapDivision size: 1 (VehicleDARestful.cpp:addDivision:188)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] ADD division path : /data?transaction_id=1 (VehicleDARestful.cpp:addDivision:189)
[2018-04-27 15:52:34.993][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:35.014][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:35.014][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleNode] write all nodes (VehicleDARestful.cpp:addVehicleSections:129)
[2018-04-27 15:52:35.014][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleNode] node size: 3 (VehicleDARestful.cpp:addNode:391)
[2018-04-27 15:52:35.014][vehicleDBGenerator][debug][21915] [SYS] ADD Node path : /data?transaction_id=1 (VehicleDARestful.cpp:addNode:392)
[2018-04-27 15:52:35.014][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:35.032][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:35.032][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: addVehicleSections (VehicleDARestful.cpp::60)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SAM] ### Module:toVehicleDB Ending ### (DatabaseManager.cpp::246)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SAM] str_id: toVehicleDB  end: 57155033  start: 57154914  total:119(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SYS] ==========finish saving vehicleDb========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:244)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SYS] manual mode(true) : endTransaction ! (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:248)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ==========save geoDivisions into jsons========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:265)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] adding new geoDivisions into jsons, division size is: 2 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:276)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ids:  (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:278)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:279)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:282)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:282)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ##########END########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:284)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] result json file name is: /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:291)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] 	 content is: (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:292)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [COM] {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] end to write vehicle DB (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:297)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] end vehicleDBGenerator run. (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:298)
[2018-04-27 15:52:35.097][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: rdbVehicleDBGenerator (rdbVehicleDBGenerator.cpp::82)
[2018-04-27 15:52:35.097][vehicleDBGenerator][info][21915] [SYS] vehicleDBGeneratorMain return ok, value:0, fwRet: 0 (vehicleDBGenerator.cpp:main:66)
[2018-04-27 15:52:35.097][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: main (vehicleDBGenerator.cpp::43)</msg>
<status status="PASS" endtime="20180427 15:52:34.518" starttime="20180427 15:52:34.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.519" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:34.519" starttime="20180427 15:52:34.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:34.520" level="INFO">${rStdout} = [2018-04-27 15:52:34.622][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: main (vehicleDBGenerator.cpp::43)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] module command: /op...</msg>
<status status="PASS" endtime="20180427 15:52:34.521" starttime="20180427 15:52:34.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:34.521" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:34.522" starttime="20180427 15:52:34.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.523" level="INFO">[2018-04-27 15:52:34.622][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: main (vehicleDBGenerator.cpp::43)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] module command: /opt/ygomi/roadDB/bin/vehicleDBGenerator  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524733383459.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/VehicleDBGenerator   (otherFuns.h::410)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:34.623][vehicleDBGenerator][info][21915] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "DBStamp": "1524733383459",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "1"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.endPoint: 00-1C-42-4C-25-5C (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:119)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.dbStamp: 1524733383459 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:120)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.transactionID: 1 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:121)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] input.accessDomain: http://127.0.0.1:8080 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:122)
[2018-04-27 15:52:34.623][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: rdbVehicleDBGenerator (rdbVehicleDBGenerator.cpp::82)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "DBStamp": "1524733383459",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "1"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SYS] Log level: 0 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:96)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SYS] VehicleDB Version: 4 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:97)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:52:34.625][vehicleDBGenerator][info][21915] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug/server_2018-04-27_15-52-34_21915 (DebugInfoPath.cpp::58)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] refSeg id is: 346953630 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:113)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] ==========init backendDTAdapter layer========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:115)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] affected geoDivision id num: 2 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:122)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] affected geoDivision ids are: (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:123)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:125)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:128)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:128)
[2018-04-27 15:52:34.626][vehicleDBGenerator][info][21915] [SYS] ##########END########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:130)
[2018-04-27 15:52:34.630][vehicleDBGenerator][debug][21915] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:52:34.631][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.640][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.640][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.646][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.646][vehicleDBGenerator][info][21915] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:52:34.646][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ==========Algorithm read backendDb from mysql========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:155)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:52:34.657][vehicleDBGenerator][warning][21915] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:52:34.657][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:52:34.657][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.675][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:52:34.676][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.697][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.716][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.730][vehicleDBGenerator][debug][21915] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:52:34.730][vehicleDBGenerator][info][21915] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:52:34.730][vehicleDBGenerator][debug][21915] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:52:34.731][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.731][vehicleDBGenerator][debug][21915] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:34.731][vehicleDBGenerator][debug][21915] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:52:34.731][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SAM] Division:1490154494078484481read overlap:85 (ServerDbHelper.cpp::1186)
[2018-04-27 15:52:34.761][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.761][vehicleDBGenerator][info][21915] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:52:34.761][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.773][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:52:34.774][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.794][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.812][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.824][vehicleDBGenerator][debug][21915] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:52:34.824][vehicleDBGenerator][debug][21915] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:52:34.824][vehicleDBGenerator][info][21915] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:52:34.825][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:34.825][vehicleDBGenerator][debug][21915] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:52:34.825][vehicleDBGenerator][info][21915] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:52:34.853][vehicleDBGenerator][debug][21915] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:52:34.854][vehicleDBGenerator][debug][21915] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:52:34.854][vehicleDBGenerator][debug][21915] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:52:34.854][vehicleDBGenerator][info][21915] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] restore overlap:85 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:52:34.858][vehicleDBGenerator][debug][21915] [SAM] SecRefID4481-8130 have 30 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:34.858][vehicleDBGenerator][debug][21915] [SAM] SecRefID4481-8131 have 29 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:34.858][vehicleDBGenerator][debug][21915] [SAM] SecRefID4481-8129 have 23 anchorKF pairs TO SecRefID4482::8132 with conf: 12.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] str_id: fromCacheDB  end: 57154858  start: 57154657  total:201(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SYS] ==========finish reading backendDb========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:172)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SYS] ==========Algorithm extract reference========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:175)
[2018-04-27 15:52:34.858][vehicleDBGenerator][info][21915] [SAM] ### Module:extractFlow Beginning ### (AlgoServerExtractorImp.cpp::117)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SAM] ### Module:extractFlow Ending ### (AlgoServerExtractorImp.cpp::155)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] ==========finish extracting reference========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:190)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] ==========start to write vehicle DB========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:193)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] ==========init VehicleDataTransfer========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:196)
[2018-04-27 15:52:34.892][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.899][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.899][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] ==========save vehicleDb Data========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:214)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] manual mode(true) : beginTransaction ! (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:220)
[2018-04-27 15:52:34.908][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.914][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.914][vehicleDBGenerator][debug][21915] [SYS] TransactionID: 1 (VehicleDARestful.cpp:beginTransaction:449)
[2018-04-27 15:52:34.914][vehicleDBGenerator][info][21915] [SAM] ### Module:toVehicleDB Beginning ### (DatabaseManager.cpp::206)
[2018-04-27 15:52:34.914][vehicleDBGenerator][debug][21915] [SAM] write sec:1490154494078484481right_nebor:1490154494078484482 type:0 (VehicleDbHelper.cpp::102)
[2018-04-27 15:52:34.924][vehicleDBGenerator][debug][21915] [SAM] write sec:1490154494078484482left_nebor:1490154494078484481 type:0 (VehicleDbHelper.cpp::86)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] Vehicle Data size is: 2 (VehicleDataTransfer.cpp:addVehicleSections:86)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] list input vehicle sections: (VehicleDataTransfer.cpp:addVehicleSections:87)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (VehicleDataTransfer.cpp:addVehicleSections:88)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] 	vehicleSection id: 1490154494078484481 (VehicleDataTransfer.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] 	nodeA id: 1490154495152226305 (VehicleDataTransfer.cpp:addVehicleSections:92)
[2018-04-27 15:52:34.931][vehicleDBGenerator][info][21915] [SYS] 	nodeB id: 1490154495152226306 (VehicleDataTransfer.cpp:addVehicleSections:93)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	VehicleReference id: (VehicleDataTransfer.cpp:addVehicleSections:94)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 		1490154496225968129 (VehicleDataTransfer.cpp:addVehicleSections:97)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	vehicleSection id: 1490154494078484482 (VehicleDataTransfer.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	nodeA id: 1490154495152226306 (VehicleDataTransfer.cpp:addVehicleSections:92)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	nodeB id: 1490154495152226307 (VehicleDataTransfer.cpp:addVehicleSections:93)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 	VehicleReference id: (VehicleDataTransfer.cpp:addVehicleSections:94)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] 		1490154496225968132 (VehicleDataTransfer.cpp:addVehicleSections:97)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] ##########END########## (VehicleDataTransfer.cpp:addVehicleSections:100)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] ENTER FUNCTION: addVehicleSections (VehicleDARestful.cpp::60)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleReference] write one reference every time (VehicleDARestful.cpp:addVehicleSections:76)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] divisionID : 1490154494078484481  referenceID : 1490154496225968129 (VehicleDARestful.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleReference] mapReference size: 1 (VehicleDARestful.cpp:addReference:240)
[2018-04-27 15:52:34.932][vehicleDBGenerator][debug][21915] [SYS] ADD Reference path: /data?transaction_id=1 (VehicleDARestful.cpp:addReference:241)
[2018-04-27 15:52:34.932][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.942][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.949][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.968][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS]   nodeA id : 1490154495152226305  nodeB id : 1490154495152226306 (VehicleDARestful.cpp:addVehicleSections:107)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] reference size : 1 (VehicleDARestful.cpp:addVehicleSections:109)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] divisionID : 1490154494078484482  referenceID : 1490154496225968132 (VehicleDARestful.cpp:addVehicleSections:91)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleReference] mapReference size: 1 (VehicleDARestful.cpp:addReference:240)
[2018-04-27 15:52:34.968][vehicleDBGenerator][debug][21915] [SYS] ADD Reference path: /data?transaction_id=1 (VehicleDARestful.cpp:addReference:241)
[2018-04-27 15:52:34.968][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.977][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.982][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:34.992][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS]   nodeA id : 1490154495152226306  nodeB id : 1490154495152226307 (VehicleDARestful.cpp:addVehicleSections:107)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] reference size : 1 (VehicleDARestful.cpp:addVehicleSections:109)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleSection] write all divisions (VehicleDARestful.cpp:addVehicleSections:112)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleSection] mapDivision size: 1 (VehicleDARestful.cpp:addDivision:188)
[2018-04-27 15:52:34.993][vehicleDBGenerator][debug][21915] [SYS] ADD division path : /data?transaction_id=1 (VehicleDARestful.cpp:addDivision:189)
[2018-04-27 15:52:34.993][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:35.014][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:35.014][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleNode] write all nodes (VehicleDARestful.cpp:addVehicleSections:129)
[2018-04-27 15:52:35.014][vehicleDBGenerator][debug][21915] [SYS] [Write VehicleNode] node size: 3 (VehicleDARestful.cpp:addNode:391)
[2018-04-27 15:52:35.014][vehicleDBGenerator][debug][21915] [SYS] ADD Node path : /data?transaction_id=1 (VehicleDARestful.cpp:addNode:392)
[2018-04-27 15:52:35.014][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:35.032][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:35.032][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: addVehicleSections (VehicleDARestful.cpp::60)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SAM] ### Module:toVehicleDB Ending ### (DatabaseManager.cpp::246)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SAM] str_id: toVehicleDB  end: 57155033  start: 57154914  total:119(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SYS] ==========finish saving vehicleDb========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:244)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SYS] manual mode(true) : endTransaction ! (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:248)
[2018-04-27 15:52:35.033][vehicleDBGenerator][info][21915] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ==========save geoDivisions into jsons========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:265)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] adding new geoDivisions into jsons, division size is: 2 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:276)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ids:  (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:278)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ##########BEGIN########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:279)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484481 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:282)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] 	 geoDivision 1490154494078484482 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:282)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] ##########END########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:284)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] result json file name is: /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:291)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] 	 content is: (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:292)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [COM] {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] end to write vehicle DB (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:297)
[2018-04-27 15:52:35.089][vehicleDBGenerator][info][21915] [SYS] end vehicleDBGenerator run. (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:298)
[2018-04-27 15:52:35.097][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: rdbVehicleDBGenerator (rdbVehicleDBGenerator.cpp::82)
[2018-04-27 15:52:35.097][vehicleDBGenerator][info][21915] [SYS] vehicleDBGeneratorMain return ok, value:0, fwRet: 0 (vehicleDBGenerator.cpp:main:66)
[2018-04-27 15:52:35.097][vehicleDBGenerator][debug][21915] [SYS] LEAVE FUNCTION: main (vehicleDBGenerator.cpp::43)</msg>
<status status="PASS" endtime="20180427 15:52:34.524" starttime="20180427 15:52:34.522"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.525" starttime="20180427 15:52:33.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:34.526" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:34.526" starttime="20180427 15:52:34.525"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json</arg>
<arg>"Status"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:34.530" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json']</msg>
<status status="PASS" endtime="20180427 15:52:34.530" starttime="20180427 15:52:34.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:34.532" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:34.532" starttime="20180427 15:52:34.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:34.534" starttime="20180427 15:52:34.533"></status>
</kw>
<msg timestamp="20180427 15:52:34.534" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json</msg>
<status status="PASS" endtime="20180427 15:52:34.535" starttime="20180427 15:52:34.532"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:34.536" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520578465515.json'.</msg>
<msg timestamp="20180427 15:52:34.574" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:34.575" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status...</msg>
<msg timestamp="20180427 15:52:34.575" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:34.575" starttime="20180427 15:52:34.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.576" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:52:34.576" starttime="20180427 15:52:34.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.577" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:34.577" starttime="20180427 15:52:34.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:34.578" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status...</msg>
<status status="PASS" endtime="20180427 15:52:34.578" starttime="20180427 15:52:34.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:34.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:34.578" starttime="20180427 15:52:34.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.579" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:52:34.579" starttime="20180427 15:52:34.579"></status>
</kw>
<msg timestamp="20180427 15:52:34.579" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status...</msg>
<status status="PASS" endtime="20180427 15:52:34.580" starttime="20180427 15:52:34.528"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:34.580" level="INFO">2 out of 12 lines matched</msg>
<msg timestamp="20180427 15:52:34.581" level="INFO">${Value} =             "Status": "0"
            "Status": "0"</msg>
<status status="PASS" endtime="20180427 15:52:34.581" starttime="20180427 15:52:34.580"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:34.583" level="INFO">@{rKeyValueList} = [             "Status": "0" |             "Status": "0" ]</msg>
<status status="PASS" endtime="20180427 15:52:34.583" starttime="20180427 15:52:34.582"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.584" level="INFO">            "Status": "0"</msg>
<msg timestamp="20180427 15:52:34.584" level="INFO">            "Status": "0"</msg>
<status status="PASS" endtime="20180427 15:52:34.584" starttime="20180427 15:52:34.583"></status>
</kw>
<msg timestamp="20180427 15:52:34.584" level="INFO">@{rKeyValueList} = [             "Status": "0" |             "Status": "0" ]</msg>
<status status="PASS" endtime="20180427 15:52:34.584" starttime="20180427 15:52:34.526"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =             &quot;Status&quot;: &quot;0&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:34.586" level="INFO">${words} = [u'"Status":', u'"0"']</msg>
<status status="PASS" endtime="20180427 15:52:34.586" starttime="20180427 15:52:34.585"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:34.587" level="INFO">${key} = [u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:34.587" starttime="20180427 15:52:34.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.587" level="INFO">[u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:34.587" starttime="20180427 15:52:34.587"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.588" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:34.588" starttime="20180427 15:52:34.587"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.588" starttime="20180427 15:52:34.585"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Status&quot;: &quot;0&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:34.588" level="INFO">${words} = [u'"Status":', u'"0"']</msg>
<status status="PASS" endtime="20180427 15:52:34.588" starttime="20180427 15:52:34.588"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:34.589" level="INFO">${key} = [u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:34.589" starttime="20180427 15:52:34.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.589" level="INFO">[u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:34.589" starttime="20180427 15:52:34.589"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.590" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:34.590" starttime="20180427 15:52:34.590"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.590" starttime="20180427 15:52:34.588"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.590" starttime="20180427 15:52:34.585"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.590" starttime="20180427 15:52:34.585"></status>
</kw>
<kw name="Query ForegroundvehicleDB Keyfield" library="utilities">
<arguments>
<arg>select count(*) from divisions;</arg>
<arg>2</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>vehicle_foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:52:34.591" level="INFO">Connecting using : pymysql.connect(db=vehicle_foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:52:34.594" starttime="20180427 15:52:34.591"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20180427 15:52:34.595" level="INFO">Executing : Query  |  select count(*) from divisions; </msg>
<msg timestamp="20180427 15:52:34.597" level="INFO">@{result} = [ (2,) ]</msg>
<status status="PASS" endtime="20180427 15:52:34.597" starttime="20180427 15:52:34.595"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{result}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.597" level="INFO">(2,)</msg>
<status status="PASS" endtime="20180427 15:52:34.598" starttime="20180427 15:52:34.597"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:52:34.598" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:52:34.599" starttime="20180427 15:52:34.598"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{Formatresult}</var>
</assign>
<msg timestamp="20180427 15:52:34.601" level="INFO">@{Formatresult} = [ ]</msg>
<status status="PASS" endtime="20180427 15:52:34.601" starttime="20180427 15:52:34.600"></status>
</kw>
<kw type="for" name="${results} IN [ @{result} ]">
<kw type="foritem" name="${results} = (2,)">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Formatresult}</arg>
<arg>${Results[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:34.603" starttime="20180427 15:52:34.602"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.603" starttime="20180427 15:52:34.602"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.603" starttime="20180427 15:52:34.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Results[0]}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.603" level="INFO">2</msg>
<status status="PASS" endtime="20180427 15:52:34.604" starttime="20180427 15:52:34.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Formatresult}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.604" level="INFO">[2]</msg>
<status status="PASS" endtime="20180427 15:52:34.604" starttime="20180427 15:52:34.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pKey}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.605" level="INFO">2</msg>
<status status="PASS" endtime="20180427 15:52:34.605" starttime="20180427 15:52:34.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pKey}</arg>
<arg>${Formatresult[0]}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.606" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:34.606" starttime="20180427 15:52:34.605"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:34.606" starttime="20180427 15:52:34.590"></status>
</kw>
<doc>| Description | test normal veicleDBGenerater of  slam |
| Input | 1.input json |
| | 2.DB |
| Execute | call the command line to process veicleDBGenerater |
| Expect result | 1.output json,with status. |
| | 2.vehicle_foregrounddb.divisions with data |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:52:34.607" critical="yes" starttime="20180427 15:52:18.985"></status>
</test>
<test id="s1-s3-s6-t2" name="Align VehicleDBGenerator">
<kw type="setup" name="Check Environment" library="utilities">
<kw name="Login Server" library="utilities">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.610" level="INFO">10.69.143.202</msg>
<status status="PASS" endtime="20180427 15:52:34.610" starttime="20180427 15:52:34.610"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180427 15:52:34.613" starttime="20180427 15:52:34.610"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${pLogin_IP}</arg>
<arg>None</arg>
<arg>${pLogin_port}</arg>
<arg>5 hours</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:34.614" starttime="20180427 15:52:34.613"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${pLogin_user}</arg>
<arg>${pLogin_password}</arg>
</arguments>
<msg timestamp="20180427 15:52:34.614" level="INFO">Logging into '10.69.143.202:22' as 'roaddb'.</msg>
<msg timestamp="20180427 15:52:35.817" level="INFO">Read output: Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/

  System information as of Fri Apr 27 15:52:19 CST 2018

  System load:  2.94               Processes:           301
  Usage of /:   82.8% of 40.95GB   Users logged in:     1
  Memory usage: 58%                IP address for eth0: 10.69.143.202
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

New release '16.04.4 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

*** System restart required ***
Last login: Fri Apr 27 15:52:20 2018 from 10.69.140.127
roaddb@intergration-system-cloud:~$</msg>
<status status="PASS" endtime="20180427 15:52:35.818" starttime="20180427 15:52:34.614"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:35.818" starttime="20180427 15:52:34.609"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:35.820" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:52:35.820" starttime="20180427 15:52:35.819"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:35.820" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:35.820" starttime="20180427 15:52:35.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:35.821" starttime="20180427 15:52:35.821"></status>
</kw>
<msg timestamp="20180427 15:52:35.822" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:52:35.822" starttime="20180427 15:52:35.821"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:35.822" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:52:35.836" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:35.836" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:35.837" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:35.837" starttime="20180427 15:52:35.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.838" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:35.838" starttime="20180427 15:52:35.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.839" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:35.839" starttime="20180427 15:52:35.838"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:35.840" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:35.841" starttime="20180427 15:52:35.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:35.842" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:35.842" starttime="20180427 15:52:35.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.843" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:35.843" starttime="20180427 15:52:35.842"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:35.844" starttime="20180427 15:52:35.819"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/file_storage/log/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:35.846" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/file_storage/log/*']</msg>
<status status="PASS" endtime="20180427 15:52:35.846" starttime="20180427 15:52:35.845"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:35.848" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:35.848" starttime="20180427 15:52:35.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:35.852" starttime="20180427 15:52:35.850"></status>
</kw>
<msg timestamp="20180427 15:52:35.853" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*</msg>
<status status="PASS" endtime="20180427 15:52:35.853" starttime="20180427 15:52:35.848"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:35.854" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/file_storage/log/*'.</msg>
<msg timestamp="20180427 15:52:35.898" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:35.899" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:35.899" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:35.899" starttime="20180427 15:52:35.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.899" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:35.899" starttime="20180427 15:52:35.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.900" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:35.900" starttime="20180427 15:52:35.900"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:35.900" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:35.901" starttime="20180427 15:52:35.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:35.901" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:35.901" starttime="20180427 15:52:35.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.901" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:35.902" starttime="20180427 15:52:35.901"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:35.902" starttime="20180427 15:52:35.844"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:35.903" level="INFO">${cmd_split} = [u'rm', u'-rf', u'/opt/ygomi/roadDB/work_path/WorkflowManager/*']</msg>
<status status="PASS" endtime="20180427 15:52:35.903" starttime="20180427 15:52:35.902"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:35.903" level="INFO">${cmd_type} = rm</msg>
<status status="PASS" endtime="20180427 15:52:35.903" starttime="20180427 15:52:35.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>sudo ${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:35.905" starttime="20180427 15:52:35.904"></status>
</kw>
<msg timestamp="20180427 15:52:35.905" level="INFO">${cmd} = sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*</msg>
<status status="PASS" endtime="20180427 15:52:35.905" starttime="20180427 15:52:35.904"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:35.905" level="INFO">Executing command 'sudo rm -rf /opt/ygomi/roadDB/work_path/WorkflowManager/*'.</msg>
<msg timestamp="20180427 15:52:35.950" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:35.951" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:35.951" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:35.951" starttime="20180427 15:52:35.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.952" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:35.953" starttime="20180427 15:52:35.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.954" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:35.954" starttime="20180427 15:52:35.953"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:35.955" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:35.955" starttime="20180427 15:52:35.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:35.957" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:35.957" starttime="20180427 15:52:35.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:35.958" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:35.958" starttime="20180427 15:52:35.957"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:35.959" starttime="20180427 15:52:35.902"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir /opt/ygomi/roadDB/work_path/WorkflowManager</arg>
</arguments>
<msg timestamp="20180427 15:52:35.960" level="INFO">Executing command 'mkdir /opt/ygomi/roadDB/work_path/WorkflowManager'.</msg>
<msg timestamp="20180427 15:52:36.005" level="INFO">Command exited with return code 1.</msg>
<status status="PASS" endtime="20180427 15:52:36.006" starttime="20180427 15:52:35.960"></status>
</kw>
<kw name="Clean Database" library="utilities">
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:36.009" level="INFO">${cmd_split} = [u'cd', u'/opt/ygomi/roadDB/tool/db/clear_db_data', u'&amp;&amp;', u'./allDB_clear.sh']</msg>
<status status="PASS" endtime="20180427 15:52:36.009" starttime="20180427 15:52:36.008"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:36.010" level="INFO">${cmd_type} = cd</msg>
<status status="PASS" endtime="20180427 15:52:36.011" starttime="20180427 15:52:36.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:36.013" starttime="20180427 15:52:36.012"></status>
</kw>
<msg timestamp="20180427 15:52:36.013" level="INFO">${cmd} = cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh</msg>
<status status="PASS" endtime="20180427 15:52:36.013" starttime="20180427 15:52:36.011"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:36.015" level="INFO">Executing command 'cd /opt/ygomi/roadDB/tool/db/clear_db_data &amp;&amp; ./allDB_clear.sh'.</msg>
<msg timestamp="20180427 15:52:46.713" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:46.714" level="INFO">${stdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<msg timestamp="20180427 15:52:46.714" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:46.714" starttime="20180427 15:52:36.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:46.715" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 23038
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:52:46.716" starttime="20180427 15:52:46.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:46.717" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:46.717" starttime="20180427 15:52:46.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:46.718" level="INFO">${rStdout} = .....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql...</msg>
<status status="PASS" endtime="20180427 15:52:46.718" starttime="20180427 15:52:46.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:46.720" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:46.720" starttime="20180427 15:52:46.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:46.721" level="INFO">.....
 * MySQL Community Server 5.7.17 is stopped
nginx stop/waiting
 * Stopping app server(s) uwsgi
   ...done.
myBridge stopped
begin stop
fgExtractor stopped
syncdata stopped
 * begin stop
 * mysql_jdbc not started!
..
 * MySQL Community Server 5.7.17 is started
begin delete backendDB data...
delete backendDB data success!
delete foregrounddb_trans data success!
end delete backendDB data.
begin delete landmarkdb data...
delete landmarkdb data success!
delete landmarkdb_trans data success!
end delete landmarkdb data.
begin delete logicdb data...
delete logicdb data success!
end delete logicdb data.
===Initializing coredb's Data
&gt;&gt;&gt; Initializing coredb's Data success!
begin delete vehicle_foregrounddb data...
delete vehicle_foregrounddb data success!
delete vehicle_foregrounddb_trans data success!
end delete vehicle_foregrounddb data.
begin delete historyDB data...
delete historyDB data success!
end delete historyDB data.
===Initializing history's Data
&gt;&gt;&gt; Initializing history's Data success!
begin delete devicesDB data...
delete devicesDB data success!
end delete devicesDB data.
begin delete operationDB data...
delete operationDB data success!
end delete operationDB data.
=== Initializing operation's Data
&gt;&gt;&gt; Initializing operation's Data success!
begin delete masterdb data...
delete masterdb data success!
end delete masterdb data.
===Initializing masterdb's Data
&gt;&gt;&gt; Initializing masterdb's Data success!
begin delete foreground data...
delete foreground data success!
end delete foreground data.
begin delete debugDB data...
delete debugDB data success!
end delete debugDB data.
 * A MySQL Server is already started
nginx start/running, process 23038
 * Starting app server(s) uwsgi
   ...done.
myBridge started
fgExtractor started
sync data started
 * mysql_jdbc started</msg>
<status status="PASS" endtime="20180427 15:52:46.721" starttime="20180427 15:52:46.720"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:46.722" starttime="20180427 15:52:36.007"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:46.722" starttime="20180427 15:52:36.006"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>ls /opt/ygomi/roadDB/etc/config/ | wc -l</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:46.724" level="INFO">${cmd_split} = [u'ls', u'/opt/ygomi/roadDB/etc/config/', u'|', u'wc', u'-l']</msg>
<status status="PASS" endtime="20180427 15:52:46.724" starttime="20180427 15:52:46.723"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:46.726" level="INFO">${cmd_type} = ls</msg>
<status status="PASS" endtime="20180427 15:52:46.726" starttime="20180427 15:52:46.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:46.728" starttime="20180427 15:52:46.728"></status>
</kw>
<msg timestamp="20180427 15:52:46.729" level="INFO">${cmd} = ls /opt/ygomi/roadDB/etc/config/ | wc -l</msg>
<status status="PASS" endtime="20180427 15:52:46.729" starttime="20180427 15:52:46.726"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:46.730" level="INFO">Executing command 'ls /opt/ygomi/roadDB/etc/config/ | wc -l'.</msg>
<msg timestamp="20180427 15:52:46.775" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:46.776" level="INFO">${stdout} = 24</msg>
<msg timestamp="20180427 15:52:46.776" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:46.776" starttime="20180427 15:52:46.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:46.777" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:52:46.778" starttime="20180427 15:52:46.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:46.779" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:46.779" starttime="20180427 15:52:46.778"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:46.780" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:52:46.780" starttime="20180427 15:52:46.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:46.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:46.782" starttime="20180427 15:52:46.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:46.783" level="INFO">24</msg>
<status status="PASS" endtime="20180427 15:52:46.783" starttime="20180427 15:52:46.782"></status>
</kw>
<msg timestamp="20180427 15:52:46.783" level="INFO">${rStdout} = 24</msg>
<status status="PASS" endtime="20180427 15:52:46.784" starttime="20180427 15:52:46.723"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${rStdout}&gt;0</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:46.785" starttime="20180427 15:52:46.784"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:46.785" starttime="20180427 15:52:34.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************input***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:46.786" level="INFO">Log ***************************************************************************************input***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:46.786" starttime="20180427 15:52:46.786"></status>
</kw>
<kw name="Prepare Snippet/DB/Json for T1/T2/T3/DBgenerator" library="utilities">
<arguments>
<arg>cp -r ${sfilefortest}/VehicleDBGenerate/align/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</arg>
<arg>mysql -udba -pmysql&lt;${sfilefortest}/VehicleDBGenerate/align/dbbak.sql</arg>
<arg>cp ${sfilefortest}/VehicleDBGenerate/align/vehicleDBGen-1490154494078484481-1524734492570.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/</arg>
</arguments>
<kw name="Prepare Work Path And Snippet" library="utilities">
<arguments>
<arg>${pData}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/</arg>
</arguments>
<msg timestamp="20180427 15:52:46.790" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/file_storage/WorkflowManager/unzip/'.</msg>
<msg timestamp="20180427 15:52:46.834" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:46.835" starttime="20180427 15:52:46.789"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/</arg>
</arguments>
<msg timestamp="20180427 15:52:46.836" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/json/'.</msg>
<msg timestamp="20180427 15:52:46.913" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:46.914" starttime="20180427 15:52:46.835"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/</arg>
</arguments>
<msg timestamp="20180427 15:52:46.915" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/SnippetAnalyzer/traj/'.</msg>
<msg timestamp="20180427 15:52:46.960" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:46.961" starttime="20180427 15:52:46.915"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson</arg>
</arguments>
<msg timestamp="20180427 15:52:46.962" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerJson'.</msg>
<msg timestamp="20180427 15:52:47.040" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.040" starttime="20180427 15:52:46.961"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2</arg>
</arguments>
<msg timestamp="20180427 15:52:47.042" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520564939346-2'.</msg>
<msg timestamp="20180427 15:52:47.086" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.086" starttime="20180427 15:52:47.041"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5</arg>
</arguments>
<msg timestamp="20180427 15:52:47.086" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/foregroundDbMergerDebug/debug-1520578465515-5'.</msg>
<msg timestamp="20180427 15:52:47.130" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.131" starttime="20180427 15:52:47.086"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput</arg>
</arguments>
<msg timestamp="20180427 15:52:47.132" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterInput'.</msg>
<msg timestamp="20180427 15:52:47.209" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.210" starttime="20180427 15:52:47.131"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult</arg>
</arguments>
<msg timestamp="20180427 15:52:47.211" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterResult'.</msg>
<msg timestamp="20180427 15:52:47.256" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.256" starttime="20180427 15:52:47.210"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:47.257" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/foregroudDbUpdaterDebug'.</msg>
<msg timestamp="20180427 15:52:47.302" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.303" starttime="20180427 15:52:47.257"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson</arg>
</arguments>
<msg timestamp="20180427 15:52:47.304" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorJson'.</msg>
<msg timestamp="20180427 15:52:47.349" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.350" starttime="20180427 15:52:47.304"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:47.351" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/ForegroundDBMerger/logicInfoExtractorDebug'.</msg>
<msg timestamp="20180427 15:52:47.396" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.396" starttime="20180427 15:52:47.350"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson</arg>
</arguments>
<msg timestamp="20180427 15:52:47.397" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson'.</msg>
<msg timestamp="20180427 15:52:47.475" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.475" starttime="20180427 15:52:47.397"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult</arg>
</arguments>
<msg timestamp="20180427 15:52:47.476" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult'.</msg>
<msg timestamp="20180427 15:52:47.522" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.522" starttime="20180427 15:52:47.476"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug</arg>
</arguments>
<msg timestamp="20180427 15:52:47.524" level="INFO">Executing command 'mkdir -p /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug'.</msg>
<msg timestamp="20180427 15:52:47.569" level="INFO">Command exited with return code 0.</msg>
<status status="PASS" endtime="20180427 15:52:47.569" starttime="20180427 15:52:47.523"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pCopySnippet}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:47.574" level="INFO">${cmd_split} = [u'cp', u'-r', u'~/autotest/filefortest/VehicleDBGenerate/align/WorkflowManager/*', u'/opt/ygomi/roadDB/file_storage/WorkflowManager/']</msg>
<status status="PASS" endtime="20180427 15:52:47.574" starttime="20180427 15:52:47.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:47.575" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:52:47.576" starttime="20180427 15:52:47.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:47.579" starttime="20180427 15:52:47.578"></status>
</kw>
<msg timestamp="20180427 15:52:47.579" level="INFO">${cmd} = cp -r ~/autotest/filefortest/VehicleDBGenerate/align/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/</msg>
<status status="PASS" endtime="20180427 15:52:47.579" starttime="20180427 15:52:47.576"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:47.581" level="INFO">Executing command 'cp -r ~/autotest/filefortest/VehicleDBGenerate/align/WorkflowManager/* /opt/ygomi/roadDB/file_storage/WorkflowManager/'.</msg>
<msg timestamp="20180427 15:52:47.697" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:47.698" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:47.698" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:47.698" starttime="20180427 15:52:47.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:47.699" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:47.700" starttime="20180427 15:52:47.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:47.701" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:47.701" starttime="20180427 15:52:47.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:47.702" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:47.702" starttime="20180427 15:52:47.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:47.703" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:47.704" starttime="20180427 15:52:47.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:47.705" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:47.705" starttime="20180427 15:52:47.704"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:47.705" starttime="20180427 15:52:47.570"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:47.706" starttime="20180427 15:52:46.788"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>${pDBdata}</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:47.708" level="INFO">Executing command 'mysql -udba -pmysql&lt;~/autotest/filefortest/VehicleDBGenerate/align/dbbak.sql'.</msg>
<msg timestamp="20180427 15:52:49.324" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:49.325" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:49.326" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:49.326" starttime="20180427 15:52:47.707"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:49.327" starttime="20180427 15:52:49.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:49.327" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:49.327" starttime="20180427 15:52:49.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:49.328" starttime="20180427 15:52:49.327"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:49.328" starttime="20180427 15:52:47.706"></status>
</kw>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>${pJson}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:49.329" level="INFO">${cmd_split} = [u'cp', u'~/autotest/filefortest/VehicleDBGenerate/align/vehicleDBGen-1490154494078484481-1524734492570.json', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/']</msg>
<status status="PASS" endtime="20180427 15:52:49.329" starttime="20180427 15:52:49.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:49.330" level="INFO">${cmd_type} = cp</msg>
<status status="PASS" endtime="20180427 15:52:49.330" starttime="20180427 15:52:49.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:49.331" starttime="20180427 15:52:49.331"></status>
</kw>
<msg timestamp="20180427 15:52:49.331" level="INFO">${cmd} = cp ~/autotest/filefortest/VehicleDBGenerate/align/vehicleDBGen-1490154494078484481-1524734492570.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/</msg>
<status status="PASS" endtime="20180427 15:52:49.331" starttime="20180427 15:52:49.330"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:49.332" level="INFO">Executing command 'cp ~/autotest/filefortest/VehicleDBGenerate/align/vehicleDBGen-1490154494078484481-1524734492570.json /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/'.</msg>
<msg timestamp="20180427 15:52:49.409" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:49.409" level="INFO">${stdout} = </msg>
<msg timestamp="20180427 15:52:49.410" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:49.410" starttime="20180427 15:52:49.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:49.411" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:49.411" starttime="20180427 15:52:49.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:49.412" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:49.413" starttime="20180427 15:52:49.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:49.414" level="INFO">${rStdout} = </msg>
<status status="PASS" endtime="20180427 15:52:49.414" starttime="20180427 15:52:49.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:49.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:49.415" starttime="20180427 15:52:49.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:49.416" level="INFO"></msg>
<status status="PASS" endtime="20180427 15:52:49.417" starttime="20180427 15:52:49.416"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:49.417" starttime="20180427 15:52:49.328"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:49.418" starttime="20180427 15:52:46.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************execute***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:49.419" level="INFO">Log ***************************************************************************************execute***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:49.419" starttime="20180427 15:52:49.418"></status>
</kw>
<kw name="Execute Mysql Command" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/bin/vehicleDBGenerator \ --ijson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524734492570.json \ --d \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug \ --ojson \ /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json \ --pcfg \ /opt/ygomi/roadDB/etc/config \ --manual \ --ol ${sOutput}/VehicleDBGenerator</arg>
</arguments>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:49.421" level="INFO">Executing command '/opt/ygomi/roadDB/bin/vehicleDBGenerator  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524734492570.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol ~/autotest/output/VehicleDBGenerator'.</msg>
<msg timestamp="20180427 15:52:50.052" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:50.053" level="INFO">${stdout} = [2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] ENTER FUNCTION: main (vehicleDBGenerator.cpp::43)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] module command: /op...</msg>
<msg timestamp="20180427 15:52:50.054" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:50.054" starttime="20180427 15:52:49.421"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Close Connection</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:50.055" starttime="20180427 15:52:50.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.056" level="INFO">[2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] ENTER FUNCTION: main (vehicleDBGenerator.cpp::43)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] module command: /opt/ygomi/roadDB/bin/vehicleDBGenerator  --ijson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenJson/vehicleDBGen-1490154494078484481-1524734492570.json  --d  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug  --ojson  /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json  --pcfg  /opt/ygomi/roadDB/etc/config  --manual  --ol  /home/roaddb/autotest/output/VehicleDBGenerator   (otherFuns.h::410)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] Version: 2018.0425.1200
 (otherFuns.h::399)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "DBStamp": "1524734492570",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] input.endPoint: 00-1C-42-4C-25-5C (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:119)
[2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] input.dbStamp: 1524734492570 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:120)
[2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] input.transactionID: 2 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:121)
[2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] input.accessDomain: http://127.0.0.1:8080 (vehicleDBGeneratorExecute.cpp:vehicleDBExtractorJson:122)
[2018-04-27 15:52:50.058][vehicleDBGenerator][debug][24288] [SYS] ENTER FUNCTION: rdbVehicleDBGenerator (rdbVehicleDBGenerator.cpp::82)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [COM] {
    "DivisionList": [
        "1490154494078484481",
        "1490154494078484482"
    ],
    "DBStamp": "1524734492570",
    "EndPoint": "00-1C-42-4C-25-5C",
    "Domain": "http:\/\/127.0.0.1:8080",
    "TransactionID": "2"
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SYS] Log level: 0 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:96)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SYS] VehicleDB Version: 4 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:97)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] config file path:/opt/ygomi/roadDB/etc/config (Threshold.cpp::98)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] **************************************************************** (Threshold.cpp::193)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] *******************echo_config_options begin******************** (Threshold.cpp::194)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] reprojectErrSquare:11.22999954, reprojectErrRemoveMappoint:10 (Threshold.cpp::195)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] GpsDeviatedTh:20, RemoveMapPointDistTh:800 (Threshold.cpp::197)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] OverReprojectPerTh:0.150000006, DeviatedPerTh:0.150000006 (Threshold.cpp::198)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] DirectionAngleTh:5, DirectionAngleWaveTh:5 (Threshold.cpp::199)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] TrajectoryLenTh:100, AvgKFNumTh:10 (Threshold.cpp::200)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] AvgMpObsNumTh:2, AvgKFConnectNumTh:2 (Threshold.cpp::201)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] BaseGPSStandardErr_:7, BaseGPSMeanErr_:10, TrajectoryQuality:10, MaxReferences:5 (Threshold.cpp::202)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] StandardNodeDistance:2000, MaxNodeDistance:2828, ExtendLength:80, pathSearchRegion:30, pathCheckSpan:10, bEnableGrow:0, bCheckQualityAfterCut:1, bCheckQualityBeforeCut:1, refConfidenceTh:1 (Threshold.cpp::204)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] incrementNum:1 (Threshold.cpp::209)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] referenceNum:1 (Threshold.cpp::210)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] minMpConfidence: 1 (Threshold.cpp::211)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] minOptNum: 2, maxLongitudinalShift:2.700000048, maxLateralShift:35, maxDownShift:0.8000000119, maxUpShift:-1 (Threshold.cpp::213)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] maxObserverNumForDB:65530, maxObserverNumForOpt:64 (Threshold.cpp::216)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] percentOfDivisionMinNum: 0.3000000119, percentOfMinNumOfDivisionWithoutOptimization: 0.3000000119, maxTimeOfLastDivisionOptimization: 3600, minNumOfIncSnippet: 10 (Threshold.cpp::219)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] afterCutThreshold: 7 (Threshold.cpp::224)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] selfDirectionAngleShiftXYZ: 17 (Threshold.cpp::226)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] bEnableFCM: 0 IncSupplyMPObsThresh: 70 optimizeNumber:20 (Threshold.cpp::227)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] *******************echo_config_options end******************** (Threshold.cpp::228)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] ************************************************************** (Threshold.cpp::229)
[2018-04-27 15:52:50.058][vehicleDBGenerator][info][24288] [SAM] create folder:/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebug/server_2018-04-27_15-52-50_24288 (DebugInfoPath.cpp::58)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] refSeg id is: 346953630 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:113)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] ==========init backendDTAdapter layer========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:115)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] affected geoDivision id num: 2 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:122)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] affected geoDivision ids are: (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:123)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:125)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484481 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:128)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484482 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:128)
[2018-04-27 15:52:50.059][vehicleDBGenerator][info][24288] [SYS] ##########END########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:130)
[2018-04-27 15:52:50.062][vehicleDBGenerator][debug][24288] [SYS] AWS SDK log level: 6 (AwsResourceManager.cpp:initAws:115)
[2018-04-27 15:52:50.062][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.070][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.070][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.076][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.076][vehicleDBGenerator][info][24288] [SYS] Backend Data Access instance has been created successfully. (BackendDataTransfer.cpp:initialize:72)
[2018-04-27 15:52:50.076][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] ==========Algorithm read backendDb from mysql========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:155)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SAM] ### Module:fromCacheDB Beginning ### (DatabaseManager.cpp::52)
[2018-04-27 15:52:50.086][vehicleDBGenerator][warning][24288] [SYS] Input segmentIDs is empty for getPassedDivisionIDs! (BackendDARestful.cpp:getPassedDivisionIDs:254)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] passed geoDivision IDs num is: 2 (BackendDTAdapter.cpp:getDivisionID:74)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] ids:  (BackendDTAdapter.cpp:getDivisionID:75)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (BackendDTAdapter.cpp:getDivisionID:76)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484481 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484482 (BackendDTAdapter.cpp:getDivisionID:79)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] ##########END########## (BackendDTAdapter.cpp:getDivisionID:81)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SAM] Ref Gps:-83.07861328 42.48413086 0 (ServerDbHelper.cpp::1318)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SAM] get divisions:2 from backendDB (DatabaseManager.cpp::72)
[2018-04-27 15:52:50.086][vehicleDBGenerator][debug][24288] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:50.086][vehicleDBGenerator][info][24288] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:52:50.087][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.101][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.101][vehicleDBGenerator][info][24288] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:52:50.101][vehicleDBGenerator][info][24288] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:52:50.101][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:52:50.101][vehicleDBGenerator][info][24288] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:52:50.101][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.123][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.150][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.163][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.163][vehicleDBGenerator][debug][24288] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:52:50.163][vehicleDBGenerator][info][24288] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:52:50.163][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:52:50.163][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484481 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:52:50.163][vehicleDBGenerator][info][24288] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:52:50.163][vehicleDBGenerator][debug][24288] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] geoDivision id:1490154494078484481 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 division original id: 9248866158155661316 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 division curveLen: 116.8546371 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 node A: id 1490154495152226305 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	        lat 787.036499 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	        Lon 703.0023804 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 node B: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] 	 	       1490154494078484482 (DivisionDetailCheck.cpp:CheckData:66)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS]              reference id:1490154496225968130 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS]              original id:9248952813583597576 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS]              reference id:1490154496225968131 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS]              original id:9248952813583597580 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS]              reference id:1490154496225968129 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS]              original id:9248952813583597572 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:52:50.164][vehicleDBGenerator][debug][24288] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:50.164][vehicleDBGenerator][debug][24288] [SAM] add node:1490154495152226305 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:50.164][vehicleDBGenerator][debug][24288] [SAM] add node:1490154495152226306 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SAM] create section: 1490154494078484481 between:1490154495152226305-&gt;1490154495152226306 (ServerDbHelper.cpp::729)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SAM] Section:1490154494078484481 add Reference: 1490154496225968130 (ServerSection.cpp::73)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SAM] Section:1490154494078484481 add Reference: 1490154496225968131 (ServerSection.cpp::73)
[2018-04-27 15:52:50.164][vehicleDBGenerator][info][24288] [SAM] Section:1490154494078484481 add Reference: 1490154496225968129 (ServerSection.cpp::73)
[2018-04-27 15:52:50.206][vehicleDBGenerator][debug][24288] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:52:50.207][vehicleDBGenerator][debug][24288] [SAM] Read division:1490154494078484481 right_nebor:1490154494078484482 (ServerDbHelper.cpp::750)
[2018-04-27 15:52:50.207][vehicleDBGenerator][debug][24288] [SAM] Division:1490154494078484481read overlap:79 (ServerDbHelper.cpp::1186)
[2018-04-27 15:52:50.207][vehicleDBGenerator][debug][24288] [SYS] ENTER FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:50.207][vehicleDBGenerator][info][24288] [SYS] ==========BEGIN TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:276)
[2018-04-27 15:52:50.207][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.221][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.222][vehicleDBGenerator][info][24288] [SYS] division detail list: (BackendDataTransfer.cpp:getDetailDivisions:293)
[2018-04-27 15:52:50.222][vehicleDBGenerator][info][24288] [SYS] DBDivisionDetail count : 0 (otherFuns.cpp:print:398)
[2018-04-27 15:52:50.222][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (otherFuns.cpp:print:399)
[2018-04-27 15:52:50.222][vehicleDBGenerator][info][24288] [SYS] ##########END########## (otherFuns.cpp:print:418)
[2018-04-27 15:52:50.222][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.242][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.265][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.278][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.278][vehicleDBGenerator][debug][24288] [SYS] 1 geoDivision has been read from backendData (BackendDataTransfer.cpp:getDetailDivisions:314)
[2018-04-27 15:52:50.278][vehicleDBGenerator][info][24288] [SYS] ids: (BackendDataTransfer.cpp:getDetailDivisions:315)
[2018-04-27 15:52:50.278][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (BackendDataTransfer.cpp:getDetailDivisions:316)
[2018-04-27 15:52:50.278][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484482 (BackendDataTransfer.cpp:getDetailDivisions:319)
[2018-04-27 15:52:50.278][vehicleDBGenerator][info][24288] [SYS] ##########END########## (BackendDataTransfer.cpp:getDetailDivisions:321)
[2018-04-27 15:52:50.278][vehicleDBGenerator][debug][24288] [SYS] 1 divisions have been read from backendData with node filter (BackendDataTransfer.cpp:getDetailDivisions:353)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] start checking geoDivisions data (BackendDataTransfer.cpp:getDetailDivisions:388)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] start checking division details (DivisionDetailCheck.cpp:CheckData:36)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (DivisionDetailCheck.cpp:CheckData:37)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] CHECK_CONDITION_E: 0 (DivisionDetailCheck.cpp:CheckData:40)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] geoDivision id:1490154494078484482 (DivisionDetailCheck.cpp:CheckData:41)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 division original id: 9248866158155661317 (DivisionDetailCheck.cpp:CheckData:42)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 division curveLen: 115.8938828 (DivisionDetailCheck.cpp:CheckData:43)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 division status: 0 (DivisionDetailCheck.cpp:CheckData:44)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 node A: id 1490154495152226306 (DivisionDetailCheck.cpp:CheckData:45)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:46)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	        lat 783.7040405 (DivisionDetailCheck.cpp:CheckData:47)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	        Lon 585.3458252 (DivisionDetailCheck.cpp:CheckData:48)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:49)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 node B: id 1490154495152226307 (DivisionDetailCheck.cpp:CheckData:50)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	  original id 0 (DivisionDetailCheck.cpp:CheckData:51)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	        lat 779.9271851 (DivisionDetailCheck.cpp:CheckData:52)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	        Lon 469.6625977 (DivisionDetailCheck.cpp:CheckData:53)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	        alt 0 (DivisionDetailCheck.cpp:CheckData:54)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	 leftNeighbour:  (DivisionDetailCheck.cpp:CheckData:55)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	       1490154494078484481 (DivisionDetailCheck.cpp:CheckData:59)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] 	 	 rightNeighbour: (DivisionDetailCheck.cpp:CheckData:62)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS]              reference id:1490154496225968133 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS]              original id:9248952813583597577 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS]              reference id:1490154496225968134 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS]              original id:9248952813583597581 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS]              reference id:1490154496225968132 (DivisionDetailCheck.cpp:CheckData:71)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS]              original id:9248952813583597573 (DivisionDetailCheck.cpp:CheckData:72)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] ##########END########## (DivisionDetailCheck.cpp:CheckData:105)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] read divisions from backend Data, division count:1 (BackendDataTransfer.cpp:getDetailDivisions:397)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SYS] ==========END TO READ DIVISIONS PROCESS========== (BackendDataTransfer.cpp:getDetailDivisions:399)
[2018-04-27 15:52:50.279][vehicleDBGenerator][debug][24288] [SYS] LEAVE FUNCTION: getDetailDivisions (BackendDataTransfer.cpp::271)
[2018-04-27 15:52:50.279][vehicleDBGenerator][debug][24288] [SAM] add node:1490154495152226307 (ServerDbHelper.cpp::773)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SAM] create section: 1490154494078484482 between:1490154495152226306-&gt;1490154495152226307 (ServerDbHelper.cpp::729)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SAM] Section:1490154494078484482 add Reference: 1490154496225968133 (ServerSection.cpp::73)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SAM] Section:1490154494078484482 add Reference: 1490154496225968134 (ServerSection.cpp::73)
[2018-04-27 15:52:50.279][vehicleDBGenerator][info][24288] [SAM] Section:1490154494078484482 add Reference: 1490154496225968132 (ServerSection.cpp::73)
[2018-04-27 15:52:50.315][vehicleDBGenerator][debug][24288] [SAM] Free kf : num: 0 (ServerDbHelper.cpp::1166)
[2018-04-27 15:52:50.315][vehicleDBGenerator][debug][24288] [SAM] Read division:1490154494078484482 left_nebor:1490154494078484481 (ServerDbHelper.cpp::742)
[2018-04-27 15:52:50.315][vehicleDBGenerator][info][24288] [SAM] begin rebuildNeighborRelation (DatabaseManager.cpp::97)
[2018-04-27 15:52:50.316][vehicleDBGenerator][debug][24288] [SAM] restore division neighbor (ServerDbHelper.cpp::1424)
[2018-04-27 15:52:50.316][vehicleDBGenerator][info][24288] [SAM] 1490154494078484481 add right neighbor:1490154494078484482 (ServerSection.cpp::242)
[2018-04-27 15:52:50.316][vehicleDBGenerator][info][24288] [SAM] 1490154494078484482 add left neighbor:1490154494078484481 (ServerSection.cpp::248)
[2018-04-27 15:52:50.316][vehicleDBGenerator][info][24288] [SAM] begin restoreDBOverlap (DatabaseManager.cpp::104)
[2018-04-27 15:52:50.319][vehicleDBGenerator][info][24288] [SAM] restore overlap:79 in division:1490154494078484481 (ServerDbHelper.cpp::1274)
[2018-04-27 15:52:50.319][vehicleDBGenerator][debug][24288] [SAM] SecRefID4481-8130 have 28 anchorKF pairs TO SecRefID4482::8133 with conf: 9.756999969 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:50.319][vehicleDBGenerator][debug][24288] [SAM] SecRefID4481-8131 have 27 anchorKF pairs TO SecRefID4482::8134 with conf: 9.868599892 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:50.319][vehicleDBGenerator][debug][24288] [SAM] SecRefID4481-8129 have 21 anchorKF pairs TO SecRefID4482::8132 with conf: 15.87300014 (ServerDbHelper.cpp::1280)
[2018-04-27 15:52:50.319][vehicleDBGenerator][info][24288] [SAM] ### Module:fromCacheDB Ending ### (DatabaseManager.cpp::111)
[2018-04-27 15:52:50.319][vehicleDBGenerator][info][24288] [SAM] str_id: fromCacheDB  end: 57170319  start: 57170086  total:233(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:52:50.319][vehicleDBGenerator][info][24288] [SYS] ==========finish reading backendDb========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:172)
[2018-04-27 15:52:50.319][vehicleDBGenerator][info][24288] [SYS] ==========Algorithm extract reference========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:175)
[2018-04-27 15:52:50.319][vehicleDBGenerator][info][24288] [SAM] ### Module:extractFlow Beginning ### (AlgoServerExtractorImp.cpp::117)
[2018-04-27 15:52:50.379][vehicleDBGenerator][info][24288] [SAM] ### Module:extractFlow Ending ### (AlgoServerExtractorImp.cpp::155)
[2018-04-27 15:52:50.379][vehicleDBGenerator][info][24288] [SYS] ==========finish extracting reference========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:190)
[2018-04-27 15:52:50.379][vehicleDBGenerator][info][24288] [SYS] ==========start to write vehicle DB========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:193)
[2018-04-27 15:52:50.379][vehicleDBGenerator][info][24288] [SYS] ==========init VehicleDataTransfer========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:196)
[2018-04-27 15:52:50.379][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.386][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.386][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.392][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.392][vehicleDBGenerator][info][24288] [SYS] ==========save vehicleDb Data========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:214)
[2018-04-27 15:52:50.392][vehicleDBGenerator][info][24288] [SYS] manual mode(true) : beginTransaction ! (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:220)
[2018-04-27 15:52:50.392][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.398][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.398][vehicleDBGenerator][debug][24288] [SYS] TransactionID: 2 (VehicleDARestful.cpp:beginTransaction:449)
[2018-04-27 15:52:50.398][vehicleDBGenerator][info][24288] [SAM] ### Module:toVehicleDB Beginning ### (DatabaseManager.cpp::206)
[2018-04-27 15:52:50.398][vehicleDBGenerator][debug][24288] [SAM] write sec:1490154494078484481right_nebor:1490154494078484482 type:0 (VehicleDbHelper.cpp::102)
[2018-04-27 15:52:50.417][vehicleDBGenerator][debug][24288] [SAM] write sec:1490154494078484482left_nebor:1490154494078484481 type:0 (VehicleDbHelper.cpp::86)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] Vehicle Data size is: 2 (VehicleDataTransfer.cpp:addVehicleSections:86)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] list input vehicle sections: (VehicleDataTransfer.cpp:addVehicleSections:87)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (VehicleDataTransfer.cpp:addVehicleSections:88)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	vehicleSection id: 1490154494078484481 (VehicleDataTransfer.cpp:addVehicleSections:91)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	nodeA id: 1490154495152226305 (VehicleDataTransfer.cpp:addVehicleSections:92)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	nodeB id: 1490154495152226306 (VehicleDataTransfer.cpp:addVehicleSections:93)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	VehicleReference id: (VehicleDataTransfer.cpp:addVehicleSections:94)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 		1490154496225968129 (VehicleDataTransfer.cpp:addVehicleSections:97)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	vehicleSection id: 1490154494078484482 (VehicleDataTransfer.cpp:addVehicleSections:91)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	nodeA id: 1490154495152226306 (VehicleDataTransfer.cpp:addVehicleSections:92)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	nodeB id: 1490154495152226307 (VehicleDataTransfer.cpp:addVehicleSections:93)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 	VehicleReference id: (VehicleDataTransfer.cpp:addVehicleSections:94)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] 		1490154496225968132 (VehicleDataTransfer.cpp:addVehicleSections:97)
[2018-04-27 15:52:50.430][vehicleDBGenerator][info][24288] [SYS] ##########END########## (VehicleDataTransfer.cpp:addVehicleSections:100)
[2018-04-27 15:52:50.431][vehicleDBGenerator][debug][24288] [SYS] ENTER FUNCTION: addVehicleSections (VehicleDARestful.cpp::60)
[2018-04-27 15:52:50.431][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleReference] write one reference every time (VehicleDARestful.cpp:addVehicleSections:76)
[2018-04-27 15:52:50.432][vehicleDBGenerator][debug][24288] [SYS] divisionID : 1490154494078484481  referenceID : 1490154496225968129 (VehicleDARestful.cpp:addVehicleSections:91)
[2018-04-27 15:52:50.432][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleReference] mapReference size: 1 (VehicleDARestful.cpp:addReference:240)
[2018-04-27 15:52:50.432][vehicleDBGenerator][debug][24288] [SYS] ADD Reference path: /data?transaction_id=2 (VehicleDARestful.cpp:addReference:241)
[2018-04-27 15:52:50.432][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.440][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.456][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.473][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.474][vehicleDBGenerator][debug][24288] [SYS]   nodeA id : 1490154495152226305  nodeB id : 1490154495152226306 (VehicleDARestful.cpp:addVehicleSections:107)
[2018-04-27 15:52:50.474][vehicleDBGenerator][debug][24288] [SYS] reference size : 1 (VehicleDARestful.cpp:addVehicleSections:109)
[2018-04-27 15:52:50.475][vehicleDBGenerator][debug][24288] [SYS] divisionID : 1490154494078484482  referenceID : 1490154496225968132 (VehicleDARestful.cpp:addVehicleSections:91)
[2018-04-27 15:52:50.475][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleReference] mapReference size: 1 (VehicleDARestful.cpp:addReference:240)
[2018-04-27 15:52:50.475][vehicleDBGenerator][debug][24288] [SYS] ADD Reference path: /data?transaction_id=2 (VehicleDARestful.cpp:addReference:241)
[2018-04-27 15:52:50.475][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.484][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.496][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.507][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.507][vehicleDBGenerator][debug][24288] [SYS]   nodeA id : 1490154495152226306  nodeB id : 1490154495152226307 (VehicleDARestful.cpp:addVehicleSections:107)
[2018-04-27 15:52:50.508][vehicleDBGenerator][debug][24288] [SYS] reference size : 1 (VehicleDARestful.cpp:addVehicleSections:109)
[2018-04-27 15:52:50.508][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleSection] write all divisions (VehicleDARestful.cpp:addVehicleSections:112)
[2018-04-27 15:52:50.508][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleSection] mapDivision size: 1 (VehicleDARestful.cpp:addDivision:188)
[2018-04-27 15:52:50.508][vehicleDBGenerator][debug][24288] [SYS] ADD division path : /data?transaction_id=2 (VehicleDARestful.cpp:addDivision:189)
[2018-04-27 15:52:50.508][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.530][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.530][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleNode] write all nodes (VehicleDARestful.cpp:addVehicleSections:129)
[2018-04-27 15:52:50.530][vehicleDBGenerator][debug][24288] [SYS] [Write VehicleNode] node size: 3 (VehicleDARestful.cpp:addNode:391)
[2018-04-27 15:52:50.530][vehicleDBGenerator][debug][24288] [SYS] ADD Node path : /data?transaction_id=2 (VehicleDARestful.cpp:addNode:392)
[2018-04-27 15:52:50.530][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.549][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.550][vehicleDBGenerator][debug][24288] [SYS] LEAVE FUNCTION: addVehicleSections (VehicleDARestful.cpp::60)
[2018-04-27 15:52:50.550][vehicleDBGenerator][info][24288] [SAM] ### Module:toVehicleDB Ending ### (DatabaseManager.cpp::246)
[2018-04-27 15:52:50.551][vehicleDBGenerator][info][24288] [SAM] str_id: toVehicleDB  end: 57170551  start: 57170398  total:153(ms) (PerformanceAnalysis.cpp::39)
[2018-04-27 15:52:50.551][vehicleDBGenerator][info][24288] [SYS] ==========finish saving vehicleDb========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:244)
[2018-04-27 15:52:50.551][vehicleDBGenerator][info][24288] [SYS] manual mode(true) : endTransaction ! (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:248)
[2018-04-27 15:52:50.551][vehicleDBGenerator][info][24288] [SYS] Max Request number: 5 (RestDBClient.cpp:makeRequests:114)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] Making request number: 1 (RestDBClient.cpp:makeRequests:120)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] ==========save geoDivisions into jsons========== (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:265)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] adding new geoDivisions into jsons, division size is: 2 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:276)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] ids:  (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:278)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] ##########BEGIN########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:279)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484481 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:282)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] 	 geoDivision 1490154494078484482 (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:282)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] ##########END########## (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:284)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] result json file name is: /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:291)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] 	 content is: (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:292)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [COM] JSON format: (roadDBJson.cpp::283)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [COM] {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}
 (roadDBJson.cpp::284)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] end to write vehicle DB (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:297)
[2018-04-27 15:52:50.621][vehicleDBGenerator][info][24288] [SYS] end vehicleDBGenerator run. (rdbVehicleDBGenerator.cpp:rdbVehicleDBGenerator:298)
[2018-04-27 15:52:50.632][vehicleDBGenerator][debug][24288] [SYS] LEAVE FUNCTION: rdbVehicleDBGenerator (rdbVehicleDBGenerator.cpp::82)
[2018-04-27 15:52:50.632][vehicleDBGenerator][info][24288] [SYS] vehicleDBGeneratorMain return ok, value:0, fwRet: 0 (vehicleDBGenerator.cpp:main:66)
[2018-04-27 15:52:50.632][vehicleDBGenerator][debug][24288] [SYS] LEAVE FUNCTION: main (vehicleDBGenerator.cpp::43)</msg>
<status status="PASS" endtime="20180427 15:52:50.057" starttime="20180427 15:52:50.055"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:50.059" starttime="20180427 15:52:50.058"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.059" starttime="20180427 15:52:49.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Log ***************************************************************************************result check***************************************************************************************</arg>
</arguments>
<msg timestamp="20180427 15:52:50.060" level="INFO">Log ***************************************************************************************result check***************************************************************************************</msg>
<status status="PASS" endtime="20180427 15:52:50.060" starttime="20180427 15:52:50.059"></status>
</kw>
<kw name="Check Keyvalue" library="utilities">
<arguments>
<arg>/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json</arg>
<arg>"Status"</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<kw name="Execute My Command" library="utilities">
<arguments>
<arg>python -mjson.tool ${pJsonPath}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${pCommand}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${cmd_split}</var>
</assign>
<msg timestamp="20180427 15:52:50.064" level="INFO">${cmd_split} = [u'python', u'-mjson.tool', u'/opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json']</msg>
<status status="PASS" endtime="20180427 15:52:50.064" starttime="20180427 15:52:50.063"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${cmd_split[0]}</arg>
</arguments>
<assign>
<var>${cmd_type}</var>
</assign>
<msg timestamp="20180427 15:52:50.066" level="INFO">${cmd_type} = python</msg>
<status status="PASS" endtime="20180427 15:52:50.066" starttime="20180427 15:52:50.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${cmd_type}" == "rm" and "${sOsType}" == "ubuntu"</arg>
<arg>Set Variable</arg>
<arg>sudo ${pCommand}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>${cmd}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:50.068" starttime="20180427 15:52:50.068"></status>
</kw>
<msg timestamp="20180427 15:52:50.068" level="INFO">${cmd} = python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json</msg>
<status status="PASS" endtime="20180427 15:52:50.069" starttime="20180427 15:52:50.066"></status>
</kw>
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>${cmd}</arg>
<arg>return_stdout=True</arg>
<arg>return_rc=True</arg>
</arguments>
<assign>
<var>${stdout}</var>
<var>${rc}</var>
</assign>
<msg timestamp="20180427 15:52:50.070" level="INFO">Executing command 'python -mjson.tool /opt/ygomi/roadDB/work_path/WorkflowManager/VehicleDBGenerate/vehicleDBGenDebugResult/result-1490160614406881281-1520582306248.json'.</msg>
<msg timestamp="20180427 15:52:50.109" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180427 15:52:50.110" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status...</msg>
<msg timestamp="20180427 15:52:50.110" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20180427 15:52:50.110" starttime="20180427 15:52:50.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.111" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:52:50.112" starttime="20180427 15:52:50.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rc}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.113" level="INFO">0</msg>
<status status="PASS" endtime="20180427 15:52:50.113" starttime="20180427 15:52:50.112"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${rStdout}</var>
</assign>
<msg timestamp="20180427 15:52:50.114" level="INFO">${rStdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status...</msg>
<status status="PASS" endtime="20180427 15:52:50.114" starttime="20180427 15:52:50.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20180427 15:52:50.115" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:50.116" starttime="20180427 15:52:50.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${rStdout}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.117" level="INFO">{
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status": "0"
        }
    ]
}</msg>
<status status="PASS" endtime="20180427 15:52:50.117" starttime="20180427 15:52:50.116"></status>
</kw>
<msg timestamp="20180427 15:52:50.117" level="INFO">${stdout} = {
    "DivisionStatus": [
        {
            "DivisionID": "1490154494078484481",
            "Status": "0"
        },
        {
            "DivisionID": "1490154494078484482",
            "Status...</msg>
<status status="PASS" endtime="20180427 15:52:50.118" starttime="20180427 15:52:50.062"></status>
</kw>
<kw name="Get Lines Containing String" library="String">
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${pKeyValue}</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180427 15:52:50.119" level="INFO">2 out of 12 lines matched</msg>
<msg timestamp="20180427 15:52:50.119" level="INFO">${Value} =             "Status": "0"
            "Status": "0"</msg>
<status status="PASS" endtime="20180427 15:52:50.119" starttime="20180427 15:52:50.118"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>\n</arg>
</arguments>
<assign>
<var>@{rKeyValueList}</var>
</assign>
<msg timestamp="20180427 15:52:50.121" level="INFO">@{rKeyValueList} = [             "Status": "0" |             "Status": "0" ]</msg>
<status status="PASS" endtime="20180427 15:52:50.121" starttime="20180427 15:52:50.120"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{rKeyValueList}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.122" level="INFO">            "Status": "0"</msg>
<msg timestamp="20180427 15:52:50.122" level="INFO">            "Status": "0"</msg>
<status status="PASS" endtime="20180427 15:52:50.122" starttime="20180427 15:52:50.121"></status>
</kw>
<msg timestamp="20180427 15:52:50.123" level="INFO">@{rKeyValueList} = [             "Status": "0" |             "Status": "0" ]</msg>
<status status="PASS" endtime="20180427 15:52:50.123" starttime="20180427 15:52:50.061"></status>
</kw>
<kw name="Varify KeyValue" library="utilities">
<arguments>
<arg>${0}</arg>
<arg>@{rKeyValueList}</arg>
</arguments>
<kw type="for" name="${KeyValue} IN [ @{pKeyValueList} ]">
<kw type="foritem" name="${KeyValue} =             &quot;Status&quot;: &quot;0&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:50.127" level="INFO">${words} = [u'"Status":', u'"0"']</msg>
<status status="PASS" endtime="20180427 15:52:50.127" starttime="20180427 15:52:50.126"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:50.128" level="INFO">${key} = [u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:50.129" starttime="20180427 15:52:50.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.129" level="INFO">[u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:50.130" starttime="20180427 15:52:50.129"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.131" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:50.131" starttime="20180427 15:52:50.130"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.131" starttime="20180427 15:52:50.125"></status>
</kw>
<kw type="foritem" name="${KeyValue} =             &quot;Status&quot;: &quot;0&quot;">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${KeyValue}</arg>
</arguments>
<assign>
<var>${words}</var>
</assign>
<msg timestamp="20180427 15:52:50.133" level="INFO">${words} = [u'"Status":', u'"0"']</msg>
<status status="PASS" endtime="20180427 15:52:50.133" starttime="20180427 15:52:50.132"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${words[1]}</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${key}</var>
</assign>
<msg timestamp="20180427 15:52:50.134" level="INFO">${key} = [u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:50.134" starttime="20180427 15:52:50.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${key}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.134" level="INFO">[u'', u'0', u'']</msg>
<status status="PASS" endtime="20180427 15:52:50.134" starttime="20180427 15:52:50.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key[1]}</arg>
<arg>${pValue}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.135" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:50.135" starttime="20180427 15:52:50.135"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.136" starttime="20180427 15:52:50.131"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.136" starttime="20180427 15:52:50.125"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.136" starttime="20180427 15:52:50.124"></status>
</kw>
<kw name="Query ForegroundvehicleDB Keyfield" library="utilities">
<arguments>
<arg>select count(*) from divisions;</arg>
<arg>4</arg>
</arguments>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>vehicle_foregrounddb</arg>
<arg>dba</arg>
<arg>mysql</arg>
<arg>${sIP}</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20180427 15:52:50.137" level="INFO">Connecting using : pymysql.connect(db=vehicle_foregrounddb, user=dba, passwd=mysql, host=10.69.143.202, port=3306, charset=None) </msg>
<status status="PASS" endtime="20180427 15:52:50.141" starttime="20180427 15:52:50.137"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>${pCommand}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20180427 15:52:50.142" level="INFO">Executing : Query  |  select count(*) from divisions; </msg>
<msg timestamp="20180427 15:52:50.144" level="INFO">@{result} = [ (4,) ]</msg>
<status status="PASS" endtime="20180427 15:52:50.144" starttime="20180427 15:52:50.142"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>@{result}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.145" level="INFO">(4,)</msg>
<status status="PASS" endtime="20180427 15:52:50.145" starttime="20180427 15:52:50.144"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20180427 15:52:50.145" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" endtime="20180427 15:52:50.145" starttime="20180427 15:52:50.145"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{Formatresult}</var>
</assign>
<msg timestamp="20180427 15:52:50.146" level="INFO">@{Formatresult} = [ ]</msg>
<status status="PASS" endtime="20180427 15:52:50.146" starttime="20180427 15:52:50.145"></status>
</kw>
<kw type="for" name="${results} IN [ @{result} ]">
<kw type="foritem" name="${results} = (4,)">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Formatresult}</arg>
<arg>${Results[0]}</arg>
</arguments>
<status status="PASS" endtime="20180427 15:52:50.147" starttime="20180427 15:52:50.147"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.147" starttime="20180427 15:52:50.146"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.147" starttime="20180427 15:52:50.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Results[0]}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.148" level="INFO">4</msg>
<status status="PASS" endtime="20180427 15:52:50.148" starttime="20180427 15:52:50.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Formatresult}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.148" level="INFO">[4]</msg>
<status status="PASS" endtime="20180427 15:52:50.148" starttime="20180427 15:52:50.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${pKey}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.148" level="INFO">4</msg>
<status status="PASS" endtime="20180427 15:52:50.148" starttime="20180427 15:52:50.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pKey}</arg>
<arg>${Formatresult[0]}</arg>
</arguments>
<msg timestamp="20180427 15:52:50.149" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20180427 15:52:50.149" starttime="20180427 15:52:50.149"></status>
</kw>
<status status="PASS" endtime="20180427 15:52:50.149" starttime="20180427 15:52:50.136"></status>
</kw>
<doc>| Description | test normal veicleDBGenerater of align  |
| Input | 1.input json |
| | 2.DB |
| Execute | call the command line to process veicleDBGenerater |
| Expect result | 1.output json,with status. |
| | 2.vehicle_foregrounddb.divisions with data |</doc>
<tags>
<tag>level 1</tag>
<tag>normal</tag>
<tag>xianlong.wan</tag>
</tags>
<status status="PASS" endtime="20180427 15:52:50.149" critical="yes" starttime="20180427 15:52:34.607"></status>
</test>
<doc>| Description | test normal veicleDBGenerater of slam/align |
| Input | 1.input json |
| | 2.DB |
| Execute | call the command line to process veicleDBGenerater |
| Expect result | 1.output json,with status. |
| | 2.vehicle_foregrounddb.divisions with data |</doc>
<status status="PASS" endtime="20180427 15:52:50.150" starttime="20180427 15:52:18.980"></status>
</suite>
<status status="PASS" endtime="20180427 15:52:50.152" starttime="20180427 15:49:07.892"></status>
</suite>
<status status="PASS" endtime="20180427 15:52:50.159" starttime="20180427 15:45:24.529"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="22">Critical Tests</stat>
<stat fail="0" pass="22">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="14">level_1</stat>
<stat fail="0" pass="5">level_3</stat>
<stat fail="0" pass="13">normal</stat>
<stat fail="0" pass="1">qian.li</stat>
<stat fail="0" pass="7">Siqi.Zeng</stat>
<stat fail="0" pass="14">xianlong.wan</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Intergration Auto Test" pass="22">Intergration Auto Test</stat>
<stat fail="0" id="s1-s1" name="DB" pass="1">Intergration Auto Test.DB</stat>
<stat fail="0" id="s1-s1-s1" name="DB API Test" pass="1">Intergration Auto Test.DB.DB API Test</stat>
<stat fail="0" id="s1-s2" name="Framework Server" pass="7">Intergration Auto Test.Framework Server</stat>
<stat fail="0" id="s1-s2-s1" name="Backend Server" pass="7">Intergration Auto Test.Framework Server.Backend Server</stat>
<stat fail="0" id="s1-s2-s1-s1" name="Data Process" pass="7">Intergration Auto Test.Framework Server.Backend Server.Data Process</stat>
<stat fail="0" id="s1-s2-s1-s1-s1" name="Data Process API Test" pass="7">Intergration Auto Test.Framework Server.Backend Server.Data Process.Data Process API Test</stat>
<stat fail="0" id="s1-s3" name="System" pass="14">Intergration Auto Test.System</stat>
<stat fail="0" id="s1-s3-s1" name="foregroundDBMerger" pass="2">Intergration Auto Test.System.foregroundDBMerger</stat>
<stat fail="0" id="s1-s3-s2" name="foregroundDBUpdater" pass="2">Intergration Auto Test.System.foregroundDBUpdater</stat>
<stat fail="0" id="s1-s3-s3" name="LogicInfoExtract" pass="1">Intergration Auto Test.System.LogicInfoExtract</stat>
<stat fail="0" id="s1-s3-s4" name="RepairDivisionTool" pass="3">Intergration Auto Test.System.RepairDivisionTool</stat>
<stat fail="0" id="s1-s3-s5" name="SnippetAnalyzer" pass="4">Intergration Auto Test.System.SnippetAnalyzer</stat>
<stat fail="0" id="s1-s3-s6" name="vehicleDBGenerator" pass="2">Intergration Auto Test.System.vehicleDBGenerator</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
